{"version":3,"sources":["../src/behaviour-analytics.js"],"names":["factory","define","amd","window","behaviourAnalytics","incoming","coordsScript","clustersScript","commentsScript","manualScript","deleteScript","logs","users","groups","groupMembers","groupMenu","modules","panelWidth","legendWidth","courseName","iframeURL","positioning","originalPositioning","presetNodes","lordLinks","coordsScale","courseId","userId","allGraphs","allLinks","allScales","allChanges","allNames","allMods","allSetNames","allsKey","lastChange","comments","realUserIds","anonUserIds","langStrings","sessionKey","originalReplayData","ddd","trans","slider","prng","graph","width","height","simulation","graphNodes","graphLinks","linkForce","defaultWeight","linkAlpha","dragAlpha","dragEndAlpha","graphData","studentMenu","timeSlider","sliderValues","sliderHeight","clusterButton","replaying","replayMenu","replayData","replayCentroid","positiveIters","negativeIters","clusterSlider","clusterSliderValue","clusterSliderPanelWidth","logPanel","nodeLegend","nodeBoxes","teacherMenu","colours","colourIndex","modColours","centroidColours","graphing","clustering","clusterIters","clusterAnimInterval","useDefaultConcave","concaveHullDistance","curveType","hullOpacity","hullCentroids","scaledCentroids","centroids","oldCentroids","noCentroidMouse","noNodeMouse","iframeStaticPos","iframeRight","inIframe","version36","showStudentNames","convergenceDistance","dragEndTime","dragstartedFunc","draggedFunc","dragendedFunc","rightClickFunc","nodeRadius","coordsData","animTime","gotAllNodes","manualClusters","manualCentroids","haveManualClustering","centroidDragTime","replayUserId","isResearcher","clickData","useGeometricCentroids","debugCentroids","serverCentroids","init","members","mods","panelwidth","legendwidth","name","iframeurl","showstudentnames","nodecoords","links","courseid","userid","scale","graphs","alllinks","scales","changes","names","allmods","setnames","lastchange","strings","coordsscript","clustersscript","commentsscript","manualscript","deletescript","sesskey","gotallnodes","debugcentroids","isresearcher","replaydata","dataDrivenDocs","noUiSlider","MT","mersenneTwister","getColours","Date","now","transition","duration","ease","easeLinear","rightClick","curveCatmullRomClosed","innerWidth","innerHeight","Math","min","forEach","u","id","realId","assignModuleColours","getData","doClusterReplay","manualdata","initPositioning","initGraphing","m","entype","c","floor","random","length","isOKColour","key","nodes","edges","maxSession","makeNodeData","makeStudentLinks","data","ob","vis","xc","yc","visible","sect","xcoord","ycoord","group","type","colour","section","grouping","source","target","weight","originalLinks","root","r","o","Object","keys","m1","m2","split","l","n","isNaN","edge","i","moduleId","user","dragstarted","dragged","dragended","makeTeacherMenu","initGraph","makeNodeLegend","makeWeightControl","setTimeout","force","sm","document","getElementById","weightSlider","createElement","max","step","value","style","addEventListener","strength","innerHTML","appendChild","text","createTextNode","linksweight","h","makeClusterButton","makeGroupMenu","makeStudentMenu","makeTimeSlider","select","append","attr","forceLink","d","forceSimulation","forceManyBody","forceCollide","radius","forceCenter","forceX","forceY","makeNodes","makeLinks","on","selectAll","remove","mouseover","mouseout","tick1","tick2","tick","stop","drawTime","sendCoordsToServer","rclick","dstart","drag","dend","enter","call","node","keepText","rtrn","up","left","right","rwidth","ifwidth","ifheight","txt","t","y","wrap","x","rh","attrX","raise","makeIframe","parseInt","rectWidth","xOffset","lineNumber","each","words","reverse","word","line","dy","parseFloat","tspan","pop","push","join","getComputedTextLength","rectH","rectW","rectX","rectY","iframe","position","gbb","getElementsByTagName","getBoundingClientRect","bbb","body","yoffset","top","bgrnd","b","removeIframes","src","obj","linkMouseover","clusteroidMouseover","bind","xofs","yofs","dist","originalx","originaly","sx","sy","distance","sourceNode","filter","sid","targetNode","tid","setTime","mins","getMinutes","getHours","toDateString","normalized","normalizeNodes","time","callServer","dx","maxNode","cx","cy","dn","sqrt","module","url","outData","req","XMLHttpRequest","open","setRequestHeader","onreadystatechange","readyState","status","send","JSON","stringify","copy","className","copyGraph","bHeight","print","printGraph","size","minWidth","menuHeight","changeGraph","selected","img","Image","serializer","XMLSerializer","svgStr","serializeToString","btoa","createRange","setStartBefore","setEndAfter","selectNode","sel","getSelection","addRange","execCommand","removeChild","mywindow","write","close","options","currentWeight","nodeKey","checked","removeEventListener","keepChecked","legendChange","mpos","legendMove","e","wd","offsetLeft","cursor","legendResize","newWidth","makeLegend","parent","rootSpan","rootLI","rootUL","li","ul","span","sort","a","expand","getCheckbox","parentElement","querySelector","classList","toggle","mid","nodeType","box","nodeT","label","color","labelText","thisId","thisChecked","thisType","thisGroup","checkWeight","drawGraph","event","preventDefault","clickedNode","hide","active","alphaTarget","restart","fx","fy","cluster","doCluster","cbHeight","multiple","shade","drawGraphNew","aName","firstname","lastname","bName","addListItem","menu","j","gid","divider","create","start","range","connect","pips","mode","stepped","density","values","handle","dispatchEvent","Event","notNodes","doNodes","doLinks","makePolygonHulls","doHulls","dl","sl","getEqualToNode","find","nodeGroups","snx","sny","tnx","tny","lc","nd","makePolygonHull","getGeometricCentroids","getDecomposedCentroids","student","end","half","tx","ty","manualHull","useTrans","coords","lf","hullClass","k","polyPoints","p1","p2","vecFrom","p0","vecScale","v","vecSum","pv1","pv2","vecUnit","norm","vecScaleTo","unitNormal","pv0","normalVec","extensionVec","extension0","extension1","controlDelta","invControlDelta","control0","control1","control3","hull","concaveHull","padding","pgh","curve","doGraph","clearInterval","resetLogPanel","display","clusterId","ph","numclusters","cd","makeAnimationControls","makeClusterSlider","makeLogPanel","disabled","removeAttribute","set","drawCentroids","manData","makeReplayControls","makeReplayMenu","replayGraph","datasetid","coordid","clusterid","changeReplayData","resetPlayButton","opacity","fakeStudentMenu","addClusteringNameToNavigation","forwardScale","replayCentroidDragStart","replayCentroidDrag","replayCentroidDragEnd","studentKey","canDragReplayCentroid","getPolygonPoints","ids","centroidClick","copyReplayData","currentIter","getCurrentIteration","member","newK","getNewCluster","iter","drawManualClusters","logManualClusteringResults","sendManualClustersToServer","out","clusterCoords","centroid","reverseScale","num","iteration","coordsid","measures","getClusterMeasures","lpt","manualcluster","disttocluster","round","indexOf","slice","precision","toFixed","recall","f1","fhalf","f2","lpv","lpv0","startsWith","totalmeasures","truePositives","falsePositives","falseNegatives","results","p","ci","tp","fp","fn","convergence","clusterNum","manMembers","hulls","points","getElementsByClassName","noManualCentroids","getClusteringCentroid","did","cid","centroidx","centroidy","drawManualCentroids","drawAnimatedManualCentroids","stopProp","stopPropagation","updateManualClusters","last","manualData","clusternum","includes","anonId","clusterScaling","centre","ctrlDiv","st","marginTop","dd","replayStop","playPause","replayPause","playStep1","replayBack","playStep2","marginRight","replayForward","del","delbutton","deleteClusteringData","confirm","delconfirm","selectedIndex","replace","readOnly","button","setInterval","resetPlay","actualIter","clusteringCase2","clusteringCase3","runReplayIter","clusteringCase1","removeLog","firstRound","drawClusteringCentroids","drawAnimatedClusteringCentroids","drawAnimatedCentroids","logClusteringResults","opts","uid","dragon","dragoff","runkmeans","marginLeft","doPlayPause","playStep","doPlayStep","reset","stopClustering","runClusteringIter","setAttribute","header","textBox","placeholder","clusteringname","clusteringnamebutton","nm","getRandomCentroid","randcentroids","clusterMembers","sendClustersToServer","runKMeans","ctd","col","MX","mx","MY","my","rx","ry","getCommonLinks","studentKeys","numStudents","link","s","common","lid","Number","MAX_SAFE_INTEGER","manualClustering","removeGraph","lower","newCentroids","getNewCentroid","converged","total","arr","ok","numstudents","numofclusters","serverData","rsd","usegeometric","newx","newy","handles","orientation","direction","format","to","showcentroids","removegraph","from","updateClusterSlider","btH","ctH","radio","radioClick","geometrics","decomposed","radios","getElementsByName","tb","sctrd","getScaleAndCentroid","centreX","centreY","forwardScaling","scaled","getReplayScaleAndCentroid","ctdOb","getBoxCentroid","fxkey","fykey","maxX","maxY","abs","ctdX","getScale","ctdY","minX","minY","p1x","p1y","p2x","p2y","bx","by","isFinite","lp","selectAllChildren","overflow","resize","border","centroidDragStart","centroidDrag","centroidDragEnd","clusterMouseout","clusterMouseover","canDragCentroid","coord","centres","studentName","rWidth","trg","linx","bnds","scx","tbx","scy","tby","save","focus","parentNode","dragging"],"mappings":"AA0BA,CAAC,SAASA,CAAT,CAAkB,CACf,GAAsB,UAAlB,QAAOC,CAAAA,MAAP,EAAgCA,MAAM,CAACC,GAA3C,CAAgD,CAE5CD,OAAM,uCAAC,EAAD,CAAKD,CAAL,CACT,CAHD,IAGO,CAEHG,MAAM,CAACC,kBAAP,CAA4BJ,CAAO,EACtC,CACJ,CARD,EAQG,UAAW,CAwlMV,MAtlMyB,SAArBI,CAAAA,kBAAqB,CAASC,CAAT,CAAmB,IAGpCC,CAAAA,EAHoC,CAIpCC,EAJoC,CAKpCC,EALoC,CAMpCC,EANoC,CAOpCC,EAPoC,CAUpCC,EAVoC,CAWpCC,EAXoC,CAYpCC,EAZoC,CAapCC,EAboC,CAcpCC,EAdoC,CAepCC,EAfoC,CAgBpCC,EAhBoC,CAiBpCC,EAjBoC,CAkBpCC,EAlBoC,CAmBpCC,EAnBoC,CAoBpCC,EApBoC,CAqBpCC,EArBoC,CAsBpCC,EAtBoC,CAuBpCC,EAvBoC,CAwBpCC,EAxBoC,CAyBpCC,EAzBoC,CA0BpCC,EA1BoC,CA2BpCC,EA3BoC,CA4BpCC,EA5BoC,CA6BpCC,EA7BoC,CA8BpCC,EA9BoC,CA+BpCC,EA/BoC,CAgCpCC,EAhCoC,CAiCpCC,EAjCoC,CAkCpCC,EAlCoC,CAmCpCC,EAnCoC,CAoCpCC,EApCoC,CAqCpCC,EArCoC,CAsCpCC,EAtCoC,CAuCpCC,EAvCoC,CAwCpCC,EAxCoC,CAyCpCC,EAzCoC,CA4CpCC,EA5CoC,CA6CpCC,EA7CoC,CA8CpCC,EA9CoC,CA+CpCC,EA/CoC,CAkDpCC,EAlDoC,CAmDpCC,EAnDoC,CAoDpCC,EApDoC,CAqDpCC,EArDoC,CAsDpCC,EAtDoC,CAuDpCC,EAvDoC,CAwDpCC,EAxDoC,CAyDpCC,EAzDoC,CA0DpCC,EA1DoC,CA2DpCC,EA3DoC,CA4DpCC,EA5DoC,CA6DpCC,EA7DoC,CAgEpCC,EAhEoC,CAiEpCC,EAjEoC,CAkEpCC,EAlEoC,CAmEpCC,EAnEoC,CAoEpCC,EApEoC,CAqEpCC,EArEoC,CAsEpCC,EAtEoC,CAuEpCC,EAvEoC,CAwEpCC,EAxEoC,CAyEpCC,EAzEoC,CA0EpCC,EA1EoC,CA2EpCC,EA3EoC,CA4EpCC,EA5EoC,CA6EpCC,EA7EoC,CA8EpCC,EA9EoC,CA+EpCC,EA/EoC,CAgFpCC,EAhFoC,CAiFpCC,EAjFoC,CAoFpCC,EApFoC,CAqFpCC,EArFoC,CAsFpCC,EAtFoC,CAuFpCC,EAvFoC,CAwFpCC,EAxFoC,CAyFpCC,EAzFoC,CA0FpCC,EA1FoC,CA2FpCC,EA3FoC,CA4FpCC,EA5FoC,CA6FpCC,EA7FoC,CA8FpCC,EA9FoC,CA+FpCC,EA/FoC,CAgGpCC,EAhGoC,CAiGpCC,EAjGoC,CAkGpCC,EAlGoC,CAmGpCC,EAnGoC,CAoGpCC,EApGoC,CAqGpCC,EArGoC,CAsGpCC,EAtGoC,CAuGpCC,EAvGoC,CAwGpCC,EAxGoC,CAyGpCC,EAzGoC,CA0GpCC,EA1GoC,CA2GpCC,EA3GoC,CA4GpCC,EA5GoC,CA6GpCC,EA7GoC,CA8GpCC,EA9GoC,CA+GpCC,EA/GoC,CAgHpCC,EAhHoC,CAiHpCC,EAjHoC,CAkHpCC,EAlHoC,CAmHpCC,EAnHoC,CAoHpCC,EApHoC,CAsHpCC,EAAc,CAAG,EAtHmB,CAuHpCC,EAAe,CAAG,EAvHkB,CAwHpCC,EAxHoC,CAyHpCC,EAzHoC,CA0HpCC,EA1HoC,CA2HpCC,EA3HoC,CA6HpCC,EA7HoC,CA8HpCC,EA9HoC,CAiIpCC,EAjIoC,CAkIpCC,EAlIoC,CA2IxC,QAASC,CAAAA,CAAT,CAAcnH,CAAd,CAAwB,CAGpBM,EAAI,CAAGN,CAAQ,CAACM,IAAhB,CACAC,EAAK,CAAGP,CAAQ,CAACO,KAAjB,CACAC,EAAM,CAAGR,CAAQ,CAACQ,MAAlB,CACAC,EAAY,CAAGT,CAAQ,CAACoH,OAAxB,CACAzG,EAAO,CAAGX,CAAQ,CAACqH,IAAnB,CACAzG,EAAU,CAAGZ,CAAQ,CAACsH,UAAtB,CACAzG,EAAW,CAAGb,CAAQ,CAACuH,WAAvB,CACAzG,EAAU,CAAGd,CAAQ,CAACwH,IAAtB,CACAzG,EAAS,CAAGf,CAAQ,CAACyH,SAArB,CACA5B,EAAS,CAAG7F,CAAQ,CAAC6F,SAArB,CACAC,EAAgB,CAAG9F,CAAQ,CAAC0H,gBAA5B,CACA1G,EAAW,CAAGhB,CAAQ,CAACgB,WAAvB,CACAC,EAAmB,CAAGjB,CAAQ,CAACgB,WAA/B,CACAE,EAAW,CAAGlB,CAAQ,CAAC2H,UAAvB,CACAxG,EAAS,CAAGnB,CAAQ,CAAC4H,KAArB,CACAvG,EAAQ,CAAGrB,CAAQ,CAAC6H,QAApB,CACAvG,EAAM,CAAGtB,CAAQ,CAAC8H,MAAlB,CACA1G,EAAW,CAAGpB,CAAQ,CAAC+H,KAAvB,CACAxG,EAAS,CAAGvB,CAAQ,CAACgI,MAArB,CACAxG,EAAQ,CAAGxB,CAAQ,CAACiI,QAApB,CACAxG,EAAS,CAAGzB,CAAQ,CAACkI,MAArB,CACAxG,EAAU,CAAG1B,CAAQ,CAACmI,OAAtB,CACAxG,EAAQ,CAAG3B,CAAQ,CAACoI,KAApB,CACAxG,EAAO,CAAG5B,CAAQ,CAACqI,OAAnB,CACAxG,EAAW,CAAG7B,CAAQ,CAACsI,QAAvB,CACAxG,EAAO,CAAGR,EAAV,CACAS,EAAU,CAAG/B,CAAQ,CAACuI,UAAtB,CACAvG,EAAQ,CAAGhC,CAAQ,CAACgC,QAApB,CACAG,EAAW,CAAGnC,CAAQ,CAACwI,OAAvB,CACAvI,EAAY,CAAGD,CAAQ,CAACyI,YAAxB,CACAvI,EAAc,CAAGF,CAAQ,CAAC0I,cAA1B,CACAvI,EAAc,CAAGH,CAAQ,CAAC2I,cAA1B,CACAvI,EAAY,CAAGJ,CAAQ,CAAC4I,YAAxB,CACAvI,EAAY,CAAGL,CAAQ,CAAC6I,YAAxB,CACAzG,EAAU,CAAGpC,CAAQ,CAAC8I,OAAtB,CACAtC,EAAW,CAAGxG,CAAQ,CAAC+I,WAAvB,CACApF,EAAS,CAAG3D,CAAQ,CAAC2D,SAArB,CACAsD,EAAc,CAAGjH,CAAQ,CAACgJ,cAA1B,CACA9B,EAAe,CAAGlH,CAAQ,CAACsF,SAA3B,CACAwB,EAAY,CAAG9G,CAAQ,CAACiJ,YAAxB,CACApC,EAAY,CAAGvF,EAAf,CACAe,EAAkB,CAAGrC,CAAQ,CAACkJ,UAA9B,CAGA5G,EAAG,CAAGxC,MAAM,CAACqJ,cAAb,CACA3G,EAAM,CAAG1C,MAAM,CAACsJ,UAAhB,CACA,GAAIC,CAAAA,CAAE,CAAGvJ,MAAM,CAACwJ,eAAhB,CACA7G,EAAI,CAAG,GAAI4G,CAAAA,CAAJ,CAAO,GAAP,CAAP,CAGA5E,EAAW,CAAG,CAAd,CACAD,EAAO,CAAG+E,CAAU,EAApB,CAEAvD,EAAW,CAAGwD,IAAI,CAACC,GAAL,GAAa,GAA3B,CACAlD,EAAQ,CAAG,GAAX,CACAhE,EAAK,CAAGD,EAAG,CAACoH,UAAJ,GAAiBC,QAAjB,CAA0BpD,EAA1B,EAAoCqD,IAApC,CAAyCtH,EAAG,CAACuH,UAA7C,CAAR,CAGA1F,EAAuB,CAAG,GAA1B,CAEA4B,EAAmB,CAAG,CAAtB,CAEA3C,EAAY,CAAG,IAAf,CACAH,EAAa,CAAG,CAAhB,CAEAmD,EAAc,CAAG0D,CAAjB,CAEA9E,EAAiB,GAAjB,CACAC,EAAmB,CAAG,GAAtB,CACAE,EAAW,CAAG,GAAd,CAEAD,EAAS,CAAG5C,EAAG,CAACyH,qBAAhB,CAEA/C,EAAqB,GAArB,CAEA1C,EAAS,CAAG,EAAZ,CACAgC,EAAU,CAAG,EAAb,CAEA5B,EAAU,CAAG,CACT,cAAiB,WADR,CAET,SAAiB,OAFR,CAGT,OAAiB,MAHR,CAIT,KAAiB,KAJR,CAKT,MAAiB,QALR,CAMT,SAAiB,OANR,CAOT,IAAiB,QAPR,CAQT,IAAiB,QARR,CAST,KAAiB,SATR,CAUT,KAAiB,MAVR,CAWT,OAAiB,OAXR,CAYT,KAAiB,OAZR,CAaT,KAAiB,QAbR,CAcT,OAAiB,MAdR,CAeT,SAAiB,MAfR,CAgBT,SAAiB,MAhBR,CAiBT,OAAiB,KAjBR,CAkBT,KAAiB,MAlBR,CAmBT,SAAiB,QAnBR,CAoBT,MAAiB,QApBR,CAqBT,MAAiB,WArBR,CAsBT,OAAiB,MAtBR,CAAb,CAyBAC,EAAe,CAAG,CAAC,MAAD,CAAS,KAAT,CAAgB,QAAhB,CAA0B,OAA1B,CAAmC,QAAnC,CAA6C,OAA7C,CACC,QADD,CACW,SADX,CACsB,MADtB,CAAlB,CAIAlB,EAAY,CAAGzC,EAAW,CAAG,CAAH,CAAO,EAAjC,CACAJ,EAAU,CAAGI,EAAW,CAAG,CAAH,CAAOJ,EAA/B,CAEA+B,EAAK,CAAG7C,MAAM,CAACkK,UAAP,CAAoB7F,EAApB,CAA8CtD,EAA9C,CAA4D,GAApE,CACA+B,EAAM,CAAG9C,MAAM,CAACmK,WAAP,CAAqBxG,EAArB,CAAoC,EAA7C,CAEA4C,EAAU,CAA6B,GAA1B,CAAA6D,IAAI,CAACC,GAAL,CAASxH,EAAT,CAAgBC,EAAhB,EAAgC,CAAhC,CAAoC,CAAjD,CAGAX,EAAW,CAAG,EAAd,CACA1B,EAAK,CAAC6J,OAAN,CAAc,SAASC,CAAT,CAAY,CACtBpI,EAAW,CAACoI,CAAC,CAACC,EAAH,CAAX,CAAoBD,CAAC,CAACE,MACzB,CAFD,EAKAC,CAAmB,GACnBC,CAAO,GAEP,GAAI9G,EAAJ,CAAe,CACX+G,EAAe,CAAC1K,CAAQ,CAAC2K,UAAV,CAClB,CAFD,IAEO,IAAI3J,EAAJ,CAAiB,CACpB4J,CAAe,EAClB,CAFM,IAEA,CACHC,CAAY,EACf,CACJ,CASD,QAAStB,CAAAA,CAAT,EAAsB,CAwBlB,MAtBQ,CAAC,MAAD,CAAS,MAAT,CAAiB,YAAjB,CAA+B,OAA/B,CACC,WADD,CACc,YADd,CAC4B,WAD5B,CACyC,OADzC,CACkD,gBADlD,CAEC,SAFD,CAEY,MAFZ,CAEoB,UAFpB,CAEgC,UAFhC,CAE4C,eAF5C,CAGC,UAHD,CAGa,WAHb,CAG0B,aAH1B,CAGyC,gBAHzC,CAIC,YAJD,CAIe,YAJf,CAI6B,SAJ7B,CAIwC,YAJxC,CAKC,cALD,CAKiB,eALjB,CAKkC,eALlC,CAKmD,eALnD,CAMC,YAND,CAMe,UANf,CAM2B,aAN3B,CAM0C,SAN1C,CAMqD,YANrD,CAOC,WAPD,CAOc,aAPd,CAO6B,SAP7B,CAOwC,MAPxC,CAOgD,WAPhD,CAO6D,MAP7D,CAQC,OARD,CAQU,aARV,CAQyB,SARzB,CAQoC,WARpC,CAQiD,QARjD,CAQ2D,OAR3D,CASC,WATD,CASc,WATd,CAS2B,YAT3B,CASyC,YATzC,CAUC,WAVD,CAUc,aAVd,CAU6B,eAV7B,CAU8C,cAV9C,CAWC,gBAXD,CAWmB,gBAXnB,CAWqC,MAXrC,CAW6C,WAX7C,CAW0D,SAX1D,CAYC,QAZD,CAYW,kBAZX,CAY+B,YAZ/B,CAY6C,cAZ7C,CAaC,cAbD,CAaiB,gBAbjB,CAamC,iBAbnC,CAcC,mBAdD,CAcsB,iBAdtB,CAcyC,iBAdzC,CAeC,cAfD,CAeiB,MAfjB,CAeyB,OAfzB,CAekC,WAflC,CAe+C,QAf/C,CAeyD,WAfzD,CAgBC,QAhBD,CAgBW,WAhBX,CAgBwB,eAhBxB,CAgByC,eAhBzC,CAgB0D,MAhB1D,CAiBC,MAjBD,CAiBS,YAjBT,CAiBuB,QAjBvB,CAiBiC,eAjBjC,CAiBkD,KAjBlD,CAiByD,WAjBzD,CAkBC,WAlBD,CAkBc,aAlBd,CAkB6B,QAlB7B,CAkBuC,YAlBvC,CAkBqD,UAlBrD,CAmBC,QAnBD,CAmBW,QAnBX,CAmBqB,SAnBrB,CAmBgC,WAnBhC,CAmB6C,WAnB7C,CAoBC,aApBD,CAoBgB,WApBhB,CAoB6B,KApB7B,CAoBoC,MApBpC,CAoB4C,SApB5C,CAoBuD,QApBvD,CAqBC,WArBD,CAqBc,QArBd,CAqBwB,QArBxB,CAqBkC,aArBlC,CAuBX,CAMD,QAASiB,CAAAA,CAAT,EAA+B,CAE3B7J,EAAO,CAACyJ,OAAR,CAAgB,SAASU,CAAT,CAAY,CACxB,MAAO,CAACpG,EAAU,CAACoG,CAAC,CAACC,MAAH,CAAlB,CAA8B,IAGtBC,CAAAA,CAAC,CAAGxG,EAAO,CAAC0F,IAAI,CAACe,KAAL,CAAWxI,EAAI,CAACyI,MAAL,GAAgB1G,EAAO,CAAC2G,MAAnC,CAAD,CAHW,CAItBC,CAAU,GAJY,CAM1B,IAAK,GAAIC,CAAAA,CAAT,GAAgB3G,CAAAA,EAAhB,CAA4B,CACxB,GAAIA,EAAU,CAAC2G,CAAD,CAAV,EAAmBL,CAAvB,CAA0B,CACtBI,CAAU,GACb,CACJ,CACD1G,EAAU,CAACoG,CAAC,CAACC,MAAH,CAAV,CAAuBK,CAAU,CAAGJ,CAAH,OACpC,CACJ,CAdD,CAeH,CAKD,QAASP,CAAAA,CAAT,EAAmB,CAEfpH,EAAS,CAAG,CAACiI,KAAK,CAAE,EAAR,CAAY1D,KAAK,CAAE,EAAnB,CAAuB2D,KAAK,CAAE,EAA9B,CAAkCC,UAAU,CAAE,CAA9C,CAAZ,CAEAC,CAAY,GACZC,CAAgB,EACnB,CAMD,QAASD,CAAAA,CAAT,EAAwB,IAEhBE,CAAAA,CAAI,CAAGtI,EAFS,CAGhBuI,CAAE,CAAG,EAHW,CAIhBC,CAJgB,CAKhBC,CALgB,CAMhBC,CANgB,CASpBpL,EAAO,CAACyJ,OAAR,CAAgB,SAASU,CAAT,CAAY,CAExBe,CAAG,GAAH,CACAC,CAAE,OAAF,CACAC,CAAE,OAAF,CAEA,GAAI7K,EAAW,CAAC4J,CAAC,CAACR,EAAH,CAAf,CAAuB,CAEnBuB,CAAG,CAAgC,CAA7B,EAAA3K,EAAW,CAAC4J,CAAC,CAACR,EAAH,CAAX,CAAkB0B,OAAlB,EACmC,CAArC,EAAA9K,EAAW,CAAC,IAAM4J,CAAC,CAACmB,IAAT,CAAX,CAA0BD,OADxB,MAAN,CAEA,GAAiC,CAA7B,EAAA9K,EAAW,CAAC4J,CAAC,CAACR,EAAH,CAAX,CAAkB0B,OAAlB,EAAkC,CAACH,CAAvC,CAA4C,CACxC3K,EAAW,CAAC4J,CAAC,CAACR,EAAH,CAAX,CAAkB0B,OAAlB,CAA4B,CAC/B,CACDF,CAAE,CAAG5K,EAAW,CAAC4J,CAAC,CAACR,EAAH,CAAX,CAAkB4B,MAAvB,CACAH,CAAE,CAAG7K,EAAW,CAAC4J,CAAC,CAACR,EAAH,CAAX,CAAkB6B,MAE1B,CAVD,IAUO,IAAIjL,EAAW,CAAC,IAAM4J,CAAC,CAACmB,IAAT,CAAf,CAA+B,CAElCJ,CAAG,CAAwC,CAArC,EAAA3K,EAAW,CAAC,IAAM4J,CAAC,CAACmB,IAAT,CAAX,CAA0BD,OAA1B,EACF1K,EAAM,EAAIQ,EADR,MAET,CAED6J,CAAI,CAACL,KAAL,CAAWK,CAAI,CAACL,KAAL,CAAWH,MAAtB,EAAgC,CAC5Bb,EAAE,CAAOQ,CAAC,CAACR,EADiB,CAE5B9C,IAAI,CAAKsD,CAAC,CAACtD,IAFiB,CAG5B4E,KAAK,CAAItB,CAAC,CAACmB,IAHiB,CAI5BI,IAAI,CAAKvB,CAAC,CAACuB,IAJiB,CAK5BtB,MAAM,CAAGD,CAAC,CAACC,MALiB,CAM5BuB,MAAM,CAAG5H,EAAU,CAACoG,CAAC,CAACC,MAAH,CANS,CAO5BiB,OAAO,CAAEH,CAPmB,CAQ5BK,MAAM,CAAGJ,CARmB,CAS5BK,MAAM,CAAGJ,CATmB,CAAhC,CAaA,GAAI,CAACH,CAAE,CAACd,CAAC,CAACmB,IAAH,CAAP,CAAiB,CACb,GAAI/K,EAAW,CAAC,IAAM4J,CAAC,CAACmB,IAAT,CAAf,CAA+B,CAE3BJ,CAAG,CAAwC,CAArC,EAAA3K,EAAW,CAAC,IAAM4J,CAAC,CAACmB,IAAT,CAAX,CAA0BD,OAA1B,MAAN,CACAF,CAAE,CAAG5K,EAAW,CAAC,IAAM4J,CAAC,CAACmB,IAAT,CAAX,CAA0BC,MAA/B,CACAH,CAAE,CAAG7K,EAAW,CAAC,IAAM4J,CAAC,CAACmB,IAAT,CAAX,CAA0BE,MAClC,CAEDP,CAAE,CAACd,CAAC,CAACmB,IAAH,CAAF,CAAa,CACT3B,EAAE,CAAO,IAAMQ,CAAC,CAACmB,IADR,CAETzE,IAAI,CAAKrF,EAAW,CAACoK,OAAZ,CAAsB,GAAtB,CAA4BzB,CAAC,CAACmB,IAF9B,CAGTG,KAAK,CAAItB,CAAC,CAACmB,IAHF,CAITI,IAAI,CAAK,UAJA,CAKTC,MAAM,CAAG5H,EAAU,CAAC8H,QALX,CAMTR,OAAO,CAAEH,CANA,CAOTK,MAAM,CAAGJ,CAPA,CAQTK,MAAM,CAAGJ,CARA,CAAb,CAWAJ,CAAI,CAACL,KAAL,CAAWK,CAAI,CAACL,KAAL,CAAWH,MAAtB,EAAgCS,CAAE,CAACd,CAAC,CAACmB,IAAH,CACrC,CAGDN,CAAI,CAAC/D,KAAL,CAAW+D,CAAI,CAAC/D,KAAL,CAAWuD,MAAtB,EAAgC,CAC5BsB,MAAM,CAAE,IAAM3B,CAAC,CAACmB,IADY,CAE5BS,MAAM,CAAE5B,CAAC,CAACR,EAFkB,CAG5BqC,MAAM,CAAE1J,EAHoB,CAI5BqJ,MAAM,CAAE5H,EAAU,CAACkI,aAJS,CAMnC,CAhED,EAkEAd,CAAE,CAAGC,CAAE,OAAP,CAGA,GAAI7K,EAAW,CAAC2L,IAAhB,CAAsB,CAClBf,CAAE,CAAG5K,EAAW,CAAC2L,IAAZ,CAAiBX,MAAtB,CACAH,CAAE,CAAG7K,EAAW,CAAC2L,IAAZ,CAAiBV,MACzB,CAED,GAAIW,CAAAA,CAAC,CAAG,CACJxC,EAAE,CAAO,MADL,CAEJ9C,IAAI,CAAK1G,EAFL,CAGJsL,KAAK,CAAI,CAAC,CAHN,CAIJC,IAAI,CAAK,UAJL,CAKJC,MAAM,CAAG5H,EAAU,CAAC8H,QALhB,CAMJR,OAAO,GANH,CAOJE,MAAM,CAAGJ,CAPL,CAQJK,MAAM,CAAGJ,CARL,CAAR,CAYA,IAAK,GAAIgB,CAAAA,CAAT,GAAcnB,CAAAA,CAAd,CAAkB,CACdD,CAAI,CAAC/D,KAAL,CAAW+D,CAAI,CAAC/D,KAAL,CAAWuD,MAAtB,EAAgC,CAC5BsB,MAAM,CAAE,MADoB,CAE5BC,MAAM,CAAEd,CAAE,CAACmB,CAAD,CAAF,CAAMzC,EAFc,CAG5BqC,MAAM,CAAE1J,EAHoB,CAI5BqJ,MAAM,CAAE5H,EAAU,CAACkI,aAJS,CAMnC,CAEDjB,CAAI,CAACL,KAAL,CAAWK,CAAI,CAACL,KAAL,CAAWH,MAAtB,EAAgC2B,CAAhC,CAIA,GAAoC,CAAhC,CAAAE,MAAM,CAACC,IAAP,CAAY9L,EAAZ,EAAuBgK,MAA3B,CAAuC,CAEnC,GAAI+B,CAAAA,CAAJ,CACIC,CADJ,CAEIC,CAFJ,CAIA,IAAK,GAAIC,CAAAA,CAAT,GAAclM,CAAAA,EAAd,CAAyB,CACrBiM,CAAK,CAAGC,CAAC,CAACD,KAAF,CAAQ,GAAR,CAAR,CACAF,CAAE,CAAGE,CAAK,CAAC,CAAD,CAAV,CACAD,CAAE,CAAGC,CAAK,CAAC,CAAD,CAAV,CAEAzB,CAAI,CAAC/D,KAAL,CAAW+D,CAAI,CAAC/D,KAAL,CAAWuD,MAAtB,EAAgC,CAC5BsB,MAAM,CAAES,CADoB,CAE5BR,MAAM,CAAES,CAFoB,CAG5BR,MAAM,CAAiB,CAAf,CAAAxL,EAAS,CAACkM,CAAD,CAHW,CAI5Bf,MAAM,CAAE5H,EAAU,CAACkI,aAJS,CAMnC,CAGD,GAAI,CAAC3L,EAAL,CAA0B,CACtB,IAAK,GAAIqM,CAAAA,CAAT,GAAc3B,CAAAA,CAAI,CAACL,KAAnB,CAA0B,CACtB,GAAIiC,KAAK,CAAC5B,CAAI,CAACL,KAAL,CAAWgC,CAAX,EAAchD,EAAf,CAAT,CAA6B,CACzBqB,CAAI,CAACL,KAAL,CAAWgC,CAAX,EAActB,OAAd,GACH,CACJ,CACJ,CACJ,CACJ,CAKD,QAASN,CAAAA,CAAT,EAA4B,CAExB,GAAIC,CAAAA,CAAI,CAAGtI,EAAX,CACIyH,CAAC,CAAG,CADR,CAEIwC,CAAC,CAAG,CAFR,CAGIE,CAHJ,CAIAzG,EAAS,CAAG,EAAZ,CAGA,IAAK,GAAI0G,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGnN,EAAI,CAAC6K,MAAzB,CAAiCsC,CAAC,EAAlC,CAAsC,CAElCD,CAAI,CAAG,CACHf,MAAM,CAAEnM,EAAI,CAACmN,CAAD,CAAJ,CAAQC,QADb,CAEHhB,MAAM,CAAEpM,EAAI,CAACmN,CAAD,CAAJ,CAAQC,QAFb,CAGHf,MAAM,CAAE1J,EAHL,CAIH0K,IAAI,CAAIrN,EAAI,CAACmN,CAAD,CAAJ,CAAQnM,MAJb,CAKHgL,MAAM,CAAE,EALL,CAAP,CAQA,GAAI,CAACX,CAAI,CAACJ,KAAL,CAAWjL,EAAI,CAACmN,CAAD,CAAJ,CAAQnM,MAAnB,CAAL,CAAiC,CAE7BqK,CAAI,CAACJ,KAAL,CAAWjL,EAAI,CAACmN,CAAD,CAAJ,CAAQnM,MAAnB,EAA6B,EAA7B,CACAyF,EAAS,CAACzG,EAAI,CAACmN,CAAD,CAAJ,CAAQnM,MAAT,CAAT,CAA4B,EAA5B,CACAqK,CAAI,CAACH,UAAL,CAAkBG,CAAI,CAACH,UAAL,CAAkBV,CAAlB,CAAsBA,CAAtB,CAA0Ba,CAAI,CAACH,UAAjD,CACAV,CAAC,CAAG,CAAJ,CAAOwC,CAAC,CAAG,CACd,CAED,GAAIpM,EAAW,CAACZ,EAAI,CAACmN,CAAD,CAAJ,CAAQC,QAAT,CAAX,EAA0E,CAAzC,EAAAxM,EAAW,CAACZ,EAAI,CAACmN,CAAD,CAAJ,CAAQC,QAAT,CAAX,CAA8B1B,OAAnE,CAAiF,CAC7EjF,EAAS,CAACzG,EAAI,CAACmN,CAAD,CAAJ,CAAQnM,MAAT,CAAT,CAA0BgM,CAAC,EAA3B,EAAiChN,EAAI,CAACmN,CAAD,CAAJ,CAAQC,QAC5C,CAGD,GAAID,CAAC,CAAG,CAAJ,CAAQnN,EAAI,CAAC6K,MAAb,EAAuB7K,EAAI,CAACmN,CAAD,CAAJ,CAAQnM,MAAR,EAAkBhB,EAAI,CAACmN,CAAC,CAAG,CAAL,CAAJ,CAAYnM,MAAzD,CAAiE,CAE7DkM,CAAI,CAACd,MAAL,CAAcpM,EAAI,CAACmN,CAAC,CAAG,CAAL,CAAJ,CAAYC,QAA1B,CACA/B,CAAI,CAACJ,KAAL,CAAWjL,EAAI,CAACmN,CAAD,CAAJ,CAAQnM,MAAnB,EAA2BwJ,CAAC,EAA5B,EAAkC0C,CAErC,CALD,IAKO,IAAyC,CAArC,EAAA7B,CAAI,CAACJ,KAAL,CAAWjL,EAAI,CAACmN,CAAD,CAAJ,CAAQnM,MAAnB,EAA2B6J,MAA/B,CAA4C,CAE/CQ,CAAI,CAACJ,KAAL,CAAWjL,EAAI,CAACmN,CAAD,CAAJ,CAAQnM,MAAnB,EAA2BwJ,CAAC,EAA5B,EAAkC0C,CACrC,CACJ,CACD7B,CAAI,CAACH,UAAL,CAAkBG,CAAI,CAACH,UAAL,CAAkBV,CAAlB,CAAsBA,CAAtB,CAA0Ba,CAAI,CAACH,UAAjD,CAGAjL,EAAK,CAAC6J,OAAN,CAAc,SAASC,CAAT,CAAY,CACtB,GAAI,CAACsB,CAAI,CAACJ,KAAL,CAAWlB,CAAC,CAACC,EAAb,CAAL,CAAuB,CACnBqB,CAAI,CAACJ,KAAL,CAAWlB,CAAC,CAACC,EAAb,EAAmB,EACtB,CACJ,CAJD,CAKH,CAKD,QAASM,CAAAA,CAAT,EAA2B,CAEvBhG,EAAQ,GAAR,CAEA1B,EAAS,CAAG,GAAZ,CACAC,EAAS,CAAG,GAAZ,CAEA8C,EAAe,CAAG2H,CAAlB,CACA1H,EAAW,CAAG2H,CAAd,CACA1H,EAAa,CAAG2H,CAAhB,CAGA,GAAItH,EAAW,EAAsC,CAAlC,CAAAwG,MAAM,CAACC,IAAP,CAAY/L,EAAZ,EAAyBiK,MAA5C,CAAwD,CACpDlI,EAAa,CAAG,CACnB,CAGD,GAAI1B,EAAS,EAAIE,EAAjB,CAA4B,CACxBsM,CAAe,EAClB,CAEDC,CAAS,CAAC,EAAD,CAAT,CACAC,CAAc,GACdC,CAAiB,GAEjBC,UAAU,CAAC,UAAW,CAClBtL,EAAU,CAACuL,KAAX,CAAiB,QAAjB,CAA2B,IAA3B,EACKA,KADL,CACW,GADX,CACgB,IADhB,EAEKA,KAFL,CAEW,GAFX,CAEgB,IAFhB,CAGH,CAJS,CAIP,GAJO,CAKb,CAMD,QAASF,CAAAA,CAAT,EAA6B,IAErBG,CAAAA,CAAE,CAAGC,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAFgB,CAKrBC,CAAY,CAAGF,QAAQ,CAACG,aAAT,CAAuB,OAAvB,CALM,CAMzBD,CAAY,CAAClE,EAAb,CAAkB,eAAlB,CACAkE,CAAY,CAACnC,IAAb,CAAoB,OAApB,CACAmC,CAAY,CAACrE,GAAb,CAAmB,MAAnB,CACAqE,CAAY,CAACE,GAAb,CAAmB,GAAnB,CACAF,CAAY,CAACG,IAAb,CAAoB,KAApB,CACAH,CAAY,CAACI,KAAb,CAAqB,KAArB,CACAJ,CAAY,CAACK,KAAb,CAAmBlM,KAAnB,CAA2B,OAA3B,CACA6L,CAAY,CAACM,gBAAb,CAA8B,QAA9B,CAAwC,UAAW,CAC/C9L,EAAS,CAAC+L,QAAV,CAAmB,KAAKH,KAAxB,EACAN,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,EAA0CS,SAA1C,CAAsD,WAAa,KAAKJ,KAC3E,CAHD,EAIAP,CAAE,CAACY,WAAH,CAAeT,CAAf,EAGA,GAAIU,CAAAA,CAAI,CAAGZ,QAAQ,CAACa,cAAT,CAAwBhN,EAAW,CAACiN,WAApC,CAAX,CACAf,CAAE,CAACY,WAAH,CAAeC,CAAf,EAEAA,CAAI,CAAGZ,QAAQ,CAACG,aAAT,CAAuB,OAAvB,CAAP,CACAS,CAAI,CAAC5E,EAAL,CAAU,gBAAV,CACA4E,CAAI,CAACF,SAAL,CAAiB,WAAaR,CAAY,CAACI,KAA3C,CACAP,CAAE,CAACY,WAAH,CAAeC,CAAf,CACH,CAKD,QAASrE,CAAAA,CAAT,EAAwB,CAEpBjG,EAAQ,GAAR,CACA5D,EAAW,GAAX,CAEAkC,EAAS,CAAG,CAAZ,CAEA+C,EAAe,CAAG,IAAlB,CACAC,EAAW,CAAG,IAAd,CACAC,EAAa,CAAG,IAAhB,CAGA,GAAI,CAACK,EAAD,EAAmD,CAAnC,EAAAwG,MAAM,CAACC,IAAP,CAAY/L,EAAZ,EAAyBiK,MAA7C,CAA0D,CACtD6C,CAAS,CAAC,EAAD,CAAT,CAEAG,UAAU,CAAC,UAAW,CAClB,GAAIkB,CAAAA,CAAC,CAAGC,CAAiB,EAAzB,CACAC,CAAa,GACbC,CAAe,CAACH,CAAD,CAAf,CACAI,CAAc,EACjB,CALS,CAKP,GALO,CAMb,CATD,IASO,CAEH,GAAIJ,CAAAA,CAAC,CAAGC,CAAiB,EAAzB,CACAC,CAAa,GACbC,CAAe,CAACH,CAAD,CAAf,CACArB,CAAS,CAAC,CAAD,CAAT,CACAyB,CAAc,EACjB,CAEDzM,EAAS,CAAG,IACf,CAOD,QAASgL,CAAAA,CAAT,CAAmBe,CAAnB,CAA6B,CAGzBrM,EAAK,CAAGJ,EAAG,CAACoN,MAAJ,CAAW,QAAX,EACHC,MADG,CACI,KADJ,EAEHC,IAFG,CAEE,OAFF,CAEWjN,EAFX,EAGHiN,IAHG,CAGE,QAHF,CAGYhN,EAHZ,CAAR,CAMAI,EAAS,CAAGV,EAAG,CAACuN,SAAJ,CAAcxM,EAAS,CAACuE,KAAxB,EACP0C,EADO,CACJ,SAASwF,CAAT,CAAY,CACZ,MAAOA,CAAAA,CAAC,CAACxF,EACZ,CAHO,EAIPyE,QAJO,CAIEA,CAJF,CAAZ,CAMAlM,EAAU,CAAGP,EAAG,CAACyN,eAAJ,CAAoB1M,EAAS,CAACiI,KAA9B,EACR8C,KADQ,CACF,MADE,CACMpL,EADN,EAERoL,KAFQ,CAEF,QAFE,CAEQ9L,EAAG,CAAC0N,aAAJ,GAAoBjB,QAApB,CAA6B,CAAC,EAA9B,CAFR,EAGRX,KAHQ,CAGF,SAHE,CAGS9L,EAAG,CAAC2N,YAAJ,GAAmBC,MAAnB,CAA0B,EAA1B,CAHT,EAIR9B,KAJQ,CAIF,QAJE,CAIQ9L,EAAG,CAAC6N,WAAJ,CAAgBxN,EAAK,CAAG,CAAxB,CAA2BC,EAAM,CAAG,CAApC,CAJR,EAKRwL,KALQ,CAKF,GALE,CAKG9L,EAAG,CAAC8N,MAAJ,EALH,EAMRhC,KANQ,CAMF,GANE,CAMG9L,EAAG,CAAC+N,MAAJ,EANH,CAAb,CASAC,CAAS,CAACjN,EAAS,CAACiI,KAAX,CAAkBlF,EAAlB,CAAkCH,EAAlC,CAAmDC,EAAnD,CAAgEC,EAAhE,CAAT,CAGAoK,CAAS,CAAClN,EAAS,CAACuE,KAAX,CAAT,CAGAlF,EAAK,CAAC8N,EAAN,CAAS,OAAT,CAAkB,UAAW,CAGzBlO,EAAG,CAACmO,SAAJ,CAAc,SAAd,EAAyBC,MAAzB,GACApO,EAAG,CAACmO,SAAJ,CAAc,SAAd,EAAyBC,MAAzB,GAGA,GAAI9L,EAAQ,EAAI5D,EAAhB,CAA6B,CACzB8B,EAAU,CACL0N,EADL,CACQ,WADR,CACqBG,CADrB,EAEKH,EAFL,CAEQ,UAFR,CAEoBI,CAFpB,CAGH,CACD,GAAIjN,EAAJ,CAAe,CACXb,EAAU,CACL0N,EADL,CACQ,WADR,CACqB,IADrB,EAEKA,EAFL,CAEQ,UAFR,CAEoB,IAFpB,CAGH,CACJ,CAjBD,EAoBA,GAAIhK,EAAW,EAAIxF,EAAf,EACyC,CAAlC,CAAAgM,MAAM,CAACC,IAAP,CAAY/L,EAAZ,EAAyBiK,MADpC,CACgD,CAC5CtI,EAAU,CAAC2N,EAAX,CAAc,MAAd,CAAsBK,CAAtB,CACH,CAHD,IAGO,CACHhO,EAAU,CAAC2N,EAAX,CAAc,MAAd,CAAsBM,CAAtB,CACH,CAGD,IAAK,GAAIrD,CAAAA,CAAC,CAAG,CAAb,CAAoB,EAAJ,CAAAA,CAAhB,CAAwBA,CAAC,EAAzB,CAA6B,CACzB5K,EAAU,CAACkO,IAAX,EACH,CAGD,GAAI/P,EAAJ,CAAiB,CACbmN,UAAU,CAAC,UAAW,CAElBtL,EAAU,CAACmO,IAAX,GACAnO,EAAU,CAAC2N,EAAX,CAAc,MAAd,CAAsBM,CAAtB,EACAG,CAAQ,GAGR,GAAuC,CAAnC,EAAAjE,MAAM,CAACC,IAAP,CAAY/L,EAAZ,EAAyBiK,MAAzB,EAAwC,CAAC3E,EAA7C,CAA0D,CACtD0K,CAAkB,GAClB7N,EAAS,CAACkI,KAAV,CAAkB,EAAlB,CACAG,CAAgB,GAChBlF,EAAW,GAAX,CACAvD,EAAa,CAAG2B,EAAQ,CAAG,CAAH,CAAO,CAClC,CACJ,CAdS,CAcP,GAdO,CAeb,CAGD,GAAIA,EAAQ,EAAI,CAAC4B,EAAjB,CAA8B,CAC1B2H,UAAU,CAAC,UAAW,CAClB9K,EAAS,CAACiI,KAAV,CAAkB,EAAlB,CACAjI,EAAS,CAACuE,KAAV,CAAkB,EAAlB,CACA6D,CAAY,EACf,CAJS,CAIP,GAJO,CAKb,CACJ,CAWD,QAAS6E,CAAAA,CAAT,CAAmBhF,CAAnB,CAA0B6F,CAA1B,CAAkCC,CAAlC,CAA0CC,CAA1C,CAAgDC,CAAhD,CAAsD,CAElDxO,EAAU,CAAGJ,EAAK,CAAC+N,SAAN,CAAgB,OAAhB,EACR9E,IADQ,CACHL,CADG,EAERiG,KAFQ,GAEA5B,MAFA,CAEO,QAFP,EAGRC,IAHQ,CAGH,OAHG,CAGM,MAHN,EAIRA,IAJQ,CAIH,GAJG,CAIEvJ,EAJF,EAKRmK,EALQ,CAKL,WALK,CAKQG,CALR,EAMRH,EANQ,CAML,UANK,CAMOI,CANP,EAORJ,EAPQ,CAOL,aAPK,CAOUW,CAPV,EAQRK,IARQ,CAQHlP,EAAG,CAAC+O,IAAJ,GACCb,EADD,CACI,OADJ,CACaY,CADb,EAECZ,EAFD,CAEI,MAFJ,CAEYa,CAFZ,EAGCb,EAHD,CAGI,KAHJ,CAGWc,CAHX,CARG,CAYhB,CAOD,QAASf,CAAAA,CAAT,CAAmB3I,CAAnB,CAA0B,CAEtB7E,EAAU,CAAGL,EAAK,CAAC+N,SAAN,CAAgB,OAAhB,EACR9E,IADQ,CACH/D,CADG,EAER2J,KAFQ,GAEA5B,MAFA,CAEO,MAFP,EAGRC,IAHQ,CAGH,OAHG,CAGM,MAHN,EAIRf,KAJQ,CAIF,QAJE,CAIQ,SAASiB,CAAT,CAAY,CACzB,MAAOA,CAAAA,CAAC,CAACxD,MACZ,CANQ,EAORuC,KAPQ,CAOF,cAPE,CAOc,SAASiB,CAAT,CAAY,CAC/B,MAAmB,EAAX,CAAAA,CAAC,CAACnD,MAAH,CAAiB,IAC3B,CATQ,CAUhB,CAQD,QAASgE,CAAAA,CAAT,CAAmBc,CAAnB,CAAyBC,CAAzB,CAAmC,CAE/B,GAAIjM,EAAJ,CAAiB,CACb,MACH,CAED3C,EAAU,CAAC0N,EAAX,CAAc,WAAd,CAA2B,IAA3B,EAEA,GAAI,CAACkB,CAAL,CAAe,CACXpP,EAAG,CAACmO,SAAJ,CAAc,OAAd,EAAuBC,MAAvB,GACApO,EAAG,CAACmO,SAAJ,CAAc,MAAd,EAAsBC,MAAtB,EACH,CAGD,GAA+B,GAA3B,CAAAlH,IAAI,CAACC,GAAL,GAAazD,EAAjB,CAAoC,CAChC,MACH,CAhB8B,GAkB3B2L,CAAAA,CAAI,CAAG,CAAC,CAAD,CAlBoB,CAmB3BC,CAAE,GAnByB,CAoB3BC,CAAI,GApBuB,CAqB3BC,CAAK,GArBsB,CAsB3BC,CAAM,CAAG,GAtBkB,CAuB3BC,CAAO,CAAG,GAvBiB,CAwB3BC,CAAQ,CAAG,GAxBgB,CAyB3BC,CAAG,CAAGT,CAAI,CAACpF,IAAL,CAAY,IAAZ,CAAmBoF,CAAI,CAACjK,IAzBH,CA2B/B,GAAI9B,EAAJ,CAAqB,CACjBsM,CAAO,CAAG,CAAV,CACAC,CAAQ,CAAG,CACd,CA9B8B,GAiC3BE,CAAAA,CAAC,CAAGzP,EAAK,CAACiN,MAAN,CAAa,MAAb,EACHC,IADG,CACE,OADF,CACW,MADX,EAEHA,IAFG,CAEE,IAFF,CAEQ,KAAO6B,CAAI,CAACnH,EAFpB,EAGHsF,IAHG,CAGE,GAHF,CAGO6B,CAAI,CAACW,CAAL,CAAS,EAHhB,EAIHxC,IAJG,CAIE,IAJF,CAIQ,OAJR,EAKHf,KALG,CAKG,gBALH,CAKqB,MALrB,EAMHK,IANG,CAMEgD,CANF,EAOHV,IAPG,CAOEa,CAPF,CAOQN,CAPR,CAOgBN,CAAI,CAACa,CAAL,CAAS,CAACP,CAAM,CAAG,CAAV,EAAe,CAAxB,CAA4B,CAP5C,CAO+CJ,CAP/C,CAjCuB,CA2C3BY,CAAE,CAAa,EAAV,CAAAZ,CAAI,CAAC,CAAD,CAAJ,CAAe,EA3CO,CA8C/B,GAAIY,CAAE,CAAGd,CAAI,CAACW,CAAV,EAAexP,EAAM,CAAGqP,CAA5B,CAAsC,CAClCE,CAAC,CAACvC,IAAF,CAAO,GAAP,CAAYhN,EAAM,CAAG2P,CAAT,EAAe3P,EAAM,CAAG6O,CAAI,CAACW,CAA7B,CAAZ,EACKlD,IADL,CACUgD,CADV,EAEKV,IAFL,CAEUa,CAFV,CAEgBN,CAFhB,CAEwBN,CAAI,CAACa,CAAL,CAAS,CAACP,CAAM,CAAG,CAAV,EAAe,CAAxB,CAA4B,CAFpD,CAEuDJ,CAFvD,EAGAC,CAAE,GACL,CAGD,GAAIH,CAAI,CAACa,CAAL,EAAUN,CAAO,CAAG,CAAxB,CAA2B,CACvBG,CAAC,CAACjD,IAAF,CAAOgD,CAAP,EAAYV,IAAZ,CAAiBa,CAAjB,CAAuBN,CAAvB,CAA+BN,CAAI,CAACa,CAAL,CAAS,CAAxC,CAA2CX,CAA3C,EACAG,CAAK,GACR,CAHD,IAGO,IAAIL,CAAI,CAACa,CAAL,EAAU3P,EAAK,CAAGqP,CAAO,CAAG,CAAhC,CAAmC,CACtCG,CAAC,CAACjD,IAAF,CAAOgD,CAAP,EAAYV,IAAZ,CAAiBa,CAAjB,CAAuBN,CAAvB,CAA+BN,CAAI,CAACa,CAAL,EAAUP,CAAM,CAAG,CAAnB,EAAwB,CAAvD,CAA0DJ,CAA1D,EACAE,CAAI,GACP,CAGD,GAAIW,CAAAA,CAAJ,CACA,GAAIV,CAAJ,CAAW,CACPU,CAAK,CAAGf,CAAI,CAACa,CAChB,CAFD,IAEO,IAAIT,CAAJ,CAAU,CACbW,CAAK,CAAGf,CAAI,CAACa,CAAL,EAAUP,CAAM,CAAG,CAAnB,CACX,CAFM,IAEA,CACHS,CAAK,CAAGf,CAAI,CAACa,CAAL,CAAS,CAACP,CAAM,CAAG,CAAV,EAAe,CACnC,CAED,GAAIjF,CAAAA,CAAC,CAAGpK,EAAK,CAACiN,MAAN,CAAa,MAAb,EACHC,IADG,CACE,IADF,CACQ,KAAO6B,CAAI,CAACnH,EADpB,EAEHsF,IAFG,CAEE,GAFF,CAEO4C,CAFP,EAGH5C,IAHG,CAGE,GAHF,CAGOgC,CAAE,CAAGhP,EAAM,CAAG2P,CAAT,CAAc,EAAd,EAAoB3P,EAAM,CAAG6O,CAAI,CAACW,CAAlC,CAAH,CAA0CX,CAAI,CAACW,CAAL,CAAS,EAH5D,EAIHxC,IAJG,CAIE,OAJF,CAIWmC,CAAM,CAAG,EAJpB,EAKHnC,IALG,CAKE,QALF,CAKY2C,CALZ,EAMH1D,KANG,CAMG,QANH,CAMa,OANb,EAOHA,KAPG,CAOG,MAPH,CAOW,QAPX,CAAR,CASAsD,CAAC,CAACM,KAAF,GAGA,GAAI,CAAClF,KAAK,CAACkE,CAAI,CAACnH,EAAN,CAAV,CAAqB,CAEjB,GAAI5E,EAAJ,CAAqB,CACjBsM,CAAO,CAAG,GAAV,CACAC,CAAQ,CAAG,GACd,CACDS,CAAU,CAACjB,CAAD,CAAOc,CAAP,CAAWR,CAAX,CAAmBC,CAAnB,CAA4BC,CAA5B,CAAsCL,CAAtC,CAA0CE,CAA1C,CAAiDD,CAAjD,CACCc,QAAQ,CAAC7F,CAAC,CAAC8C,IAAF,CAAO,GAAP,CAAD,CADT,CACwB+C,QAAQ,CAAC7F,CAAC,CAAC8C,IAAF,CAAO,GAAP,CAAD,CADhC,CAEb,CACJ,CAWD,QAASyC,CAAAA,CAAT,CAAcnD,CAAd,CAAoB0D,CAApB,CAA+BC,CAA/B,CAAwClB,CAAxC,CAA8C,CAE1C,GAAImB,CAAAA,CAAU,CAAG,CAAjB,CAEA5D,CAAI,CAAC6D,IAAL,CAAU,UAAW,IAGb7D,CAAAA,CAAI,CAAG5M,EAAG,CAACoN,MAAJ,CAAW,IAAX,CAHM,CAIbsD,CAAK,CAAG9D,CAAI,CAACA,IAAL,GAAY9B,KAAZ,CAAkB,KAAlB,EAAyB6F,OAAzB,EAJK,CAKbC,CALa,CAMbC,CAAI,CAAG,EANM,CAQbf,CAAC,CAAGlD,CAAI,CAACU,IAAL,CAAU,GAAV,CARS,CASbwD,CAAE,CAAGC,UAAU,CAACnE,CAAI,CAACU,IAAL,CAAU,IAAV,CAAD,CATF,CAWb0D,CAAK,CAAGpE,CAAI,CAACA,IAAL,CAAU,IAAV,EACPS,MADO,CACA,OADA,EAEPC,IAFO,CAEF,GAFE,CAEGiD,CAFH,EAGPjD,IAHO,CAGF,GAHE,CAGGwC,CAHH,EAIPxC,IAJO,CAIF,IAJE,CAIIwD,CAAE,CAAG,IAJT,CAXK,CAkBjBF,CAAI,CAAGF,CAAK,CAACO,GAAN,EAAP,CACA,MAAOL,CAAP,CAAa,CAETC,CAAI,CAACK,IAAL,CAAUN,CAAV,EACAI,CAAK,CAACpE,IAAN,CAAWiE,CAAI,CAACM,IAAL,CAAU,GAAV,CAAX,EAGA,GAAIH,CAAK,CAAC7B,IAAN,GAAaiC,qBAAb,GAAuCd,CAA3C,CAAsD,CAElDO,CAAI,CAACI,GAAL,GACAD,CAAK,CAACpE,IAAN,CAAWiE,CAAI,CAACM,IAAL,CAAU,GAAV,CAAX,EAEAN,CAAI,CAAG,CAACD,CAAD,CAAP,CAEAI,CAAK,CAAGpE,CAAI,CAACS,MAAL,CAAY,OAAZ,EACHC,IADG,CACE,GADF,CACOiD,CADP,EAEHjD,IAFG,CAEE,GAFF,CAEOwC,CAFP,EAGHxC,IAHG,CAGE,IAHF,CAGS,EAAEkD,CAAF,CA5BR,GA4BQ,CAA4BM,CAA7B,CAAmC,IAH3C,EAIHlE,IAJG,CAIEgE,CAJF,CAKX,CACDA,CAAI,CAAGF,CAAK,CAACO,GAAN,EACV,CACJ,CAxCD,EA0CA5B,CAAI,CAAC,CAAD,CAAJ,CAAU,EAAEmB,CACf,CAgBD,QAASJ,CAAAA,CAAT,CAAoBjB,CAApB,CAA0BkC,CAA1B,CAAiCC,CAAjC,CAAwC5B,CAAxC,CAAiDC,CAAjD,CAA2DL,CAA3D,CAA+DE,CAA/D,CAAsED,CAAtE,CAA4EgC,CAA5E,CAAmFC,CAAnF,CAA0F,CAGtF,GAAIC,CAAAA,CAAM,CAAGzF,QAAQ,CAACG,aAAT,CAAuB,QAAvB,CAAb,CACAsF,CAAM,CAACzJ,EAAP,CAAY,SAAZ,CAEAyJ,CAAM,CAAClF,KAAP,CAAamF,QAAb,CAAwB,UAAxB,CACAD,CAAM,CAAClF,KAAP,CAAalM,KAAb,CAAqBqP,CAAO,CAAG,IAA/B,CACA+B,CAAM,CAAClF,KAAP,CAAajM,MAAb,CAAsBqP,CAAQ,CAAG,IAAjC,CARsF,GAWlFgC,CAAAA,CAAG,CAAG3F,QAAQ,CAAC4F,oBAAT,CAA8B,KAA9B,EAAqC,CAArC,EAAwCC,qBAAxC,EAX4E,CAalFC,CAAG,CAAG9F,QAAQ,CAAC+F,IAAT,CAAcF,qBAAd,EAb4E,CAgBtF,GAAY,CAAR,CAAAC,CAAG,CAAC9B,CAAR,CAAe,CACX8B,CAAG,CAAC9B,CAAJ,CAAQ,CACX,CAID,GAAI3M,EAAJ,CAAiB,CACboO,CAAM,CAAClF,KAAP,CAAagD,IAAb,CAAqB/R,MAAM,CAACkK,UAAP,CAAoB,EAApB,CAAyBgI,CAA1B,CAAqC,IAC5D,CAFD,IAEO,IAAItM,EAAJ,CAAqB,CACxBqO,CAAM,CAAClF,KAAP,CAAagD,IAAb,CAAoB,MACvB,CAFM,IAEA,IAAIC,CAAJ,CAAW,CACdiC,CAAM,CAAClF,KAAP,CAAagD,IAAb,CAAqBgC,CAAK,CAAGI,CAAG,CAAC3B,CAAb,CAAkB,IACzC,CAFM,IAEA,IAAIT,CAAJ,CAAU,CACbkC,CAAM,CAAClF,KAAP,CAAagD,IAAb,CAAqBgC,CAAK,CAAGI,CAAG,CAAC3B,CAAZ,CAAgBsB,CAAhB,CAAwB5B,CAAxB,CAAkC,EAAnC,CAAyC,IAChE,CAFM,IAEA,CACH+B,CAAM,CAAClF,KAAP,CAAagD,IAAb,CAAqBgC,CAAK,CAAGI,CAAG,CAAC3B,CAAZ,CAAiBN,CAAO,CAAG,CAA3B,CAAiC4B,CAAK,CAAG,CAA1C,CAAgD,IACvE,CAED,GAAIU,CAAAA,CAAO,CAAGzO,EAAS,CAAG,CAAH,CAAO,EAA9B,CAGA,GAAIH,EAAJ,CAAqB,CACjBqO,CAAM,CAAClF,KAAP,CAAa0F,GAAb,CAAoBN,CAAG,CAAC7B,CAAJ,CAAQgC,CAAG,CAAChC,CAAZ,CAAiBxP,EAAM,CAAG,CAA3B,CAAiC,IACvD,CAFD,IAEO,IAAIgP,CAAJ,CAAQ,CACXmC,CAAM,CAAClF,KAAP,CAAa0F,GAAb,CAAoBD,CAAO,CAAGR,CAAV,CAAkBG,CAAG,CAAC7B,CAAtB,CAA0BgC,CAAG,CAAChC,CAA9B,CAAkCH,CAAnC,CAA+C,IACrE,CAFM,IAEA,CACH8B,CAAM,CAAClF,KAAP,CAAa0F,GAAb,CAAoBD,CAAO,CAAGR,CAAV,CAAkBG,CAAG,CAAC7B,CAAtB,CAA0BuB,CAA1B,CAAkCS,CAAG,CAAChC,CAAvC,CAA4C,IAClE,CAID,GAAmB,KAAf,EAAAX,CAAI,CAAC1G,MAAL,EAAqC,SAAb,EAAA0G,CAAI,CAACpF,IAAjC,CAAoD,CAGhD,GAAImI,CAAAA,CAAK,CAAGlG,QAAQ,CAACG,aAAT,CAAuB,KAAvB,CAAZ,CACA+F,CAAK,CAAClK,EAAN,CAAW,OAAX,CACAkK,CAAK,CAAC3F,KAAN,CAAYmF,QAAZ,CAAuB,UAAvB,CAGAQ,CAAK,CAAC3F,KAAN,CAAYlM,KAAZ,CAAqBgQ,QAAQ,CAACoB,CAAM,CAAClF,KAAP,CAAalM,KAAd,CAAR,CAA+B,EAAhC,CAAsC,IAA1D,CACA6R,CAAK,CAAC3F,KAAN,CAAYjM,MAAZ,CAAsB+P,QAAQ,CAACoB,CAAM,CAAClF,KAAP,CAAajM,MAAd,CAAR,CAAgC,EAAjC,CAAuC,IAA5D,CACA4R,CAAK,CAAC3F,KAAN,CAAYgD,IAAZ,CAAoBc,QAAQ,CAACoB,CAAM,CAAClF,KAAP,CAAagD,IAAd,CAAR,CAA8B,EAA/B,CAAqC,IAAxD,CACA2C,CAAK,CAAC3F,KAAN,CAAY0F,GAAZ,CAAmB5B,QAAQ,CAACoB,CAAM,CAAClF,KAAP,CAAa0F,GAAd,CAAR,CAA6B,EAA9B,CAAoC,IAAtD,CAGAC,CAAK,CAAC1F,gBAAN,CAAuB,UAAvB,CAAmC,SAAShE,CAAT,CAAY,CAE3C,GAAI2J,CAAAA,CAAC,CAAG,KAAKN,qBAAL,EAAR,CAGA,GAAIrJ,CAAC,CAACwH,CAAF,CAAMmC,CAAC,CAACnC,CAAR,EAAaxH,CAAC,CAACwH,CAAF,CAAMmC,CAAC,CAACnC,CAAF,CAAMmC,CAAC,CAAC9R,KAA3B,EAAoCmI,CAAC,CAACsH,CAAF,CAAMqC,CAAC,CAACrC,CAA5C,EAAiDtH,CAAC,CAACsH,CAAF,CAAMqC,CAAC,CAACrC,CAAF,CAAMqC,CAAC,CAAC7R,MAAnE,CAA2E,CACvE,MACH,CAGDgD,EAAQ,GAAR,CACAuI,UAAU,CAACuG,CAAD,CAAgB,GAAhB,CACb,CAZD,EAeAF,CAAK,CAAC1F,gBAAN,CAAuB,WAAvB,CAAoC,UAAW,CAC3ClJ,EAAQ,GACX,CAFD,EAKAmO,CAAM,CAACY,GAAP,CAAa5T,EAAS,CAAG,MAAZ,CAAqB0Q,CAAI,CAAC1G,MAA1B,CAAmC,eAAnC,CAAqD0G,CAAI,CAACnH,EAAvE,CACAgE,QAAQ,CAAC+F,IAAT,CAAcpF,WAAd,CAA0BuF,CAA1B,EACAlG,QAAQ,CAAC+F,IAAT,CAAcpF,WAAd,CAA0B8E,CAA1B,CACH,CACJ,CASD,QAASnD,CAAAA,CAAT,CAAkBgE,CAAlB,CAAuB,CAGnB,GAAInP,EAAW,EAAkB,WAAd,EAAAmP,CAAG,CAACtI,MAAvB,CAA8C,CAC1C,MACH,CAGDxJ,EAAU,CAAC0N,EAAX,CAAc,UAAd,CAA0B,IAA1B,EACAzN,EAAU,CAACyN,EAAX,CAAc,UAAd,CAA0B,IAA1B,EAEArC,UAAU,CAACuG,CAAD,CAAgB,GAAhB,CACb,CAKD,QAASA,CAAAA,CAAT,EAAyB,CAErB,GAAI9O,EAAJ,CAAc,CACV,MACH,CAEDtD,EAAG,CAACmO,SAAJ,CAAc,OAAd,EAAuBC,MAAvB,GACApO,EAAG,CAACmO,SAAJ,CAAc,MAAd,EAAsBC,MAAtB,GACApO,EAAG,CAACmO,SAAJ,CAAc,UAAd,EAA0BC,MAA1B,GACApO,EAAG,CAACmO,SAAJ,CAAc,QAAd,EAAwBC,MAAxB,GAGA5N,EAAU,CACL0N,EADL,CACQ,WADR,CACqBG,CADrB,EAEKH,EAFL,CAEQ,UAFR,CAEoBI,CAFpB,EAIA,GAAIlL,EAAJ,CAAqB,CAEjB3C,EAAU,CACLyN,EADL,CACQ,WADR,CACqBqE,EADrB,EAEKrE,EAFL,CAEQ,UAFR,CAEoBI,CAFpB,EAKA,IAAK,GAAInD,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGnI,EAAS,CAAC6F,MAA9B,CAAsCsC,CAAC,EAAvC,CAA2C,CACvCnL,EAAG,CAACoN,MAAJ,CAAW,aAAejC,CAA1B,EACK+C,EADL,CACQ,WADR,CACqBsE,EAAmB,CAACC,IAApB,CAAyB,IAAzB,CAA+BtH,CAA/B,IADrB,EAEAnL,EAAG,CAACoN,MAAJ,CAAW,aAAejC,CAA1B,EACK+C,EADL,CACQ,WADR,CACqBsE,EAAmB,CAACC,IAApB,CAAyB,IAAzB,CAA+BtH,CAA/B,IADrB,CAEH,CACJ,CACJ,CAQD,QAASoD,CAAAA,CAAT,EAAiB,IAITmE,CAAAA,CAAI,CAAGrS,EAAK,CAAG,CAJN,CAKTsS,CAAI,CAAGrS,EAAM,CAAG,CALP,CAMTsS,CAAI,CAAG9T,EANE,CAQb,GAAIkF,EAAU,CAAC6O,SAAX,SAAJ,CAAwC,CACpC7O,EAAU,CAAC6O,SAAX,CAAuBH,CAAvB,CACA1O,EAAU,CAAC8O,SAAX,CAAuBH,CAC1B,CAHD,IAGO,CACHD,CAAI,CAAG1O,EAAU,CAAC6O,SAAlB,CACAF,CAAI,CAAG3O,EAAU,CAAC8O,SACrB,CAGD,IAAK,GAAI3H,CAAAA,CAAC,CAAG,CAAR,CAAW4H,CAAX,CAAeC,CAApB,CAAwB7H,CAAC,CAAGpK,EAAS,CAACiI,KAAV,CAAgBH,MAA5C,CAAoDsC,CAAC,EAArD,CAAyD,CAErD4H,CAAE,CAAGhS,EAAS,CAACiI,KAAV,CAAgBmC,CAAhB,EAAmBvB,MAAnB,CAA4BgJ,CAA5B,CAAmCF,CAAxC,CACAM,CAAE,CAAGjS,EAAS,CAACiI,KAAV,CAAgBmC,CAAhB,EAAmBtB,MAAnB,CAA4B+I,CAA5B,CAAmCD,CAAxC,CAEA,GAAS,CAAL,CAAAI,CAAE,EAAQA,CAAE,CAAG1S,EAAf,EAA6B,CAAL,CAAA2S,CAAxB,EAAkCA,CAAE,CAAG1S,EAA3C,CAAmD,CAE/CsS,CAAI,EAAI,EAAR,CACA,EAAEzH,CACL,CACJ,CAEDrM,EAAW,CAAG8T,CAAd,CACA5O,EAAU,CAACiP,QAAX,CAAsBL,CAAtB,CAGAnS,EAAU,CACL6M,IADL,CACU,IADV,CACgB,SAASvC,CAAT,CAAY,CAEpB,GAAImI,CAAAA,CAAU,CAAGnS,EAAS,CAACiI,KAAV,CAAgBmK,MAAhB,CAAuB,SAAS3F,CAAT,CAAY,CAChD,GAAI4F,CAAAA,CAAG,CAAsB,QAAnB,QAAOrI,CAAAA,CAAC,CAACZ,MAAT,CAA8BY,CAAC,CAACZ,MAAhC,CAAyCY,CAAC,CAACZ,MAAF,CAASnC,EAA5D,CACA,MAAOwF,CAAAA,CAAC,CAACxF,EAAF,EAAQoL,CAClB,CAHgB,EAGd,CAHc,CAAjB,CAKApT,EAAG,CAACoN,MAAJ,CAAW,IAAX,EAAiBE,IAAjB,CAAsB,IAAtB,CAA6B4F,CAAU,CAACrJ,MAAX,CAAoB+I,CAArB,CAA6BD,CAAzD,EACA,MAAQO,CAAAA,CAAU,CAACtJ,MAAX,CAAoBgJ,CAArB,CAA6BF,CACvC,CAVL,EAWKpF,IAXL,CAWU,IAXV,CAWgB,SAASvC,CAAT,CAAY,CAEpB,GAAIsI,CAAAA,CAAU,CAAGtS,EAAS,CAACiI,KAAV,CAAgBmK,MAAhB,CAAuB,SAAS3F,CAAT,CAAY,CAChD,GAAI8F,CAAAA,CAAG,CAAsB,QAAnB,QAAOvI,CAAAA,CAAC,CAACX,MAAT,CAA8BW,CAAC,CAACX,MAAhC,CAAyCW,CAAC,CAACX,MAAF,CAASpC,EAA5D,CACA,MAAOwF,CAAAA,CAAC,CAACxF,EAAF,EAAQsL,CAClB,CAHgB,EAGd,CAHc,CAAjB,CAKAtT,EAAG,CAACoN,MAAJ,CAAW,IAAX,EAAiBE,IAAjB,CAAsB,IAAtB,CAA6B+F,CAAU,CAACxJ,MAAX,CAAoB+I,CAArB,CAA6BD,CAAzD,EACA,MAAQU,CAAAA,CAAU,CAACzJ,MAAX,CAAoBgJ,CAArB,CAA6BF,CACvC,CApBL,EAqBKnG,KArBL,CAqBW,SArBX,CAqBsB,SAASiB,CAAT,CAAY,CAC1B,MAAQ,CAACA,CAAC,CAACrD,MAAF,CAAST,OAAV,EAAqB,CAAC8D,CAAC,CAACpD,MAAF,CAASV,OAAhC,CAA2C,MAA3C,CAAoD,OAC9D,CAvBL,EA0BAlJ,EAAU,CACL8M,IADL,CACU,IADV,CACgB,SAASE,CAAT,CAAY,CACpBA,CAAC,CAACwC,CAAF,CAAOxC,CAAC,CAAC5D,MAAF,CAAWgJ,CAAZ,CAAoBF,CAA1B,CACA,MAAOlF,CAAAA,CAAC,CAACwC,CACZ,CAJL,EAKK1C,IALL,CAKU,IALV,CAKgB,SAASE,CAAT,CAAY,CACpBA,CAAC,CAACsC,CAAF,CAAOtC,CAAC,CAAC3D,MAAF,CAAW+I,CAAZ,CAAoBD,CAA1B,CACA,MAAOnF,CAAAA,CAAC,CAACsC,CACZ,CARL,EASKvD,KATL,CASW,SATX,CASsB,SAASiB,CAAT,CAAY,CAC1B,MAAQ,CAACA,CAAC,CAAC9D,OAAJ,CAAe,MAAf,CAAwB,OAClC,CAXL,EAYK6C,KAZL,CAYW,MAZX,CAYmB,SAASiB,CAAT,CAAY,CACvB,MAAOA,CAAAA,CAAC,CAACxD,MACZ,CAdL,EAeKmG,KAfL,EAgBH,CAKD,QAAS3B,CAAAA,CAAT,EAAiB,CAEb,GAAIZ,CAAAA,CAAM,CAAG7J,EAAb,CAGAtD,EAAU,CACL6M,IADL,CACU,IADV,CACgB,SAASE,CAAT,CAAY,CACpB,MAAOA,CAAAA,CAAC,CAACrD,MAAF,CAAS6F,CACnB,CAHL,EAIK1C,IAJL,CAIU,IAJV,CAIgB,SAASE,CAAT,CAAY,CACpB,MAAOA,CAAAA,CAAC,CAACrD,MAAF,CAAS2F,CACnB,CANL,EAOKxC,IAPL,CAOU,IAPV,CAOgB,SAASE,CAAT,CAAY,CACpB,MAAOA,CAAAA,CAAC,CAACpD,MAAF,CAAS4F,CACnB,CATL,EAUK1C,IAVL,CAUU,IAVV,CAUgB,SAASE,CAAT,CAAY,CACpB,MAAOA,CAAAA,CAAC,CAACpD,MAAF,CAAS0F,CACnB,CAZL,EAaKvD,KAbL,CAaW,cAbX,CAa2B,SAASiB,CAAT,CAAY,CAC/B,MAAmB,EAAX,CAAAA,CAAC,CAACnD,MAAH,CAAiB,IAC3B,CAfL,EAgBKkC,KAhBL,CAgBW,SAhBX,CAgBsB,SAASiB,CAAT,CAAY,CAC1B,MAAOA,CAAAA,CAAC,CAACrD,MAAF,CAAST,OAAT,EAAoB8D,CAAC,CAACpD,MAAF,CAASV,OAA7B,CAAuC,OAAvC,CAAiD,MAC3D,CAlBL,EAqBAlJ,EAAU,CACL8M,IADL,CACU,IADV,CACgB,SAASE,CAAT,CAAY,CACpBA,CAAC,CAACwC,CAAF,CAAMpI,IAAI,CAACwE,GAAL,CAASwB,CAAT,CAAiBhG,IAAI,CAACC,GAAL,CAASxH,EAAK,CAAGuN,CAAjB,CAAyBJ,CAAC,CAACwC,CAA3B,CAAjB,CAAN,CACA,MAAOxC,CAAAA,CAAC,CAACwC,CACZ,CAJL,EAKK1C,IALL,CAKU,IALV,CAKgB,SAASE,CAAT,CAAY,CACpBA,CAAC,CAACsC,CAAF,CAAMlI,IAAI,CAACwE,GAAL,CAASwB,CAAT,CAAiBhG,IAAI,CAACC,GAAL,CAASvH,EAAM,CAAGsN,CAAlB,CAA0BJ,CAAC,CAACsC,CAA5B,CAAjB,CAAN,CACA,MAAOtC,CAAAA,CAAC,CAACsC,CACZ,CARL,EASKvD,KATL,CASW,MATX,CASmB,SAASiB,CAAT,CAAY,CACvB,MAAOA,CAAAA,CAAC,CAACxD,MACZ,CAXL,EAYKuC,KAZL,CAYW,SAZX,CAYsB,SAASiB,CAAT,CAAY,CAC1B,MAAOA,CAAAA,CAAC,CAAC9D,OAAF,CAAY,OAAZ,CAAsB,MAChC,CAdL,EAeKyG,KAfL,GAkBAnQ,EAAG,CAACmO,SAAJ,CAAc,MAAd,EAAsBgC,KAAtB,GACAnQ,EAAG,CAACmO,SAAJ,CAAc,MAAd,EAAsBgC,KAAtB,EACH,CAKD,QAASxB,CAAAA,CAAT,EAAoB,CAEhB,GAAI,CAACtP,EAAL,CAAe,CACX,MACH,CAEDW,EAAG,CAACoN,MAAJ,CAAW,OAAX,EAAoBgB,MAApB,GAEA,GAAkB,CAAd,EAAA3O,EAAJ,CAAqB,CACjBA,EAAU,CAAGyH,IAAI,CAACC,GAAL,EAChB,CAGD,GAAI0I,CAAAA,CAAC,CAAG,GAAI3I,CAAAA,IAAZ,CACA2I,CAAC,CAAC0D,OAAF,CAAU9T,EAAV,EAGA,GAAI+T,CAAAA,CAAI,CAAG3D,CAAC,CAAC4D,UAAF,EAAX,CACA,GAAW,EAAP,CAAAD,CAAJ,CAAe,CACXA,CAAI,CAAG,IAAMA,CAChB,CAGDpT,EAAK,CAACiN,MAAN,CAAa,MAAb,EACKC,IADL,CACU,IADV,CACgB,MADhB,EAEKA,IAFL,CAEU,GAFV,CAEehN,EAAM,CAAG,EAFxB,EAGKgN,IAHL,CAGU,IAHV,CAGgB,OAHhB,EAIKA,IAJL,CAIU,GAJV,CAIe,CAJf,EAKKf,KALL,CAKW,gBALX,CAK6B,MAL7B,EAMKK,IANL,CAMUvN,EAAQ,CAACG,EAAD,CAAR,CAAoB,GAApB,CAA0BqQ,CAAC,CAAC6D,QAAF,EAA1B,CAAyC,GAAzC,CAA+CF,CAA/C,CAAsD,GAAtD,CAA4D3D,CAAC,CAAC8D,YAAF,EANtE,CAOH,CAMD,QAAS/E,CAAAA,CAAT,EAA8B,CAG1B,GAAIgF,CAAAA,CAAU,CAAGC,CAAc,EAA/B,CAGA,GAAI5U,EAAS,EAAIE,EAAjB,CAA4B,CAGxB,GAAI6J,CAAAA,CAAK,CAAG,EAAZ,CACA,IAAK,GAAID,CAAAA,CAAT,GAAgB6K,CAAAA,CAAhB,CAA4B,CAExB,GAAW,OAAP,EAAA7K,CAAG,EAAsB,QAAP,EAAAA,CAAtB,CAAuC,CACnC,QACH,CACDC,CAAK,CAACD,CAAD,CAAL,CAAa6K,CAAU,CAAC7K,CAAD,CAC1B,CAGD9J,EAAS,CAACD,EAAD,CAAT,CAAoBgK,CAApB,CACA7J,EAAS,CAACH,EAAD,CAAT,CAAoB4U,CAAU,CAACnO,KAClC,CAGDmO,CAAU,CAACE,IAAX,CAAkB5M,IAAI,CAACC,GAAL,EAAlB,CACA1H,EAAU,CAAGmU,CAAU,CAACE,IAAxB,CAGA,GAAI1U,EAAJ,CAAgB,CACZA,EAAU,CAACJ,EAAD,CAAV,CAAqB4U,CAAU,CAACE,IACnC,CAEDC,CAAU,CAACpW,EAAD,CAAeiW,CAAf,CACb,CAOD,QAASC,CAAAA,CAAT,EAA0B,IAElBD,CAAAA,CAAU,CAAG,EAFK,CAGlBI,CAHkB,CAIlBlD,CAJkB,CAKlBtD,CALkB,CAMlByG,CANkB,CAOlB7H,CAAG,CAAG,CAPY,CAQlB8H,CAAE,CAAG7T,EAAK,CAAG,CARK,CASlB8T,CAAE,CAAG7T,EAAM,CAAG,CATI,CAYtBS,EAAS,CAACiI,KAAV,CAAgBlB,OAAhB,CAAwB,SAASsM,CAAT,CAAa,CAEjCJ,CAAE,CAAGI,CAAE,CAACpE,CAAH,CAAOkE,CAAZ,CACApD,CAAE,CAAGsD,CAAE,CAACtE,CAAH,CAAOqE,CAAZ,CACA3G,CAAC,CAAG5F,IAAI,CAACyM,IAAL,CAAUL,CAAE,CAAGA,CAAL,CAAUlD,CAAE,CAAGA,CAAzB,CAAJ,CAEA,GAAItD,CAAC,CAAGpB,CAAR,CAAa,CACTA,CAAG,CAAGoB,CAAN,CACAyG,CAAO,CAAGG,CACb,CACJ,CAVD,EAaAR,CAAU,CAACnO,KAAX,CAAmB2G,CAAnB,CACAwH,CAAU,CAACU,MAAX,CAAoBL,CAAO,CAACjM,EAA5B,CACAlJ,EAAW,CAAGsN,CAAd,CAGArL,EAAS,CAACiI,KAAV,CAAgBlB,OAAhB,CAAwB,SAASsM,CAAT,CAAa,CAEjCR,CAAU,CAACQ,CAAE,CAACpM,EAAJ,CAAV,CAAoB,CAChB,OAAU,GAAM,CAACoM,CAAE,CAACpE,CAAH,CAAOkE,CAAR,EAAc9H,CADd,CAEhB,OAAU,GAAM,CAACgI,CAAE,CAACtE,CAAH,CAAOqE,CAAR,EAAc/H,CAFd,CAGhB,QAAWgI,CAAE,CAAC1K,OAAH,CAAa,CAAb,CAAiB,CAHZ,CAApB,CAOA,GAAI,CAAC0K,CAAE,CAACxK,MAAR,CAAgB,CACZwK,CAAE,CAACxK,MAAH,CAAY,CAACwK,CAAE,CAACpE,CAAH,CAAOkE,CAAR,EAAc9H,CAA1B,CACAgI,CAAE,CAACvK,MAAH,CAAY,CAACuK,CAAE,CAACtE,CAAH,CAAOqE,CAAR,EAAc/H,CAC7B,CACJ,CAbD,EAeAxN,EAAW,CAAGgV,CAAd,CACA,MAAOA,CAAAA,CACV,CAQD,QAASG,CAAAA,CAAT,CAAoBQ,CAApB,CAAyBC,CAAzB,CAAkC,CAE9B,GAAIC,CAAAA,CAAG,CAAG,GAAIC,CAAAA,cAAd,CACAD,CAAG,CAACE,IAAJ,CAAS,MAAT,CAAiBJ,CAAjB,EACAE,CAAG,CAACG,gBAAJ,CAAqB,cAArB,CAAqC,mCAArC,EAEAH,CAAG,CAACI,kBAAJ,CAAyB,UAAW,CAChC,GAAuB,CAAnB,OAAKC,UAAL,EAAuC,GAAf,OAAKC,MAAjC,CAAgD,CAE/C,CACJ,CAJD,CAKAN,CAAG,CAACO,IAAJ,CAAS,OAASjW,EAAT,CAAoB,QAApB,CAA+BkW,IAAI,CAACC,SAAL,CAAeV,CAAf,CAA/B,CACF,WADE,CACY1U,EADrB,CAEH,CAMD,QAAS2L,CAAAA,CAAT,EAA2B,IAGnBM,CAAAA,CAAE,CAAGC,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAHc,CAMnBkJ,CAAI,CAAGnJ,QAAQ,CAACG,aAAT,CAAuB,QAAvB,CANY,CAOvBgJ,CAAI,CAACzI,SAAL,CAAiB7M,EAAW,CAACsV,IAA7B,CACAA,CAAI,CAACC,SAAL,CAAiB,wBAAjB,CACAD,CAAI,CAAC3I,gBAAL,CAAsB,OAAtB,CAA+B6I,CAA/B,EACAtJ,CAAE,CAACY,WAAH,CAAewI,CAAf,EAVuB,GAYnBG,CAAAA,CAAO,CAAGH,CAAI,CAACtD,qBAAL,GAA6BvR,MAZpB,CAenBiV,CAAK,CAAGvJ,QAAQ,CAACG,aAAT,CAAuB,QAAvB,CAfW,CAgBvBoJ,CAAK,CAAC7I,SAAN,CAAkB7M,EAAW,CAAC0V,KAA9B,CACAA,CAAK,CAACH,SAAN,CAAkB,wBAAlB,CACAG,CAAK,CAAC/I,gBAAN,CAAuB,OAAvB,CAAgCgJ,CAAhC,EACAzJ,CAAE,CAACY,WAAH,CAAe4I,CAAf,EAGAtT,EAAW,CAAG+J,QAAQ,CAACG,aAAT,CAAuB,QAAvB,CAAd,CACAlK,EAAW,CAACwT,IAAZ,CAAmB,CAAnB,CACAxT,EAAW,CAAC+F,EAAZ,CAAiB,gBAAjB,CACA/F,EAAW,CAACsK,KAAZ,CAAkBmJ,QAAlB,CAA6B,MAA7B,CAEA,GAAIC,CAAAA,CAAU,CAAGrV,EAAM,CAAGgV,CAAT,CAAmB,EAApC,CACArT,EAAW,CAACsK,KAAZ,CAAkBjM,MAAlB,CAA2BqV,CAAU,CAAG,IAAxC,CACA1T,EAAW,CAACuK,gBAAZ,CAA6B,QAA7B,CAAuCoJ,CAAvC,EAGA,IAAK,GAAI7M,CAAAA,CAAT,GAAgB5J,CAAAA,EAAhB,CAA2B,CAEvB,GAAIsL,CAAAA,CAAC,CAAGuB,QAAQ,CAACG,aAAT,CAAuB,QAAvB,CAAR,CACA1B,CAAC,CAAC6B,KAAF,CAAUvD,CAAV,CACA0B,CAAC,CAACmC,IAAF,CAAS7D,CAAT,CAEA,GAAI/J,EAAM,EAAI+J,CAAd,CAAmB,CACf0B,CAAC,CAACoL,QAAF,GACH,CACD5T,EAAW,CAAC0K,WAAZ,CAAwBlC,CAAxB,CACH,CAEDsB,CAAE,CAACY,WAAH,CAAe1K,EAAf,CACH,CASD,QAASoT,CAAAA,CAAT,EAAqB,CAEjB,GAAIS,CAAAA,CAAG,CAAG,GAAIC,CAAAA,KAAd,CACIC,CAAU,CAAG,GAAIC,CAAAA,aADrB,CAEIC,CAAM,CAAGF,CAAU,CAACG,iBAAX,CAA6B/V,EAAK,CAAC+O,IAAN,EAA7B,CAFb,CAIA2G,CAAG,CAACzD,GAAJ,CAAU,6BAA+B7U,MAAM,CAAC4Y,IAAP,CAAYF,CAAZ,CAAzC,CACAlK,QAAQ,CAAC+F,IAAT,CAAcpF,WAAd,CAA0BmJ,CAA1B,EAEA,GAAItL,CAAAA,CAAC,CAAGwB,QAAQ,CAACqK,WAAT,EAAR,CACA7L,CAAC,CAAC8L,cAAF,CAAiBR,CAAjB,EACAtL,CAAC,CAAC+L,WAAF,CAAcT,CAAd,EACAtL,CAAC,CAACgM,UAAF,CAAaV,CAAb,EAEA,GAAIW,CAAAA,CAAG,CAAGjZ,MAAM,CAACkZ,YAAP,EAAV,CACAD,CAAG,CAACE,QAAJ,CAAanM,CAAb,EAEAwB,QAAQ,CAAC4K,WAAT,CAAqB,MAArB,EAEA5K,QAAQ,CAAC+F,IAAT,CAAc8E,WAAd,CAA0Bf,CAA1B,CACH,CAMD,QAASN,CAAAA,CAAT,EAAsB,IAEdQ,CAAAA,CAAU,CAAG,GAAIC,CAAAA,aAFH,CAGdC,CAAM,CAAGF,CAAU,CAACG,iBAAX,CAA6B/V,EAAK,CAAC+O,IAAN,EAA7B,CAHK,CAKd2H,CAAQ,CAAGtZ,MAAM,CAACmX,IAAP,EALG,CAMlBmC,CAAQ,CAAC9K,QAAT,CAAkB+K,KAAlB,CAAwB,wCACAvZ,MAAM,CAAC4Y,IAAP,CAAYF,CAAZ,CADA,CACsB,MAD9C,EAEAY,CAAQ,CAACvB,KAAT,GACAuB,CAAQ,CAACE,KAAT,EACH,CAOD,QAASpB,CAAAA,CAAT,EAAuB,CAMnB,OAHIa,CAAAA,CAAG,CAAGzK,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,CAGV,CAFIlD,CAEJ,CAASoC,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGsL,CAAG,CAACQ,OAAJ,CAAYpO,MAAhC,CAAwCsC,CAAC,EAAzC,CAA6C,CACzC,GAAIsL,CAAG,CAACQ,OAAJ,CAAY9L,CAAZ,EAAe0K,QAAnB,CAA6B,CACzB9M,CAAG,CAAG0N,CAAG,CAACQ,OAAJ,CAAY9L,CAAZ,EAAemB,KAArB,CACA,KACH,CACJ,CAGD,GAAIvD,CAAG,EAAI/J,EAAX,CAAmB,CACf2E,EAAe,CAAG2H,CAAlB,CACA1H,EAAW,CAAG2H,CAAd,CACA1H,EAAa,CAAG2H,CAAhB,CACA1H,EAAc,CAAG0D,CACpB,CALD,IAKO,CAEH7D,EAAe,CAAG,IAAlB,CACAC,EAAW,CAAG,IAAd,CACAC,EAAa,CAAG,IAAhB,CACAC,EAAc,CAAG,IACpB,CAGDlF,EAAW,CAAGK,EAAS,CAAC8J,CAAD,CAAvB,CACAlK,EAAS,CAAGK,EAAQ,CAAC6J,CAAD,CAApB,CACAjK,EAAW,CAAGK,EAAS,CAAC4J,CAAD,CAAvB,CACAtJ,EAAU,CAAGL,EAAU,CAAC2J,CAAD,CAAvB,CACA1K,EAAO,CAAGiB,EAAO,CAACyJ,CAAD,CAAjB,CACAvK,EAAU,CAAGe,EAAW,CAACwJ,CAAD,CAAxB,CACAvJ,EAAO,CAAGuJ,CAAV,CAGA3I,EAAK,CAACgO,MAAN,GACApM,EAAS,CAAG,EAAZ,CACAkG,CAAmB,GACnBlI,EAAG,CAACmO,SAAJ,CAAc,WAAd,EAA2BC,MAA3B,GACAzC,CAAc,GAGdhL,EAAa,CAAG,CAAhB,CACAwH,CAAO,GACPxH,EAAa,CAAG,CAAhB,CAGA,GAAIuW,CAAAA,CAAa,CAAGlL,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,EAA0CS,SAA9D,CACAwK,CAAa,CAAGnG,UAAU,CAACmG,CAAa,CAACpM,KAAd,CAAoB,GAApB,EAAyB,CAAzB,CAAD,CAA1B,CACAY,CAAS,CAACwL,CAAD,CAAT,CAGA,IAAK,GAAIC,CAAAA,CAAT,GAAoBnV,CAAAA,EAApB,CAA+B,CAC3B,GAAIpD,EAAW,CAACuY,CAAD,CAAf,CAA0B,CACtBnV,EAAS,CAACmV,CAAD,CAAT,CAAmBC,OAAnB,CAA6D,CAAhC,EAAAxY,EAAW,CAACuY,CAAD,CAAX,CAAqBzN,OAArB,MAChC,CAGD,GAAI1K,EAAM,EAAI+J,CAAd,CAAmB,CACf/G,EAAS,CAACmV,CAAD,CAAT,CAAmBE,mBAAnB,CAAuC,QAAvC,CAAiDC,CAAjD,EACAtV,EAAS,CAACmV,CAAD,CAAT,CAAmB3K,gBAAnB,CAAoC,QAApC,CAA8C+K,CAA9C,CACH,CAHD,IAGO,CACHvV,EAAS,CAACmV,CAAD,CAAT,CAAmBE,mBAAnB,CAAuC,QAAvC,CAAiDE,CAAjD,EACAvV,EAAS,CAACmV,CAAD,CAAT,CAAmB3K,gBAAnB,CAAoC,QAApC,CAA8C8K,CAA9C,CACH,CACJ,CACJ,CAMD,QAASA,CAAAA,CAAT,EAAuB,CACnB,KAAKF,OAAL,CAAe,CAAC,KAAKA,OACxB,CAKD,QAASzL,CAAAA,CAAT,EAA0B,CAGtB,GACI6L,CAAAA,CADJ,CAEAzV,EAAU,CAAGiK,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAb,CACAlK,EAAU,CAACwK,KAAX,CAAmB,UAAYhO,EAAZ,CAA0B,cAA1B,CAA2C+B,EAA3C,CACf,iBADe,CACK/B,EADL,CACmB,iBADnB,KACkD,KADrE,CANsB,GAclBkZ,CAAAA,CAAU,CAAG,SAASC,CAAT,CAAY,CAEzB,GAAIC,CAAAA,CAAE,CAAG5V,EAAU,CAAC6V,UAAX,CAAwB,EAAjC,CAEA,GAAIF,CAAC,CAAC1H,CAAF,EAAO2H,CAAP,EAAaD,CAAC,CAAC1H,CAAF,EAAO2H,CAAE,CAAG,CAA7B,CAAgC,CAC5B5V,EAAU,CAACwK,KAAX,CAAiBsL,MAAjB,CAA0B,YAC7B,CAFD,IAEO,CACH9V,EAAU,CAACwK,KAAX,CAAiBsL,MAAjB,CAA0B,MAC7B,CACJ,CAvBqB,CA0BlBC,CAAY,CAAG,SAASJ,CAAT,CAAY,CAE3B,GAAI1D,CAAAA,CAAE,CAAGwD,CAAI,CAAGE,CAAC,CAAC1H,CAAlB,CACAwH,CAAI,CAAGE,CAAC,CAAC1H,CAAT,CAEA,GAAI+H,CAAAA,CAAQ,CAAG1H,QAAQ,CAACtO,EAAU,CAACwK,KAAX,CAAiBlM,KAAlB,CAAR,CAAmC2T,CAAlD,CAEA,GAAI+D,CAAQ,IAAZ,CAAyB,CACrBA,CAAQ,IACX,CAFD,IAEO,IAAIA,CAAQ,CAAGxZ,EAAf,CAA4B,CAC/BwZ,CAAQ,CAAGxZ,EACd,CAEDwD,EAAU,CAACwK,KAAX,CAAiBlM,KAAjB,CAAyB0X,CAAQ,CAAG,IACvC,CAxCqB,CA2CtBhW,EAAU,CAACyK,gBAAX,CAA4B,WAA5B,CAAyCiL,CAAzC,EAEA1V,EAAU,CAACyK,gBAAX,CAA4B,WAA5B,CAAyC,SAASkL,CAAT,CAAY,CAEjDF,CAAI,CAAGE,CAAC,CAAC1H,CAAT,CAEA,GAA+B,YAA3B,EAAAjO,EAAU,CAACwK,KAAX,CAAiBsL,MAArB,CAA6C,CACzC9V,EAAU,CAACyK,gBAAX,CAA4B,WAA5B,CAAyCsL,CAAzC,CACH,CACJ,CAPD,EASA9L,QAAQ,CAACQ,gBAAT,CAA0B,SAA1B,CAAqC,UAAW,CAC5CzK,EAAU,CAACsV,mBAAX,CAA+B,WAA/B,CAA4CS,CAA5C,CACH,CAFD,EAKAE,CAAU,CAACjW,EAAD,CACb,CAQD,QAASiW,CAAAA,CAAT,CAAoBC,CAApB,CAA4B,CAGxB,GAAI1N,CAAAA,CAAI,CAAGyB,QAAQ,CAACG,aAAT,CAAuB,IAAvB,CAAX,CACA5B,CAAI,CAACvC,EAAL,CAAU,UAAV,CAEA,GAAIkQ,CAAAA,CAAQ,CAAGlM,QAAQ,CAACG,aAAT,CAAuB,MAAvB,CAAf,CACA+L,CAAQ,CAAC9C,SAAT,CAAqB,gBAArB,CACA8C,CAAQ,CAACxL,SAAT,CAAqBlO,EAArB,CAEA,GAAI2Z,CAAAA,CAAM,CAAGnM,QAAQ,CAACG,aAAT,CAAuB,IAAvB,CAAb,CACAgM,CAAM,CAACxL,WAAP,CAAmBuL,CAAnB,EAEA,GAAIE,CAAAA,CAAM,CAAGpM,QAAQ,CAACG,aAAT,CAAuB,IAAvB,CAAb,CACAgM,CAAM,CAACxL,WAAP,CAAmByL,CAAnB,EACA7N,CAAI,CAACoC,WAAL,CAAiBwL,CAAjB,EAEA,GAAIE,CAAAA,CAAJ,CACIC,CADJ,CAEIC,CAFJ,CAGItO,CAAO,CAAG,CAAC,CAHf,CAMA5L,EAAO,CAACma,IAAR,CAAa,SAASC,CAAT,CAAYtG,CAAZ,CAAe,CACxB,MAAOsG,CAAAA,CAAC,CAAC9O,IAAF,CAASwI,CAAC,CAACxI,IACrB,CAFD,EAKAtL,EAAO,CAACyJ,OAAR,CAAgB,SAASU,CAAT,CAAY,CAGxB,GAAIyB,CAAO,EAAIzB,CAAC,CAACmB,IAAjB,CAAuB,CAEnB2O,CAAE,CAAGtM,QAAQ,CAACG,aAAT,CAAuB,IAAvB,CAAL,CACAmM,CAAE,CAAClD,SAAH,CAAe,QAAf,CAEAmD,CAAI,CAAGvM,QAAQ,CAACG,aAAT,CAAuB,MAAvB,CAAP,CACAoM,CAAI,CAACnD,SAAL,CAAiB,OAAjB,CACAmD,CAAI,CAAC/L,gBAAL,CAAsB,OAAtB,CAA+BkM,CAA/B,EAEAL,CAAE,CAAGrM,QAAQ,CAACG,aAAT,CAAuB,IAAvB,CAAL,CACAkM,CAAE,CAAC1L,WAAH,CAAe4L,CAAf,EAEAI,CAAW,CAAC,IAAMnQ,CAAC,CAACmB,IAAT,CAAe9J,EAAW,CAACoK,OAAZ,CAAsB,GAAtB,CAA4BzB,CAAC,CAACmB,IAA7C,CACCvH,EAAU,CAAC8H,QADZ,CACsB1B,CAAC,CAACmB,IADxB,CAC8B,UAD9B,CAC0C0O,CAD1C,CAAX,CAGAA,CAAE,CAAC1L,WAAH,CAAe2L,CAAf,EACAF,CAAM,CAACzL,WAAP,CAAmB0L,CAAnB,EAEApO,CAAO,CAAGzB,CAAC,CAACmB,IACf,CAGD0O,CAAE,CAAGrM,QAAQ,CAACG,aAAT,CAAuB,IAAvB,CAAL,CACAkM,CAAE,CAACjD,SAAH,CAAe,UAAf,CAEAuD,CAAW,CAACnQ,CAAC,CAACR,EAAH,CAAOQ,CAAC,CAACtD,IAAT,CAAe9C,EAAU,CAACoG,CAAC,CAACC,MAAH,CAAzB,CAAqCD,CAAC,CAACmB,IAAvC,CAA6CnB,CAAC,CAACuB,IAA/C,CAAqDsO,CAArD,CAAX,CAEAC,CAAE,CAAC3L,WAAH,CAAe0L,CAAf,CACH,CA/BD,EAiCAJ,CAAM,CAACtL,WAAP,CAAmBpC,CAAnB,CACH,CAKD,QAASmO,CAAAA,CAAT,EAAkB,CACd,KAAKE,aAAL,CAAmBC,aAAnB,CAAiC,SAAjC,EAA4CC,SAA5C,CAAsDC,MAAtD,CAA6D,QAA7D,EACA,KAAKD,SAAL,CAAeC,MAAf,CAAsB,YAAtB,CACH,CAYD,QAASJ,CAAAA,CAAT,CAAqBK,CAArB,CAA0B9T,CAA1B,CAAgC8E,CAAhC,CAAwCF,CAAxC,CAA+CmP,CAA/C,CAAyDhB,CAAzD,CAAiE,CAG7D,GAAIiB,CAAAA,CAAG,CAAGlN,QAAQ,CAACG,aAAT,CAAuB,OAAvB,CAAV,CACA+M,CAAG,CAACnP,IAAJ,CAAW,UAAX,CAGA,GAAInL,EAAW,CAACoa,CAAD,CAAf,CAAsB,CAClBE,CAAG,CAAC9B,OAAJ,CAA0C,CAA5B,EAAAxY,EAAW,CAACoa,CAAD,CAAX,CAAiBtP,OAAjB,MACjB,CAFD,IAEO,IAAI9K,EAAW,CAAC,IAAMkL,CAAP,CAAf,CAA8B,CAEjCoP,CAAG,CAAC9B,OAAJ,CAAkD,CAApC,EAAAxY,EAAW,CAAC,IAAMkL,CAAP,CAAX,CAAyBJ,OAAzB,EACV1K,EAAM,EAAIQ,EADA,MAEjB,CAJM,IAIA,CAEH0Z,CAAG,CAAC9B,OAAJ,GACH,CACD8B,CAAG,CAAClR,EAAJ,CAASgR,CAAT,CACAE,CAAG,CAACpP,KAAJ,CAAYA,CAAZ,CACAoP,CAAG,CAACC,KAAJ,CAAYF,CAAZ,CACAC,CAAG,CAAC1M,gBAAJ,CAAqB,QAArB,CAA+B+K,CAA/B,EAGAvV,EAAS,CAACkX,CAAG,CAAClR,EAAL,CAAT,CAAoBkR,CAApB,CAGA,GAAIE,CAAAA,CAAK,CAAGpN,QAAQ,CAACG,aAAT,CAAuB,OAAvB,CAAZ,CACAiN,CAAK,CAAC7M,KAAN,CAAY8M,KAAZ,CAAoBrP,CAApB,CACAoP,CAAK,CAAChE,SAAN,CAAkB,gBAAlB,CACA,GAAIkE,CAAAA,CAAS,CAAe,UAAZ,EAAAL,CAAQ,CAAiB/T,CAAjB,CAAwB+T,CAAQ,CAAG,GAAX,CAAiB/T,CAAjE,CACAkU,CAAK,CAACzM,WAAN,CAAkBX,QAAQ,CAACa,cAAT,CAAwByM,CAAxB,CAAlB,EAEArB,CAAM,CAACtL,WAAP,CAAmBuM,CAAnB,EACAjB,CAAM,CAACtL,WAAP,CAAmByM,CAAnB,CACH,CAKD,QAAS7B,CAAAA,CAAT,EAAwB,CAGpB,GAAIgC,CAAAA,CAAM,CAAG,KAAKvR,EAAlB,CACIwR,CAAW,CAAG,KAAKpC,OADvB,CAEIqC,CAAQ,CAAG,KAAKN,KAFpB,CAGIO,CAAS,CAAG,KAAK5P,KAHrB,CAMA/I,EAAS,CAACiI,KAAV,CAAgBlB,OAAhB,CAAwB,SAASsM,CAAT,CAAa,CAGjC,GAAIA,CAAE,CAACpM,EAAH,EAASuR,CAAb,CAAqB,CACjBnF,CAAE,CAAC1K,OAAH,CAAa8P,CAAb,CACAxX,EAAS,CAACoS,CAAE,CAACpM,EAAJ,CAAT,CAAiBoP,OAAjB,CAA2BoC,CAE9B,CAJD,IAIO,IAAgB,UAAZ,EAAAC,CAAQ,EAAkBrF,CAAE,CAACtK,KAAH,EAAY4P,CAA1C,CAAqD,CAExDtF,CAAE,CAAC1K,OAAH,CAAa8P,CAAb,CACAxX,EAAS,CAACoS,CAAE,CAACpM,EAAJ,CAAT,CAAiBoP,OAAjB,CAA2BoC,CAE9B,CALM,IAKA,IAAIA,CAAW,EAAe,UAAX,EAAApF,CAAE,CAACrK,IAAlB,EAAwCqK,CAAE,CAACtK,KAAH,EAAY4P,CAAxD,CAAmE,CAEtEtF,CAAE,CAAC1K,OAAH,CAAa8P,CAAb,CACAxX,EAAS,CAACoS,CAAE,CAACpM,EAAJ,CAAT,CAAiBoP,OAAjB,CAA2BoC,CAC9B,CACJ,CAjBD,EAmBAG,CAAW,GACXC,CAAS,EACZ,CAMD,QAASD,CAAAA,CAAT,EAAuB,CAEnB,GAAItP,CAAAA,CAAM,CAAG0G,UAAU,CAAC/E,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCK,KAA1C,CAAvB,CAEA,GAAa,CAAT,CAAAjC,CAAJ,CAAgB,CACZ3J,EAAS,CAAC+L,QAAV,CAAmB,CAAnB,EACAT,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,EAA0CS,SAA1C,CAAsD,WAAtD,CACAV,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCK,KAAzC,CAAiD,CACpD,CACJ,CAQD,QAAS9E,CAAAA,CAAT,CAAoB2H,CAApB,CAA0B,CAGtBnP,EAAG,CAACmO,SAAJ,CAAc,OAAd,EAAuBC,MAAvB,GACApO,EAAG,CAACmO,SAAJ,CAAc,MAAd,EAAsBC,MAAtB,GACApO,EAAG,CAACmO,SAAJ,CAAc,UAAd,EAA0BC,MAA1B,GACApO,EAAG,CAACmO,SAAJ,CAAc,QAAd,EAAwBC,MAAxB,GAGApO,EAAG,CAAC6Z,KAAJ,CAAUC,cAAV,GAGA,GAAe,MAAX,EAAA3K,CAAI,CAACnH,EAAT,CAAuB,CACnB,MACH,CAED,GAAI+R,CAAAA,CAAW,CAAG5K,CAAlB,CAGA3O,EAAU,CAAC0N,EAAX,CAAc,WAAd,CAA2B,IAA3B,EACKA,EADL,CACQ,UADR,CACoB,IADpB,EAnBsB,GAsBlB1D,CAAAA,CAAC,CAAGpK,EAAK,CAACiN,MAAN,CAAa,MAAb,CAtBc,CAyBlBwC,CAAC,CAAGzP,EAAK,CAACiN,MAAN,CAAa,MAAb,EACHC,IADG,CACE,OADF,CACW,MADX,EAEHA,IAFG,CAEE,IAFF,CAEQ,QAFR,EAGHA,IAHG,CAGE,GAHF,CAGO6B,CAAI,CAACa,CAAL,CAAS,EAHhB,EAIH1C,IAJG,CAIE,GAJF,CAIO6B,CAAI,CAACW,CAAL,CAAS,EAJhB,EAKHxC,IALG,CAKE,IALF,CAKQ,OALR,EAMHf,KANG,CAMG,gBANH,CAMqB,MANrB,EAOHK,IAPG,CAOE/M,EAAW,CAACma,IAPd,CAzBc,CAmCtB,GAAI7K,CAAI,CAACW,CAAL,CAAS,EAAT,EAAexP,EAAnB,CAA2B,CACvBuP,CAAC,CAACvC,IAAF,CAAO,GAAP,CAAYhN,EAAM,EAAIA,EAAM,CAAG6O,CAAI,CAACW,CAAlB,CAAN,CAA6B,EAAzC,EACKlD,IADL,CACU/M,EAAW,CAACma,IADtB,CAEH,CAGDxP,CAAC,CAAC8C,IAAF,CAAO,IAAP,CAAa,QAAb,EACKA,IADL,CACU,GADV,CACe6B,CAAI,CAACa,CADpB,EAEK1C,IAFL,CAEU,GAFV,CAEe6B,CAAI,CAACW,CAAL,CAAS,EAAT,EAAexP,EAAf,CAAwB6O,CAAI,CAACW,CAA7B,CAAiCxP,EAAM,EAAIA,EAAM,CAAG6O,CAAI,CAACW,CAAlB,CAAN,CAA6B,EAF7E,EAGKxC,IAHL,CAGU,OAHV,CAGmB,EAHnB,EAIKA,IAJL,CAIU,QAJV,CAIoB,EAJpB,EAKKf,KALL,CAKW,QALX,CAKqB,OALrB,EAMKA,KANL,CAMW,MANX,CAMmB,WANnB,EASA/B,CAAC,CAAC0D,EAAF,CAAK,WAAL,CAAkB,UAAW,CACzBlO,EAAG,CAAC6Z,KAAJ,CAAUzP,MAAV,CAAiBmC,KAAjB,CAAyB,aAC5B,CAFD,EAIA/B,CAAC,CAAC0D,EAAF,CAAK,UAAL,CAAiB,UAAW,CACxBlO,EAAG,CAAC6Z,KAAJ,CAAUzP,MAAV,CAAiBmC,KAAjB,CAAyB,kBAC5B,CAFD,EAKA/B,CAAC,CAAC0D,EAAF,CAAK,OAAL,CAAc,UAAW,CAGrBlO,EAAG,CAACmO,SAAJ,CAAc,SAAd,EAAyBC,MAAzB,GACApO,EAAG,CAACmO,SAAJ,CAAc,SAAd,EAAyBC,MAAzB,GAGA5N,EAAU,CAAC0N,EAAX,CAAc,WAAd,CAA2BG,CAA3B,EACKH,EADL,CACQ,UADR,CACoBI,CADpB,EAIAyL,CAAW,CAACrQ,OAAZ,IACA1H,EAAS,CAAC+X,CAAW,CAAC/R,EAAb,CAAT,CAA0BoP,OAA1B,IAGA,GAAwB,UAApB,EAAA2C,CAAW,CAAChQ,IAAhB,CAAoC,CAEhChJ,EAAS,CAACiI,KAAV,CAAgBlB,OAAhB,CAAwB,SAASsM,CAAT,CAAa,CACjC,GAAIA,CAAE,CAACtK,KAAH,EAAYiQ,CAAW,CAACjQ,KAA5B,CAAmC,CAC/BsK,CAAE,CAAC1K,OAAH,IACA1H,EAAS,CAACoS,CAAE,CAACpM,EAAJ,CAAT,CAAiBoP,OAAjB,GACH,CACJ,CALD,CAMH,CACDuC,CAAW,GACXC,CAAS,EACZ,CA1BD,CA2BH,CAOD,QAAStO,CAAAA,CAAT,CAAqB6D,CAArB,CAA2B,CAGvB,GAAI,CAACnP,EAAG,CAAC6Z,KAAJ,CAAUI,MAAf,CAAuB,CACnB1Z,EAAU,CAAC2Z,WAAX,CAAuBrZ,EAAvB,EAAkCsZ,OAAlC,EACH,CAEDhL,CAAI,CAACiL,EAAL,CAAUjL,CAAI,CAACa,CAAf,CACAb,CAAI,CAACkL,EAAL,CAAUlL,CAAI,CAACW,CAClB,CAOD,QAASvE,CAAAA,CAAT,CAAiB4D,CAAjB,CAAuB,CAGnBnP,EAAG,CAACmO,SAAJ,CAAc,MAAd,EAAsBC,MAAtB,GACApO,EAAG,CAACmO,SAAJ,CAAc,OAAd,EAAuBC,MAAvB,GACApO,EAAG,CAACmO,SAAJ,CAAc,UAAd,EAA0BC,MAA1B,GACApO,EAAG,CAACmO,SAAJ,CAAc,QAAd,EAAwBC,MAAxB,GAEAe,CAAI,CAACiL,EAAL,CAAUpa,EAAG,CAAC6Z,KAAJ,CAAU7J,CAApB,CACAb,CAAI,CAACkL,EAAL,CAAUra,EAAG,CAAC6Z,KAAJ,CAAU/J,CACvB,CAOD,QAAStE,CAAAA,CAAT,CAAmB2D,CAAnB,CAAyB,CAErB,GAAI,CAACnP,EAAG,CAAC6Z,KAAJ,CAAUI,MAAf,CAAuB,CAGnB,GAAIvb,EAAJ,CAAiB,CAGb6B,EAAU,CAACmO,IAAX,GACAE,CAAkB,GAClBD,CAAQ,EAEX,CAPD,IAOO,CAEHpO,EAAU,CAAC2Z,WAAX,CAAuBpZ,EAAvB,CACH,CACJ,CAEDqO,CAAI,CAACiL,EAAL,CAAU,IAAV,CACAjL,CAAI,CAACkL,EAAL,CAAU,IAAV,CAEA3W,EAAW,CAAGwD,IAAI,CAACC,GAAL,EACjB,CAOD,QAAS6F,CAAAA,CAAT,EAA6B,CAEzB,GAAIjB,CAAAA,CAAE,CAAGC,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAAT,CAEA7K,EAAa,CAAG4K,QAAQ,CAACG,aAAT,CAAuB,QAAvB,CAAhB,CACA/K,EAAa,CAACsL,SAAd,CAA0B7M,EAAW,CAACya,OAAtC,CACAlZ,EAAa,CAACgU,SAAd,CAA0B,wBAA1B,CACAhU,EAAa,CAACoL,gBAAd,CAA+B,OAA/B,CAAwC+N,EAAxC,EACAxO,CAAE,CAACY,WAAH,CAAevL,EAAf,EAEA,MAAOA,CAAAA,EAAa,CAACyQ,qBAAd,GAAsCvR,MAChD,CAOD,QAAS4M,CAAAA,CAAT,CAAyBsN,CAAzB,CAAmC,CAG/B,GAAIzO,CAAAA,CAAE,CAAGC,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAAT,CAGAjL,EAAW,CAAGgL,QAAQ,CAACG,aAAT,CAAuB,QAAvB,CAAd,CACAnL,EAAW,CAACyZ,QAAZ,IACAzZ,EAAW,CAACgH,EAAZ,CAAiB,gBAAjB,CACA,GAAI2N,CAAAA,CAAU,CAAmB,CAAhB,CAAAzX,EAAM,CAAC2K,MAAP,CAAoBvI,EAAM,CAAGka,CAAT,CAAoB,GAAxC,CAA8Cla,EAAM,CAAGka,CAAT,CAAoB,EAAnF,CACAxZ,EAAW,CAACuL,KAAZ,CAAoB,WAAaoJ,CAAb,CAA0B,KAA9C,CAGA3U,EAAW,CAACwL,gBAAZ,CAA6B,QAA7B,CAAuC,UAAW,CAK9C,OAHIiK,CAAAA,CAAG,CAAGzK,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,CAGV,CAASd,CAAC,CAAG,CAAb,CAEQuP,CAFR,CAAgBvP,CAAC,CAAGsL,CAAG,CAACQ,OAAJ,CAAYpO,MAAhC,CAAwCsC,CAAC,EAAzC,CAA6C,CAErCuP,CAFqC,CAE7B,8BAAgCjE,CAAG,CAACQ,OAAJ,CAAY9L,CAAZ,EAAenB,MAA/C,CAAwD,SAF3B,CAGzCyM,CAAG,CAACQ,OAAJ,CAAY9L,CAAZ,EAAeoB,KAAf,CAAuBkK,CAAG,CAACQ,OAAJ,CAAY9L,CAAZ,EAAe0K,QAAf,CAA0B6E,CAA1B,CALd,kCAMZ,CACD,GAAkB,CAAd,CAAA1c,EAAI,CAAC6K,MAAT,CAAqB,CACjB8R,CAAY,IACf,CACJ,CAbD,EAgBA,GAAwB,CAApB,EAAAnX,EAAJ,CAA2B,CACvBvF,EAAK,CAACua,IAAN,CAAW,SAASC,CAAT,CAAYtG,CAAZ,CAAe,IAElByI,CAAAA,CAAK,CAAGnC,CAAC,CAACoC,SAAF,CAAc,GAAd,CAAoBpC,CAAC,CAACqC,QAFZ,CAGlBC,CAAK,CAAG5I,CAAC,CAAC0I,SAAF,CAAc,GAAd,CAAoB1I,CAAC,CAAC2I,QAHZ,CAKtB,GAAIF,CAAK,CAAGG,CAAZ,CAAmB,CACf,MAAO,EACV,CACD,GAAIH,CAAK,CAAGG,CAAZ,CAAmB,CACf,MAAO,CAAC,CACX,CACD,MAAO,EACV,CAZD,CAaH,CAdD,IAcO,CACH9c,EAAK,CAACua,IAAN,CAAW,SAASC,CAAT,CAAYtG,CAAZ,CAAe,CACtB,MAAOsG,CAAAA,CAAC,CAACzQ,EAAF,CAAOmK,CAAC,CAACnK,EACnB,CAFD,CAGH,CAGD/J,EAAK,CAAC6J,OAAN,CAAc,SAASC,CAAT,CAAY,CACtBiT,CAAW,CAACjT,CAAD,CAAI/G,EAAJ,CACd,CAFD,EAIA+K,CAAE,CAACY,WAAH,CAAe3L,EAAf,CACH,CAQD,QAASga,CAAAA,CAAT,CAAqB3P,CAArB,CAA2B4P,CAA3B,CAAiC,CAG7B,GAAIxQ,CAAAA,CAAC,CAAGuB,QAAQ,CAACG,aAAT,CAAuB,QAAvB,CAAR,CACA1B,CAAC,CAAC6B,KAAF,CAAUjB,CAAI,CAACrD,EAAf,CACAyC,CAAC,CAACmC,IAAF,CAA6B,CAApB,EAAApJ,EAAgB,CAAQ6H,CAAI,CAACwP,SAAL,CAAiB,GAAjB,CAAuBxP,CAAI,CAACyP,QAApC,CAA+CzP,CAAI,CAACrD,EAA7E,CACAyC,CAAC,CAACT,MAAF,CAAW9H,EAAO,CAACC,EAAW,EAAZ,CAAlB,CAGA,GAAIA,EAAW,EAAID,EAAO,CAAC2G,MAA3B,CAAmC,CAC/B1G,EAAW,CAAG,CACjB,CAEDpB,EAAS,CAACkI,KAAV,CAAgBoC,CAAI,CAACrD,EAArB,EAAyBF,OAAzB,CAAiC,SAASwQ,CAAT,CAAa,CAC1CA,CAAE,CAACtO,MAAH,CAAYS,CAAC,CAACT,MACjB,CAFD,EAIAiR,CAAI,CAACtO,WAAL,CAAiBlC,CAAjB,CACH,CAKD,QAASwC,CAAAA,CAAT,EAAyB,CAErB,GAAqB,CAAjB,EAAA/O,EAAM,CAAC2K,MAAX,CAAwB,CACpB,MACH,CAED,GAAIkD,CAAAA,CAAE,CAAGC,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAAT,CAGA7N,EAAS,CAAG4N,QAAQ,CAACG,aAAT,CAAuB,QAAvB,CAAZ,CACA/N,EAAS,CAACqc,QAAV,IACArc,EAAS,CAAC4J,EAAV,CAAe,cAAf,CACA5J,EAAS,CAACmO,KAAV,CAAkB,gBAAlB,CAEAnO,EAAS,CAACoO,gBAAV,CAA2B,QAA3B,CAAqC,UAAW,CAG5CxM,EAAG,CAACmO,SAAJ,CAAc,OAAd,EAAuBC,MAAvB,GACApO,EAAG,CAACmO,SAAJ,CAAc,OAAd,EAAuBC,MAAvB,GACAH,CAAS,CAAClN,EAAS,CAACuE,KAAX,CAAT,CACA/E,EAAU,CAAC2N,EAAX,CAAc,MAAd,CAAsBK,CAAtB,EACAhO,EAAU,CAAC4Z,OAAX,GACAtO,UAAU,CAACtL,EAAU,CAACmO,IAAZ,CAAkB,GAAlB,CAAV,CACA1N,EAAW,CAACiW,OAAZ,CAAoBpO,MAApB,CAA6B,CAA7B,CAGA,IAAK,GAAIsC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG/M,EAAS,CAAC6Y,OAAV,CAAkBpO,MAAtC,CAA8CsC,CAAC,EAA/C,CAAmD,CAC/C,GAAI/M,EAAS,CAAC6Y,OAAV,CAAkB9L,CAAlB,EAAqB0K,QAAzB,CAAmC,CAC/B,IAAK,GAAIqF,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGjd,EAAK,CAAC4K,MAA1B,CAAkCqS,CAAC,EAAnC,CAAuC,CACnC,GAAI/c,EAAY,CAACF,EAAK,CAACid,CAAD,CAAL,CAASjT,MAAV,CAAZ,EAAiC7J,EAAS,CAAC6Y,OAAV,CAAkB9L,CAAlB,EAAqBmB,KAA1D,CAAiE,CAC7D0O,CAAW,CAAC/c,EAAK,CAACid,CAAD,CAAN,CAAWla,EAAX,CACd,CACJ,CACJ,CACJ,CACJ,CArBD,EAwBA,GAAIyJ,CAAAA,CAAJ,CACA,IAAK,GAAI0Q,CAAAA,CAAT,GAAgBjd,CAAAA,EAAhB,CAAwB,CACpBuM,CAAC,CAAGuB,QAAQ,CAACG,aAAT,CAAuB,QAAvB,CAAJ,CACA1B,CAAC,CAAC6B,KAAF,CAAU6O,CAAV,CACA1Q,CAAC,CAACmC,IAAF,CAAS1O,EAAM,CAACid,CAAD,CAAf,CACA/c,EAAS,CAACuO,WAAV,CAAsBlC,CAAtB,CACH,CAEDsB,CAAE,CAACY,WAAH,CAAevO,EAAf,CACH,CAKD,QAAS+O,CAAAA,CAAT,EAA0B,CAGtBlM,EAAU,CAAG+K,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAb,CACA/K,EAAY,CAAG,CAAC,CAAD,CAAIH,EAAS,CAACmI,UAAd,CAAf,CAEA,GAAIkS,CAAAA,CAAJ,CACA,GAA2B,GAAvB,CAAAra,EAAS,CAACmI,UAAd,CAAgC,CAC5BkS,CAAO,CAAG,EACb,CAFD,IAEO,IAA2B,GAAvB,CAAAra,EAAS,CAACmI,UAAd,CAAiC,CACpCkS,CAAO,CAAG,EACb,CAFM,IAEA,IAA2B,GAAvB,CAAAra,EAAS,CAACmI,UAAd,CAAiC,CACpCkS,CAAO,CAAG,GACb,CAFM,IAEA,IAA2B,GAAvB,CAAAra,EAAS,CAACmI,UAAd,CAAkC,CACrCkS,CAAO,CAAG,GACb,CAFM,IAEA,CACHA,CAAO,CAAG,GACb,CAEDlb,EAAM,CAACmb,MAAP,CAAcpa,EAAd,CAA0B,CACtBqa,KAAK,CAAE,CAAC,CAAD,CAAIva,EAAS,CAACmI,UAAd,CADe,CAEtBqS,KAAK,CAAE,CACH1T,GAAG,CAAE,CAAC,CAAD,CADF,CAEHuE,GAAG,CAAE,CAACrL,EAAS,CAACmI,UAAX,CAFF,CAFe,CAMtBmD,IAAI,CAAE,CANgB,CAOtBmP,OAAO,GAPe,CAQtBC,IAAI,CAAE,CACFC,IAAI,CAAE,OADJ,CAEFC,OAAO,GAFL,CAGFC,OAAO,CAAE,GAHP,CAIFzI,MAAM,CAAE,gBAASnI,CAAT,CAAY,CAChB,GAAS,CAAL,EAAAA,CAAC,EAASA,CAAC,EAAIjK,EAAS,CAACmI,UAA7B,CAAyC,CACrC,MAAO,EACV,CAFD,IAEO,IAAmB,CAAf,EAAA8B,CAAC,CAAGoQ,CAAR,CAAsB,CACzB,MAAO,EACV,CAFM,IAEA,CACH,MAAO,EACV,CACJ,CAZC,CARgB,CAA1B,EAwBAvP,UAAU,CAAC,UAAW,CAElB5K,EAAU,CAAC6F,UAAX,CAAsBoH,EAAtB,CAAyB,QAAzB,CAAmC,SAAS2N,CAAT,CAAiBC,CAAjB,CAAyB,CACxD5a,EAAY,CAAC4a,CAAD,CAAZ,CAAuBzL,QAAQ,CAACwL,CAAM,CAACC,CAAD,CAAP,CAA/B,CACA9a,EAAW,CAAC+a,aAAZ,CAA0B,GAAIC,CAAAA,KAAJ,CAAU,QAAV,CAA1B,CACH,CAHD,CAIH,CANS,CAMP,GANO,CAOb,CAKD,QAASpC,CAAAA,CAAT,EAAqB,CAEjBnZ,EAAU,CAAC2N,MAAX,GACA5N,EAAU,CAAC4N,MAAX,GACApO,EAAG,CAACmO,SAAJ,CAAc,OAAd,EAAuBC,MAAvB,GAEA,GAAI6N,CAAAA,CAAQ,CAAGC,CAAO,CAAC1U,CAAD,CAAtB,CACA2U,CAAO,CAACF,CAAD,CAAP,CACAG,CAAgB,CAACH,CAAD,CAAhB,CAEA1b,EAAU,CAAC2Z,WAAX,CAAuBtZ,EAAvB,EAAkCuZ,OAAlC,GAGA,GAAIzb,EAAJ,CAAiB,CAEbmN,UAAU,CAAC,UAAW,CAClBtL,EAAU,CAACmO,IAAX,GACAE,CAAkB,GAClBD,CAAQ,EACX,CAJS,CAIP,GAJO,CAKb,CACJ,CAOD,QAASgM,CAAAA,CAAT,CAAsB0B,CAAtB,CAA+B,CAE3B5b,EAAU,CAAC2N,MAAX,GACA5N,EAAU,CAAC4N,MAAX,GACApO,EAAG,CAACmO,SAAJ,CAAc,OAAd,EAAuBC,MAAvB,GAEA1P,EAAW,GAAX,CAEA,GAAIud,CAAAA,CAAQ,CAAGC,CAAO,CAAC,IAAD,CAAtB,CACAC,CAAO,CAACF,CAAD,CAAP,CAEA,GAAII,CAAJ,CAAa,CACTD,CAAgB,CAACH,CAAD,CACnB,CAEDvd,EAAW,GAAX,CAEA6B,EAAU,CAAC2N,EAAX,CAAc,MAAd,CAAsBK,CAAtB,EACAhO,EAAU,CAAC4Z,OAAX,GACAtO,UAAU,CAACtL,EAAU,CAACmO,IAAZ,CAAkB,GAAlB,CACb,CAQD,QAASwN,CAAAA,CAAT,CAAiBrN,CAAjB,CAAyB,CAErB,GAAI7F,CAAAA,CAAK,CAAG,EAAZ,CACIiT,CAAQ,CAAG,EADf,CAGAlb,EAAS,CAACiI,KAAV,CAAgBlB,OAAhB,CAAwB,SAASsM,CAAT,CAAa,CAIjC,GAAc,IAAV,GAAAA,CAAE,CAACgG,EAAP,CAAoB,CAChBhG,CAAE,CAACgG,EAAH,CAAQhG,CAAE,CAACpE,CAAX,CACAoE,CAAE,CAACiG,EAAH,CAAQjG,CAAE,CAACtE,CACd,CAGD,GAAIsE,CAAE,CAAC1K,OAAP,CAAgB,CACZV,CAAK,CAACA,CAAK,CAACH,MAAP,CAAL,CAAsBuL,CACzB,CAFD,IAEO,CACH6H,CAAQ,CAAC7H,CAAE,CAACpM,EAAJ,CAAR,CAAkB,CACrB,CACJ,CAfD,EAiBAzH,EAAU,CAACyI,KAAX,CAAiBA,CAAjB,EAEAgF,CAAS,CAAChF,CAAD,CAAQ6F,CAAR,CAAgBlL,EAAhB,CAAiCC,EAAjC,CAA8CC,EAA9C,CAAT,CAEA,MAAOoY,CAAAA,CACV,CAOD,QAASE,CAAAA,CAAT,CAAiBF,CAAjB,CAA2B,CAEvB,GAAI3W,CAAAA,CAAK,CAAG,EAAZ,CACI8N,CADJ,CAEIE,CAFJ,CAGIgJ,CAHJ,CAIIC,CAJJ,CAKIpR,CALJ,CAOA,IAAKA,CAAL,GAAUpK,CAAAA,EAAS,CAACuE,KAApB,CAA2B,CACvBgX,CAAE,CAAGvb,EAAS,CAACuE,KAAV,CAAgB6F,CAAhB,CAAL,CAGA,GAAwB,QAApB,QAAOmR,CAAAA,CAAE,CAACnS,MAAd,CAAkC,CAC9BiJ,CAAG,CAAGkJ,CAAE,CAACnS,MAAT,CACAmJ,CAAG,CAAGgJ,CAAE,CAAClS,MACZ,CAHD,IAGO,CACHgJ,CAAG,CAAGkJ,CAAE,CAACnS,MAAH,CAAUnC,EAAhB,CACAsL,CAAG,CAAGgJ,CAAE,CAAClS,MAAH,CAAUpC,EACnB,CAGD,GAAIiU,CAAQ,CAAC7I,CAAD,CAAR,EAAiB6I,CAAQ,CAAC3I,CAAD,CAA7B,CAAoC,CAChC,QACH,CAFD,IAEO,CACHhO,CAAK,CAACA,CAAK,CAACuD,MAAP,CAAL,CAAsByT,CACzB,CACJ,CAED,GAAIrF,CAAAA,CAAO,CAAGvY,EAAW,CAAG,EAAH,CAAQsN,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,EAA0CgL,OAA3E,CAGA,IAAK9L,CAAC,CAAG,CAAT,CAAYA,CAAC,CAAG8L,CAAO,CAACpO,MAAxB,CAAgCsC,CAAC,EAAjC,CAAqC,CAEjC,GAAI8L,CAAO,CAAC9L,CAAD,CAAP,CAAW0K,QAAf,CAAyB,CAGrB,GAAI7N,CAAAA,CAAJ,CACIsB,CAAE,CAAG,EADT,CAEI4R,CAFJ,CAKA,IAAKA,CAAC,CAAGha,EAAY,CAAC,CAAD,CAArB,CAA0Bga,CAAC,EAAIha,EAAY,CAAC,CAAD,CAA3C,CAAgDga,CAAC,EAAjD,CAAqD,CAGjD,GAAIna,EAAS,CAACkI,KAAV,CAAgBgO,CAAO,CAAC9L,CAAD,CAAP,CAAWmB,KAA3B,EAAkCzD,MAAlC,CAA2CqS,CAA/C,CAAkD,CAE9CqB,CAAE,CAAGxb,EAAS,CAACkI,KAAV,CAAgBgO,CAAO,CAAC9L,CAAD,CAAP,CAAWmB,KAA3B,EAAkC4O,CAAlC,CAAL,CAGA,GAAwB,QAApB,QAAOqB,CAAAA,CAAE,CAACpS,MAAd,CAAkC,CAC9BnC,CAAE,CAAGuU,CAAE,CAACpS,MAAH,CAAY,GAAZ,CAAkBoS,CAAE,CAACnS,MAA1B,CACAgJ,CAAG,CAAGmJ,CAAE,CAACpS,MAAT,CACAmJ,CAAG,CAAGiJ,CAAE,CAACnS,MACZ,CAJD,IAIO,CACHpC,CAAE,CAAGuU,CAAE,CAACpS,MAAH,CAAUnC,EAAV,CAAe,GAAf,CAAqBuU,CAAE,CAACnS,MAAH,CAAUpC,EAApC,CACAoL,CAAG,CAAGmJ,CAAE,CAACpS,MAAH,CAAUnC,EAAhB,CACAsL,CAAG,CAAGiJ,CAAE,CAACnS,MAAH,CAAUpC,EACnB,CACD,GAAIsB,CAAE,CAACtB,CAAD,CAAN,CAAY,CACRsB,CAAE,CAACtB,CAAD,CAAF,EACH,CAFD,IAEO,CACHsB,CAAE,CAACtB,CAAD,CAAF,CAAS,CACZ,CAGD,GAAIiU,CAAQ,CAAC7I,CAAD,CAAR,EAAiB6I,CAAQ,CAAC3I,CAAD,CAA7B,CAAoC,CAChC,QACH,CAFD,IAEO,CACHhO,CAAK,CAACA,CAAK,CAACuD,MAAP,CAAL,CAAsB0T,CACzB,CACJ,CA1BD,IA0BO,CAEH,KACH,CACJ,CAGD,IAAKrB,CAAC,CAAGha,EAAY,CAAC,CAAD,CAArB,CAA0Bga,CAAC,EAAIha,EAAY,CAAC,CAAD,CAA3C,CAAgDga,CAAC,EAAjD,CAAqD,CAGjD,GAAIna,EAAS,CAACkI,KAAV,CAAgBgO,CAAO,CAAC9L,CAAD,CAAP,CAAWmB,KAA3B,EAAkCzD,MAAlC,CAA2CqS,CAA/C,CAAkD,CAE9CqB,CAAE,CAAGxb,EAAS,CAACkI,KAAV,CAAgBgO,CAAO,CAAC9L,CAAD,CAAP,CAAWmB,KAA3B,EAAkC4O,CAAlC,CAAL,CAGA,GAAwB,QAApB,QAAOqB,CAAAA,CAAE,CAACpS,MAAd,CAAkC,CAC9BnC,CAAE,CAAGuU,CAAE,CAACpS,MAAH,CAAY,GAAZ,CAAkBoS,CAAE,CAACnS,MAC7B,CAFD,IAEO,CACHpC,CAAE,CAAGuU,CAAE,CAACpS,MAAH,CAAUnC,EAAV,CAAe,GAAf,CAAqBuU,CAAE,CAACnS,MAAH,CAAUpC,EACvC,CACDuU,CAAE,CAAClS,MAAH,CAAYf,CAAE,CAACtB,CAAD,CACjB,CAXD,IAWO,CACH,KACH,CACJ,CACJ,CACJ,CAEDzH,EAAU,CAACuL,KAAX,CAAiB,MAAjB,EAAyBxG,KAAzB,CAA+BA,CAA/B,EACA2I,CAAS,CAAC3I,CAAD,CACZ,CASD,QAASkX,CAAAA,CAAT,CAAwBxU,CAAxB,CAA4B,CAExB,GAAImH,CAAAA,CAAI,CAAGpO,EAAS,CAACiI,KAAV,CAAgByT,IAAhB,CAAqB,SAASzR,CAAT,CAAY,CACxC,MAAOA,CAAAA,CAAC,CAAChD,EAAF,EAAQA,CAClB,CAFU,CAAX,CAIA,MAAOmH,CAAAA,CACV,CAOD,QAASiN,CAAAA,CAAT,CAA0BH,CAA1B,CAAoC,CAEhC,GAAIvd,EAAJ,CAAiB,CACb,MACH,CACDsB,EAAG,CAACmO,SAAJ,CAAc,OAAd,EAAuBC,MAAvB,GAMA,OAJI6I,CAAAA,CAAO,CAAGjL,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,EAA0CgL,OAIxD,CAHIyF,CAAU,CAAG,EAGjB,CAASvR,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG8L,CAAO,CAACpO,MAA5B,CAAoCsC,CAAC,EAArC,CAAyC,CACrC,GAAI8L,CAAO,CAAC9L,CAAD,CAAP,CAAW0K,QAAf,CAAyB,CAGrB,GAAI8G,CAAAA,CAAJ,CAASC,CAAT,CAAcC,CAAd,CAAmBC,CAAnB,CAAwBC,CAAxB,CAA4B3J,CAA5B,CAAiCE,CAAjC,CACAoJ,CAAU,CAACzF,CAAO,CAAC9L,CAAD,CAAP,CAAWmB,KAAZ,CAAV,CAA+B,EAA/B,CAGA,IAAK,GAAI4O,CAAAA,CAAC,CAAGha,EAAY,CAAC,CAAD,CAAzB,CAA8Bga,CAAC,EAAIha,EAAY,CAAC,CAAD,CAA/C,CAAoDga,CAAC,EAArD,CAAyD,CAGrD,GAAIna,EAAS,CAACkI,KAAV,CAAgBgO,CAAO,CAAC9L,CAAD,CAAP,CAAWmB,KAA3B,EAAkCzD,MAAlC,CAA2CqS,CAA/C,CAAkD,CAE9C,GAAIqB,CAAAA,CAAE,CAAGxb,EAAS,CAACkI,KAAV,CAAgBgO,CAAO,CAAC9L,CAAD,CAAP,CAAWmB,KAA3B,EAAkC4O,CAAlC,CAAT,CAGA,GAAwB,QAApB,QAAOqB,CAAAA,CAAE,CAACpS,MAAd,CAAkC,CAC9BiJ,CAAG,CAAGmJ,CAAE,CAACpS,MAAT,CACAmJ,CAAG,CAAGiJ,CAAE,CAACnS,MAAT,CAEA,GAAI4S,CAAAA,CAAE,CAAGR,CAAc,CAACpJ,CAAD,CAAvB,CAEAuJ,CAAG,CAAGK,CAAE,CAAChN,CAAT,CACA4M,CAAG,CAAGI,CAAE,CAAClN,CAAT,CAEAkN,CAAE,CAAGR,CAAc,CAAClJ,CAAD,CAAnB,CAEAuJ,CAAG,CAAGG,CAAE,CAAChN,CAAT,CACA8M,CAAG,CAAGE,CAAE,CAAClN,CACZ,CAbD,IAaO,CACHsD,CAAG,CAAGmJ,CAAE,CAACpS,MAAH,CAAUnC,EAAhB,CACAsL,CAAG,CAAGiJ,CAAE,CAACnS,MAAH,CAAUpC,EAAhB,CAEA2U,CAAG,CAAGJ,CAAE,CAACpS,MAAH,CAAU6F,CAAhB,CACA4M,CAAG,CAAGL,CAAE,CAACpS,MAAH,CAAU2F,CAAhB,CAEA+M,CAAG,CAAGN,CAAE,CAACnS,MAAH,CAAU4F,CAAhB,CACA8M,CAAG,CAAGP,CAAE,CAACnS,MAAH,CAAU0F,CACnB,CAGD,GAAImM,CAAQ,CAAC7I,CAAD,CAAR,EAAiB6I,CAAQ,CAAC3I,CAAD,CAA7B,CAAoC,CAChC,QACH,CAFD,IAEO,CACHyJ,CAAE,CAAGR,CAAE,CAACvS,MAAR,CACA0S,CAAU,CAACzF,CAAO,CAAC9L,CAAD,CAAP,CAAWmB,KAAZ,CAAV,CAA6B8G,CAA7B,EAAoC,CAACpD,CAAC,CAAE2M,CAAJ,CAAS7M,CAAC,CAAE8M,CAAZ,CAAiB5S,MAAM,CAAE+S,CAAzB,CAApC,CACAL,CAAU,CAACzF,CAAO,CAAC9L,CAAD,CAAP,CAAWmB,KAAZ,CAAV,CAA6BgH,CAA7B,EAAoC,CAACtD,CAAC,CAAE6M,CAAJ,CAAS/M,CAAC,CAAEgN,CAAZ,CAAiB9S,MAAM,CAAE+S,CAAzB,CACvC,CACJ,CArCD,IAqCO,CAEH,KACH,CACJ,CACJ,CACJ,CAGD,IAAK,GAAIhU,CAAAA,CAAT,GAAgB2T,CAAAA,CAAhB,CAA4B,CACxBO,EAAe,CAACP,CAAU,CAAC3T,CAAD,CAAX,CAAkBA,CAAlB,OAClB,CACD,GAAIzG,EAAJ,CAAc,CACV,GAAIoC,EAAJ,CAA2B,CACvBwY,CAAqB,CAACjG,CAAD,CACxB,CAFD,IAEO,CACHkG,CAAsB,CAAClG,CAAD,CACzB,CACJ,CACJ,CASD,QAASkG,CAAAA,CAAT,CAAgClG,CAAhC,CAAyC,CAErCnU,EAAa,CAAG,EAAhB,CAGA,GAAqC,CAAjC,EAAA4H,MAAM,CAACC,IAAP,CAAYlG,EAAZ,EAAuBoE,MAA3B,CAAwC,CACpC,MACH,CAGD,IAAK,GAAIsC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG8L,CAAO,CAACpO,MAA5B,CAAoCsC,CAAC,EAArC,CAAyC,CAErC,GAAI8L,CAAO,CAAC9L,CAAD,CAAP,CAAW0K,QAAf,CAAyB,CACrB,GAAIuH,CAAAA,CAAO,CAAGnG,CAAO,CAAC9L,CAAD,CAAP,CAAWmB,KAAzB,CAGA,GAAI7H,EAAS,CAAC2Y,CAAD,CAAT,CAAmBvU,MAAnB,EAA6B3H,EAAY,CAAC,CAAD,CAA7C,CAAkD,CAC9C,QACH,CANoB,GASjBoa,CAAAA,CAAK,CAAGpa,EAAY,CAAC,CAAD,CATH,CAUjBmc,CAAG,CAAG5Y,EAAS,CAAC2Y,CAAD,CAAT,CAAmBvU,MAAnB,CAA4B3H,EAAY,CAAC,CAAD,CAAZ,CAAkB,CAA9C,CAAkDA,EAAY,CAAC,CAAD,CAA9D,CAAoEuD,EAAS,CAAC2Y,CAAD,CAAT,CAAmBvU,MAV5E,CAajByU,CAAI,CAAGjN,QAAQ,CAAEiL,CAAK,CAAG,CAAT,CAAe+B,CAAG,CAAG,CAAtB,CAbE,CAgBjBrE,CAAG,CAAGvU,EAAS,CAAC2Y,CAAD,CAAT,CAAmBE,CAAnB,CAhBW,CAiBjB1T,CAAM,CAAGmH,UAAU,CAACnS,EAAW,CAACoa,CAAD,CAAX,CAAiBpP,MAAlB,CAjBF,CAkBjBC,CAAM,CAAGkH,UAAU,CAACnS,EAAW,CAACoa,CAAD,CAAX,CAAiBnP,MAAlB,CAlBF,CAqBrB/G,EAAa,CAACsa,CAAD,CAAb,CAAyB,CACrBpN,CAAC,CAAEpG,CAAM,CAAG9K,EAAT,CAAuBkF,EAAU,CAAC6O,SADhB,CAErB/C,CAAC,CAAEjG,CAAM,CAAG/K,EAAT,CAAuBkF,EAAU,CAAC8O,SAFhB,CAGrB9I,MAAM,CAAEiN,CAAO,CAAC9L,CAAD,CAAP,CAAWnB,MAHE,CAK5B,CACJ,CACJ,CASD,QAASkT,CAAAA,CAAT,CAA+BjG,CAA/B,CAAwC,CAEpCnU,EAAa,CAAG,EAAhB,CAGA,GAAqC,CAAjC,EAAA4H,MAAM,CAACC,IAAP,CAAYlG,EAAZ,EAAuBoE,MAA3B,CAAwC,CACpC,MACH,CAGD,IAAK,GAAIsC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG8L,CAAO,CAACpO,MAA5B,CAAoCsC,CAAC,EAArC,CAAyC,CACrC,GAAI8L,CAAO,CAAC9L,CAAD,CAAP,CAAW0K,QAAf,CAAyB,CACrB,GAAIuH,CAAAA,CAAO,CAAGnG,CAAO,CAAC9L,CAAD,CAAP,CAAWmB,KAAzB,CAGA,GAAI7H,EAAS,CAAC2Y,CAAD,CAAT,CAAmBvU,MAAnB,EAA6B3H,EAAY,CAAC,CAAD,CAA7C,CAAkD,CAC9C,QACH,CAWD,OARIoa,CAAAA,CAAK,CAAGpa,EAAY,CAAC,CAAD,CAQxB,CAPImc,CAAG,CAAG5Y,EAAS,CAAC2Y,CAAD,CAAT,CAAmBvU,MAAnB,CAA4B3H,EAAY,CAAC,CAAD,CAAZ,CAAkB,CAA9C,CAAkDA,EAAY,CAAC,CAAD,CAA9D,CAAoEuD,EAAS,CAAC2Y,CAAD,CAAT,CAAmBvU,MAOjG,CALI0U,CAAE,CAAG,CAKT,CAJIC,CAAE,CAAG,CAIT,CAHIxS,CAAC,CAAG,CAGR,CAASkQ,CAAC,CAAGI,CAAb,CAAoBtC,CAApB,CAAyBkC,CAAC,CAAGmC,CAA7B,CAAkCnC,CAAC,EAAnC,CAAuC,CACnClC,CAAG,CAAGvU,EAAS,CAAC2Y,CAAD,CAAT,CAAmBlC,CAAnB,CAAN,CACAqC,CAAE,EAAIxM,UAAU,CAACnS,EAAW,CAACoa,CAAD,CAAX,CAAiBpP,MAAlB,CAAhB,CACA4T,CAAE,EAAIzM,UAAU,CAACnS,EAAW,CAACoa,CAAD,CAAX,CAAiBnP,MAAlB,CAAhB,CACAmB,CAAC,EACJ,CAGDlI,EAAa,CAACsa,CAAD,CAAb,CAAyB,CACrBpN,CAAC,CAAGuN,CAAE,CAAGvS,CAAN,CAAWlM,EAAX,CAAyBkF,EAAU,CAAC6O,SADlB,CAErB/C,CAAC,CAAG0N,CAAE,CAAGxS,CAAN,CAAWlM,EAAX,CAAyBkF,EAAU,CAAC8O,SAFlB,CAGrB9I,MAAM,CAAEiN,CAAO,CAAC9L,CAAD,CAAP,CAAWnB,MAHE,CAK5B,CACJ,CACJ,CAaD,QAASiT,CAAAA,EAAT,CAAyBnT,CAAzB,CAAgCf,CAAhC,CAAqC0U,CAArC,CAAiDC,CAAjD,CAA2D,CAGvD,GAAiC,CAA7B,EAAAhT,MAAM,CAACC,IAAP,CAAYb,CAAZ,EAAmBjB,MAAvB,CAAoC,CAChC,MACH,CACD,GAAI8U,CAAAA,CAAM,CAAG,EAAb,CACI3T,CADJ,CAEI4T,CAFJ,CAIIC,CAJJ,CAMA,GAAIvb,EAAJ,CAAc,CACVub,CAAS,CAAG,MACf,CAFD,IAEO,IAAIJ,CAAJ,CAAgB,CACnBI,CAAS,CAAG,aACf,CAFM,IAEA,CACHA,CAAS,CAAG,cACf,CAGD,IAAK,GAAIC,CAAAA,CAAT,GAAchU,CAAAA,CAAd,CAAqB,CACjB6T,CAAM,CAACA,CAAM,CAAC9U,MAAR,CAAN,CAAwB,CAACiB,CAAK,CAACgU,CAAD,CAAL,CAAS9N,CAAV,CAAalG,CAAK,CAACgU,CAAD,CAAL,CAAShO,CAAtB,CAAxB,CACA9F,CAAM,CAAGF,CAAK,CAACgU,CAAD,CAAL,CAAS9T,MACrB,CAGD,GAAqB,CAAjB,EAAA2T,CAAM,CAAC9U,MAAX,CAAwB,CAEpB+U,CAAE,CAAG,SAASG,CAAT,CAAqB,IAGlBC,CAAAA,CAAE,CAAG,CAACD,CAAU,CAAC,CAAD,CAAV,CAAc,CAAd,CAAD,CAAmBA,CAAU,CAAC,CAAD,CAAV,CAAc,CAAd,IAAnB,CAHa,CAIlBE,CAAE,CAAG,CAACF,CAAU,CAAC,CAAD,CAAV,CAAc,CAAd,CAAD,CAAmBA,CAAU,CAAC,CAAD,CAAV,CAAc,CAAd,IAAnB,CAJa,CAMtB,MAAO,KAAOC,CAAP,CACH,KADG,CACK,OAA2B,OAA3B,CAAoCC,CAApC,EAAwC9M,IAAxC,CAA6C,GAA7C,CADL,CAEH,KAFG,CAEK,OAA2B,OAA3B,CAAoC6M,CAApC,EAAwC7M,IAAxC,CAA6C,GAA7C,CACf,CACJ,CAZD,IAYO,IAAqB,CAAjB,EAAAwM,CAAM,CAAC9U,MAAX,CAAwB,IAIvBqV,CAAAA,CAAO,CAAG,SAASC,CAAT,CAAaH,CAAb,CAAiB,CAC3B,MAAO,CAACA,CAAE,CAAC,CAAD,CAAF,CAAQG,CAAE,CAAC,CAAD,CAAX,CAAgBH,CAAE,CAAC,CAAD,CAAF,CAAQG,CAAE,CAAC,CAAD,CAA1B,CACV,CAN0B,CASvBC,CAAQ,CAAG,SAASC,CAAT,CAAY5Y,CAAZ,CAAmB,CAC9B,MAAO,CAACA,CAAK,CAAG4Y,CAAC,CAAC,CAAD,CAAV,CAAe5Y,CAAK,CAAG4Y,CAAC,CAAC,CAAD,CAAxB,CACV,CAX0B,CAcvBC,CAAM,CAAG,SAASC,CAAT,CAAcC,CAAd,CAAmB,CAC5B,MAAO,CAACD,CAAG,CAAC,CAAD,CAAH,CAASC,CAAG,CAAC,CAAD,CAAb,CAAkBD,CAAG,CAAC,CAAD,CAAH,CAASC,CAAG,CAAC,CAAD,CAA9B,CACV,CAhB0B,CAmBvBC,CAAO,CAAG,SAASJ,CAAT,CAAY,CACtB,GAAIK,CAAAA,CAAI,CAAG9W,IAAI,CAACyM,IAAL,CAAUgK,CAAC,CAAC,CAAD,CAAD,CAAOA,CAAC,CAAC,CAAD,CAAR,CAAcA,CAAC,CAAC,CAAD,CAAD,CAAOA,CAAC,CAAC,CAAD,CAAhC,CAAX,CACA,MAAOD,CAAAA,CAAQ,CAACC,CAAD,CAAI,EAAIK,CAAR,CAClB,CAtB0B,CAyBvBC,CAAU,CAAG,SAASN,CAAT,CAAYxV,CAAZ,CAAoB,CACjC,MAAOuV,CAAAA,CAAQ,CAACK,CAAO,CAACJ,CAAD,CAAR,CAAaxV,CAAb,CAClB,CA3B0B,CA8BvB+V,CAAU,CAAG,SAASC,CAAT,CAAcb,CAAd,CAAkB,CAC/B,GAAIA,CAAE,SAAN,CAAsB,CAClBa,CAAG,CAAGX,CAAO,CAACW,CAAD,CAAMb,CAAN,CAChB,CACD,GAAIc,CAAAA,CAAS,CAAG,CAAC,CAACD,CAAG,CAAC,CAAD,CAAL,CAAUA,CAAG,CAAC,CAAD,CAAb,CAAhB,CACA,MAAOJ,CAAAA,CAAO,CAACK,CAAD,CACjB,CApC0B,CAsC3BlB,CAAE,CAAG,SAASG,CAAT,CAAqB,IAGlBM,CAAAA,CAAC,CAAGH,CAAO,CAACH,CAAU,CAAC,CAAD,CAAX,CAAgBA,CAAU,CAAC,CAAD,CAA1B,CAHO,CAIlBgB,CAAY,CAAGJ,CAAU,CAACN,CAAD,IAJP,CAMlBW,CAAU,CAAGV,CAAM,CAACP,CAAU,CAAC,CAAD,CAAX,CAAgBK,CAAQ,CAACW,CAAD,CAAe,CAAC,CAAhB,CAAxB,CAND,CAOlBE,CAAU,CAAGX,CAAM,CAACP,CAAU,CAAC,CAAD,CAAX,CAAgBgB,CAAhB,CAPD,CAUlBG,CAAY,CAAGP,CAAU,CAACC,CAAU,CAACP,CAAD,CAAX,IAVP,CAWlBc,CAAe,CAAGf,CAAQ,CAACc,CAAD,CAAe,CAAC,CAAhB,CAXR,CAalBE,CAAQ,CAAGd,CAAM,CAACU,CAAD,CAAaG,CAAb,CAbC,CAclBE,CAAQ,CAAGf,CAAM,CAACW,CAAD,CAAaE,CAAb,CAdC,CAelBG,CAAQ,CAAGhB,CAAM,CAACU,CAAD,CAAaE,CAAb,CAfC,CAiBtB,MAAO,KAAOF,CAAP,CACH,KADG,CACK,CAACI,CAAD,CAAWC,CAAX,CAAqBJ,CAArB,EAAiC9N,IAAjC,CAAsC,GAAtC,CADL,CAEH,KAFG,CAEK,CAACmO,CAAD,CAAWN,CAAX,EAAuB7N,IAAvB,CAA4B,GAA5B,CAFL,CAGH,IACP,CACJ,CA5DM,IA4DA,CAEH,GAAIoO,CAAAA,CAAI,CAAGvf,EAAG,CAACwf,WAAJ,GAAkBC,OAAlB,CAA0B,EAA1B,CAAX,CAEA,GAAI,CAAC/c,EAAL,CAAwB,CACpB6c,CAAI,CAACtM,QAAL,CAActQ,EAAd,CACH,CAED,GAAI+c,CAAAA,CAAG,CAAmB,CAAhB,CAAA/B,CAAM,CAAC9U,MAAP,CAAoB0W,CAAI,CAAC5B,CAAD,CAAxB,CAAmC,CAACA,CAAD,CAA7C,CACAC,CAAE,CAAG5d,EAAG,CAAC6Q,IAAJ,GAAW8O,KAAX,CAAiB/c,EAAjB,CAAL,CAGAxC,EAAK,CAAC+N,SAAN,CAAgB,SAAWpF,CAA3B,EACKM,IADL,CACUqW,CADV,EAEKzQ,KAFL,GAGK5B,MAHL,CAGY,MAHZ,EAIKC,IAJL,CAIU,IAJV,CAIgB,QAAUvE,CAJ1B,EAKKuE,IALL,CAKU,OALV,CAKmBuQ,CALnB,EAMKtR,KANL,CAMW,QANX,CAMqBvC,CANrB,EAOKuC,KAPL,CAOW,gBAPX,CAO6BmR,CAAQ,CAAG,CAAH,CAAO,CAP5C,EAQKnR,KARL,CAQW,MARX,CAQmBvC,CARnB,EASKuC,KATL,CASW,cATX,CAS2BmR,CAAQ,CAAG,CAAH,CAAO7a,EAT1C,EAUKyK,IAVL,CAUU,GAVV,CAUesQ,CAVf,EAYA,MACH,CAGDxd,EAAK,CAACiN,MAAN,CAAa,MAAb,EACKC,IADL,CACU,IADV,CACgB,QAAUvE,CAD1B,EAEKuE,IAFL,CAEU,OAFV,CAEmBuQ,CAFnB,EAGKtR,KAHL,CAGW,QAHX,CAGqBvC,CAHrB,EAIKuC,KAJL,CAIW,gBAJX,CAI6BmR,CAAQ,CAAG,CAAH,CAAO,CAJ5C,EAKKnR,KALL,CAKW,MALX,CAKmBvC,CALnB,EAMKuC,KANL,CAMW,cANX,CAM2BmR,CAAQ,CAAG,CAAH,CAAO7a,EAN1C,EAOKyK,IAPL,CAOU,GAPV,CAOesQ,CAAE,CAACD,CAAD,CAPjB,CAQH,CAMD,QAASiC,CAAAA,EAAT,EAAmB,CAGfC,aAAa,CAACpd,EAAD,CAAb,CACAA,EAAmB,OAAnB,CACAM,EAAe,CAAG,IAAlB,CACA+c,EAAa,GAGb9f,EAAG,CAACmO,SAAJ,CAAc,sBAAd,EAAsCC,MAAtC,GACApO,EAAG,CAACmO,SAAJ,CAAc,eAAd,EAA+BC,MAA/B,GACApO,EAAG,CAACmO,SAAJ,CAAc,WAAd,EAA2BC,MAA3B,GACApO,EAAG,CAACmO,SAAJ,CAAc,kBAAd,EAAkCC,MAAlC,GACAzM,EAAa,CAAC4K,KAAd,CAAoBwT,OAApB,CAA8B,MAA9B,CACA/T,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCM,KAAzC,CAA+CwT,OAA/C,CAAyD,MAAzD,CACA/T,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCM,KAArC,CAA2CwT,OAA3C,CAAqD,MAArD,CAGA,GAAIhU,CAAAA,CAAE,CAAGC,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAAT,CACAF,CAAE,CAACQ,KAAH,CAASlM,KAAT,CAAiBe,EAAa,CAACmL,KAAd,CAAoBlM,KAArC,CAGA2L,QAAQ,CAACC,cAAT,CAAwB,2BAAxB,EAAqDS,SAArD,CAAiE,OAAjE,CAGApK,EAAQ,GAAR,CACAc,EAAe,GAAf,CAGAnC,EAAU,CAACsL,KAAX,CAAiBwT,OAAjB,CAA2B,OAA3B,CACA/e,EAAW,CAACuL,KAAZ,CAAkBwT,OAAlB,CAA4B,OAA5B,CACA,GAAI3hB,EAAJ,CAAe,CACXA,EAAS,CAACmO,KAAV,CAAgBwT,OAAhB,CAA0B,OAC7B,CAEDvf,EAAU,CAAC+L,KAAX,CAAiB,SAAjB,CAA4B,OAA5B,EACA/L,EAAU,CAAC+L,KAAX,CAAiB,SAAjB,CAA4B,CAA5B,EACA9L,EAAU,CAAC8L,KAAX,CAAiB,SAAjB,CAA4B,OAA5B,EACA9L,EAAU,CAAC8L,KAAX,CAAiB,SAAjB,CAA4B,CAA5B,EACAoO,CAAY,IAAZ,CACAna,EAAU,CAAC0N,EAAX,CAAc,WAAd,CAA2BG,CAA3B,EACKH,EADL,CACQ,UADR,CACoBI,CADpB,EAIAlN,EAAa,CAACsL,SAAd,CAA0B7M,EAAW,CAACya,OAAtC,CACAlZ,EAAa,CAACiW,mBAAd,CAAkC,OAAlC,CAA2CuI,EAA3C,EACAxe,EAAa,CAACoL,gBAAd,CAA+B,OAA/B,CAAwC+N,EAAxC,CACH,CAKD,QAASA,CAAAA,EAAT,EAAqB,CAGjBjY,EAAQ,GAAR,CAEArB,EAAU,CAACsL,KAAX,CAAiBwT,OAAjB,CAA2B,MAA3B,CACA/e,EAAW,CAACuL,KAAZ,CAAkBwT,OAAlB,CAA4B,MAA5B,CACA,GAAI3hB,EAAJ,CAAe,CACXA,EAAS,CAACmO,KAAV,CAAgBwT,OAAhB,CAA0B,MAC7B,CAED/f,EAAG,CAACmO,SAAJ,CAAc,OAAd,EAAuBC,MAAvB,GACApO,EAAG,CAACmO,SAAJ,CAAc,OAAd,EAAuBC,MAAvB,GACApO,EAAG,CAACmO,SAAJ,CAAc,MAAd,EAAsBC,MAAtB,GAGA,GAAIrC,CAAAA,CAAE,CAAGC,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAAT,CACAF,CAAE,CAACQ,KAAH,CAASlM,KAAT,CAAiBwB,EAAuB,CAAG,IAA3C,CAGAT,EAAa,CAACsL,SAAd,CAA0B7M,EAAW,CAACO,KAAtC,CACAgB,EAAa,CAACiW,mBAAd,CAAkC,OAAlC,CAA2CkD,EAA3C,EACAnZ,EAAa,CAACoL,gBAAd,CAA+B,OAA/B,CAAwCoT,EAAxC,EAGArf,EAAU,CAACmO,IAAX,GACAlO,EAAU,CAAC0N,EAAX,CAAc,WAAd,CAA2B,IAA3B,EACKA,EADL,CACQ,UADR,CACoB,IADpB,EAEKA,EAFL,CAEQ,aAFR,CAEuB,IAFvB,EAGKgB,IAHL,CAGUlP,EAAG,CAAC+O,IAAJ,GACCb,EADD,CACI,OADJ,CACa,IADb,EAECA,EAFD,CAEI,MAFJ,CAEY,IAFZ,EAGCA,EAHD,CAGI,KAHJ,CAGW,IAHX,CAHV,EASAlK,EAAU,CAACgc,SAAX,CAAuB9Y,IAAI,CAACC,GAAL,EAAvB,CACAzH,EAAQ,CAAG,EAAX,CAGA8C,EAAY,CAAG,CAAf,CACAD,EAAU,GAAV,CACAX,EAAkB,CAAG,CAArB,CACAa,EAAmB,OAAnB,CAGAuJ,QAAQ,CAACC,cAAT,CAAwB,2BAAxB,EAAqDS,SAArD,CAAiE,OAAjE,CAGA,GAAIuT,CAAAA,CAAE,CAAG,0BAA0BpgB,EAAW,CAACqgB,WAAtC,CAAoD,MAA7D,CAIArU,UAAU,CAAC,UAAW,CAGlB,GAAI,CAAClK,EAAL,CAAoB,CAEhB,GAAIwe,CAAAA,CAAE,CAAGC,EAAqB,EAA9B,CACAC,EAAiB,CAACJ,CAAD,CAAKE,CAAL,CAAjB,CACAG,EAAY,EAEf,CAND,IAMO,CAEHtU,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCS,SAAtC,CAAkD,OAAlD,CACAV,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCS,SAApC,CAAgD,OAAhD,CACAV,QAAQ,CAACC,cAAT,CAAwB,cAAxB,EAAwCS,SAAxC,CAAoDuT,CAApD,CAEAjU,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCS,SAAtC,CAAkD,QAAlD,CACAV,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCsU,QAAtC,IACAvU,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCsU,QAArC,IAEAvU,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCM,KAAzC,CAA+CwT,OAA/C,CAAyD,OAAzD,CACA/T,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCM,KAArC,CAA2CwT,OAA3C,CAAqD,OAArD,CACApe,EAAa,CAAC6e,eAAd,CAA8B,UAA9B,EACA7e,EAAa,CAACmF,UAAd,CAAyB2Z,GAAzB,CAA6B,CAA7B,EACA9e,EAAa,CAAC4K,KAAd,CAAoBwT,OAApB,CAA8B,OACjC,CAEDW,EAAa,EAChB,CA3BS,CA2BPzc,EAAQ,CAAG,CA3BJ,CA4Bb,CAOD,QAASmE,CAAAA,EAAT,CAAyBuY,CAAzB,CAAkC,CAE9BjiB,EAAW,GAAX,CACAE,EAAW,CAAG,CAAC,EAAK,CAAN,CAAS,EAAK,CAAd,CAAiB,EAAK,CAAtB,CAAd,CACA0B,EAAM,CAAG9C,MAAM,CAACmK,WAAP,CAAqB,GAA9B,CAEAiZ,EAAkB,GAClBN,EAAY,GACZO,EAAc,CAACF,CAAD,CAEjB,CAOD,QAASE,CAAAA,EAAT,CAAwBF,CAAxB,CAAiC,CAE7B,GAAI5U,CAAAA,CAAE,CAAGC,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAAT,CAEA3K,EAAU,CAAG0K,QAAQ,CAACG,aAAT,CAAuB,QAAvB,CAAb,CACA7K,EAAU,CAACmU,IAAX,CAAkB,CAAlB,CACAnU,EAAU,CAAC0G,EAAX,CAAgB,eAAhB,CACA1G,EAAU,CAACiL,KAAX,CAAmB,YAAcjM,EAAM,CAAG,EAAvB,EAA6B,KAAhD,CACAgB,EAAU,CAACkL,gBAAX,CAA4B,QAA5B,CAAsCsU,EAAW,CAACrO,IAAZ,CAAiB,IAAjB,CAAuBkO,CAAvB,CAAtC,EAGA,IAAK,GAAII,CAAAA,CAAT,GAAsBhhB,CAAAA,EAAtB,CAA0C,CACtC,GAAIoL,CAAAA,CAAC,CAAG,CAAR,CACA,IAAK,GAAI6V,CAAAA,CAAT,GAAoBjhB,CAAAA,EAAkB,CAACghB,CAAD,CAAtC,CAAmD,CAC/C,GAAI7F,CAAAA,CAAC,CAAG,CAAR,CACA/P,CAAC,GACD,IAAK,GAAI8V,CAAAA,CAAT,GAAsBlhB,CAAAA,EAAkB,CAACghB,CAAD,CAAlB,CAA8BC,CAA9B,CAAtB,CAA8D,CAE1D,GAAI,CAAC/V,KAAK,CAACgW,CAAD,CAAN,EACAlhB,EAAkB,CAACghB,CAAD,CAAlB,CAA8BC,CAA9B,EAAuCC,CAAvC,EAAkD,CAAlD,CADJ,CAC0D,CAEtD,GAAIxW,CAAAA,CAAC,CAAGuB,QAAQ,CAACG,aAAT,CAAuB,QAAvB,CAAR,CACA1B,CAAC,CAAC6B,KAAF,CAAUyU,CAAS,CAAG,GAAZ,CAAkBC,CAAlB,CAA4B,GAA5B,CAAkCC,CAA5C,CACAxW,CAAC,CAACmC,IAAF,CAASmU,CAAS,CAACjW,KAAV,CAAgB,GAAhB,EAAqB,CAArB,EAA0B,GAA1B,CAAgCK,CAAhC,CAAoC,GAApC,CAA2C,GAAE+P,CAAtD,CACA5Z,EAAU,CAACqL,WAAX,CAAuBlC,CAAvB,CACH,CACJ,CACJ,CACJ,CACDsB,CAAE,CAACY,WAAH,CAAerL,EAAf,CACH,CAOD,QAASwf,CAAAA,EAAT,CAAqBH,CAArB,CAA8B,IAEtBnW,CAAAA,CAAC,CAAG0W,EAAgB,CAACP,CAAD,CAFE,CAGtB7b,CAAO,CAAG0F,CAAC,CAAC1F,OAHU,CAM1B,GAAI1E,EAAJ,CAAW,CACPA,EAAK,CAACgO,MAAN,GACA+S,EAAe,GACfrB,EAAa,GACb9T,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCS,SAApC,CAAgD,QAAhD,CACAV,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,EAA0CS,SAA1C,CAAsD,QACzD,CACD,GAAI1L,EAAJ,CAAiB,CACbgL,QAAQ,CAAC+F,IAAT,CAAc8E,WAAd,CAA0B7V,EAA1B,CACH,CAED+B,EAAe,CAAG,IAAlB,CACAmF,CAAmB,GACnBC,CAAO,GACPjH,EAAY,CAAG,CAAC,CAAD,CAAIH,EAAS,CAACmI,UAAd,CAAf,CACA8C,QAAQ,CAACC,cAAT,CAAwB,aAAxB,EAAuCM,KAAvC,CAA6C6U,OAA7C,CAAuD,CAAvD,CACApV,QAAQ,CAACC,cAAT,CAAwB,cAAxB,EAAwCM,KAAxC,CAA8C6U,OAA9C,CAAwD,CAAxD,CACApV,QAAQ,CAACC,cAAT,CAAwB,aAAxB,EAAuCM,KAAvC,CAA6C6U,OAA7C,CAAuD,CAAvD,CACApV,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,EAA0CM,KAA1C,CAAgD6U,OAAhD,CAA0D,CAA1D,CACApV,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCM,KAAzC,CAA+C6U,OAA/C,CAAyD,CAAzD,CAGA,IAAK,GAAIjW,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGpK,EAAS,CAACiI,KAAV,CAAgBH,MAApC,CAA4CsC,CAAC,EAA7C,CAAiD,CAC7C,GAAIpK,EAAS,CAACiI,KAAV,CAAgBmC,CAAhB,EAAmBvB,MAAnB,SAAJ,CAA6C,CACzC7I,EAAS,CAACiI,KAAV,CAAgBmC,CAAhB,EAAmBzB,OAAnB,GACH,CACJ,CAED2X,EAAe,CAACvc,CAAD,CAAf,CAGA4G,CAAS,CAAC,CAAD,CAAT,CACAiP,CAAY,IAAZ,CACAna,EAAU,CAAC0N,EAAX,CAAc,WAAd,CAA2B,IAA3B,EAAiCA,EAAjC,CAAoC,UAApC,CAAgD,IAAhD,EACAhL,EAAe,GAAf,CAGA8I,QAAQ,CAACC,cAAT,CAAwB,2BAAxB,EAAqDS,SAArD,CAAiE,OAAjE,CACA4U,EAA6B,GAG7BzV,UAAU,CAAC,UAAW,CAClB0V,EAAY,CAACze,EAAD,IAAZ,CACA4d,EAAa,GACbngB,EAAU,CAAC2N,EAAX,CAAc,MAAd,CAAsBK,CAAtB,EAGA,IAAK,GAAIxF,CAAAA,CAAT,GAAgBjG,CAAAA,EAAhB,CAA+B,CAC3B9C,EAAG,CAACoN,MAAJ,CAAW,aAAerE,CAA1B,EACKmG,IADL,CACUlP,EAAG,CAAC+O,IAAJ,GACCb,EADD,CACI,OADJ,CACasT,EAAuB,CAAC/O,IAAxB,CAA6B,IAA7B,CAAmC1J,CAAnC,CADb,EAECmF,EAFD,CAEI,MAFJ,CAEYuT,EAAkB,CAAChP,IAAnB,CAAwB,IAAxB,CAA8B1J,CAA9B,CAFZ,EAGCmF,EAHD,CAGI,KAHJ,CAGWwT,EAAqB,CAACjP,IAAtB,CAA2B,IAA3B,CAAiC1J,CAAjC,CAAsC4X,CAAtC,CAA+CnW,CAA/C,CAHX,CADV,CAKH,CACJ,CAbS,CAaP,GAbO,CAcb,CAQD,QAASgX,CAAAA,EAAT,CAAiCG,CAAjC,CAA6C,CAEzC,GAAI,CAACC,EAAqB,CAACD,CAAD,CAA1B,CAAwC,CACpC,MACH,CAEDrd,EAAgB,CAAG4C,IAAI,CAACC,GAAL,EAAnB,CAEA/G,EAAK,CAACiN,MAAN,CAAa,SAAb,EACKC,IADL,CACU,OADV,CACmB,kBADnB,EAEKA,IAFL,CAEU,IAFV,CAEgB,WAAaqU,CAF7B,EAGKrU,IAHL,CAGU,QAHV,CAGoBuU,EAAgB,CAAC7hB,EAAG,CAAC6Z,KAAJ,CAAU7J,CAAX,CAAchQ,EAAG,CAAC6Z,KAAJ,CAAU/J,CAAxB,CAHpC,EAIKvD,KAJL,CAIW,QAJX,CAIqB,OAJrB,EAKKA,KALL,CAKW,cALX,CAK2B,KAL3B,EAMKA,KANL,CAMW,MANX,CAMmBzJ,EAAa,CAAC6e,CAAD,CAAb,CAA0B3X,MAN7C,EAOKuC,KAPL,CAOW,SAPX,CAOsB,EAPtB,CAQH,CAQD,QAASkV,CAAAA,EAAT,CAA4BE,CAA5B,CAAwC,CAEpC3hB,EAAG,CAACoN,MAAJ,CAAW,YAAcuU,CAAzB,EACKrU,IADL,CACU,QADV,CACoBuU,EAAgB,CAAC7hB,EAAG,CAAC6Z,KAAJ,CAAU7J,CAAX,CAAchQ,EAAG,CAAC6Z,KAAJ,CAAU/J,CAAxB,CADpC,CAEH,CAUD,QAAS4R,CAAAA,EAAT,CAA+BC,CAA/B,CAA2ChB,CAA3C,CAAoDmB,CAApD,CAAyD,CAErD9hB,EAAG,CAACmO,SAAJ,CAAc,mBAAd,EAAmCC,MAAnC,GAEA,GAAI,CAACwT,EAAqB,CAACD,CAAD,CAA1B,CAAwC,CACpC,MACH,CAGD,GAAoC,GAAhC,CAAAza,IAAI,CAACC,GAAL,GAAa7C,EAAjB,CAAyC,CACrCyd,EAAa,CAACpiB,EAAW,CAACgiB,CAAD,CAAZ,CAA0BA,CAA1B,IAAb,CACA,MACH,CAGD,GAAI,CAACtd,EAAL,CAA2B,CACvB2d,EAAc,EACjB,CAED,GAAIC,CAAAA,CAAW,CAAGC,EAAmB,EAArC,CAKA,GAAuD,CAAnD,EAAAxX,MAAM,CAACC,IAAP,CAAYxG,EAAc,CAAC8d,CAAD,CAA1B,EAAyCpZ,MAA7C,CAA0D,CACtD,IAAK,GAAIsC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG5J,EAAU,CAAC0gB,CAAD,CAAV,CAAwBpZ,MAA5C,CAAoDsC,CAAC,EAArD,CAAyD,CACrD,IAAK,GAAIgX,CAAAA,CAAT,GAAmB5gB,CAAAA,EAAU,CAAC0gB,CAAD,CAAV,CAAwB9W,CAAxB,EAA2BrG,OAA9C,CAAuD,CAEnD,GAAIkD,CAAAA,CAAE,CAAGpI,EAAW,CAAC2B,EAAU,CAAC0gB,CAAD,CAAV,CAAwB9W,CAAxB,EAA2BrG,OAA3B,CAAmCqd,CAAnC,EAA2Cna,EAA5C,CAApB,CACA7D,EAAc,CAAC8d,CAAD,CAAd,CAA4Bja,CAA5B,EAAkCmD,CACrC,CACJ,CACJ,CAGD,GAAIiX,CAAAA,CAAI,CAAGC,EAAa,CAACriB,EAAG,CAAC6Z,KAAL,CAAxB,CACA,IAAK,GAAIyI,CAAAA,CAAT,GAAiBne,CAAAA,EAAjB,CAAiC,CAC7B,GAAIme,CAAI,EAAIL,CAAZ,CAAyB,CACrB9d,EAAc,CAACme,CAAD,CAAd,CAAqBX,CAArB,EAAmCS,CACtC,CACJ,CAEDG,EAAkB,CAACN,CAAD,CAActB,CAAd,CAAuBmB,CAAvB,CAAlB,CACAzd,EAAoB,GAApB,CAGAme,EAA0B,CAACP,CAAD,CAA1B,CAGAQ,EAA0B,CAACR,CAAD,CAC7B,CAOD,QAASQ,CAAAA,EAAT,CAAoCR,CAApC,CAAiD,CAG7C,OADIS,CAAAA,CAAG,CAAG,CAACC,aAAa,CAAE,EAAhB,CAAoB7d,OAAO,CAAE,EAA7B,CACV,CAASqG,CAAC,CAAG,CAAb,CAGQyX,CAHR,CAAgBzX,CAAC,CAAG/G,EAAe,CAACyE,MAApC,CAA4CsC,CAAC,EAA7C,CAAiD,CAGzCyX,CAHyC,CAG9Bxe,EAAe,CAAC+G,CAAD,CAAf,CAAqB/G,EAAe,CAAC+G,CAAD,CAApC,CAA0CnI,EAAS,CAACmI,CAAD,CAHrB,CAI7CuX,CAAG,CAACC,aAAJ,CAAkBxX,CAAlB,EAAuB0X,EAAY,CAACD,CAAD,CAAnC,CACAF,CAAG,CAACC,aAAJ,CAAkBxX,CAAlB,EAAqB2X,GAArB,CAA2B3X,CAA3B,CAGA,IAAK,GAAIiS,CAAAA,CAAT,GAAoBjZ,CAAAA,EAAc,CAAC8d,CAAD,CAAlC,CAAiD,CAC7C,GAAI9d,EAAc,CAAC8d,CAAD,CAAd,CAA4B7E,CAA5B,GAAwCjS,CAA5C,CAA+C,CAE3CuX,CAAG,CAAC5d,OAAJ,CAAY4d,CAAG,CAAC5d,OAAJ,CAAY+D,MAAxB,EAAkC,CAC9Bb,EAAE,CAAGrI,EAAW,CAACyd,CAAD,CADc,CAE9B0F,GAAG,CAAE3X,CAFyB,CAIrC,CACJ,CACJ,CAEDuX,CAAG,CAACK,SAAJ,CAAgBd,CAAhB,CACAS,CAAG,CAAC1C,SAAJ,CAAgBhc,EAAU,CAACgc,SAA3B,CACA0C,CAAG,CAACM,QAAJ,CAAevjB,EAAf,CAEAsU,CAAU,CAACjW,EAAD,CAAe4kB,CAAf,CACb,CAOD,QAASF,CAAAA,EAAT,CAAoCF,CAApC,CAA0C,CAEtC,GAAY,CAAR,EAAAA,CAAI,EAAS,CAACne,EAAc,CAACme,CAAD,CAA5B,EACgD,CAA5C,EAAA5X,MAAM,CAACC,IAAP,CAAYxG,EAAc,CAACme,CAAD,CAA1B,EAAkCzZ,MAD1C,CACuD,CACnD,MACH,CALqC,GAOlCoa,CAAAA,CAAQ,CAAGC,EAAkB,CAACZ,CAAD,CAPK,CAUlCa,CAAG,CAAGtjB,EAAW,CAACujB,aAAZ,CAA4B,MAVA,CAclCjY,CAdkC,CAetC,IAAKA,CAAC,CAAG,CAAT,CAAYA,CAAC,CAAG/G,EAAe,CAACyE,MAAhC,CAAwCsC,CAAC,EAAzC,CAA6C,CAEzC,GAAI,CAAC/G,EAAe,CAAC+G,CAAD,CAApB,CAAyB,CACrB,QACH,CAJwC,GAMrC6I,CAAAA,CAAE,CAAG5P,EAAe,CAAC+G,CAAD,CAAf,CAAmB6E,CAAnB,CAAuB3P,EAAK,CAAG,CANC,CAOrCyQ,CAAE,CAAG1M,EAAe,CAAC+G,CAAD,CAAf,CAAmB2E,CAAnB,CAAuBxP,EAAM,CAAG,CAPA,CAQrCkN,CAAC,CAAG5F,IAAI,CAACyM,IAAL,CAAUL,CAAE,CAAGA,CAAL,CAAUlD,CAAE,CAAGA,CAAzB,CARiC,CASrCpI,CAAC,CAAG1F,EAAS,CAACmI,CAAD,CAAT,CAAanB,MAToB,CAYzCmZ,CAAG,EAAItjB,EAAW,CAACwjB,aAAZ,CAA4B,uBAA5B,CAAqD3a,CAArD,CAAyD,KAAzD,CACHA,CADG,CACC,WADD,CACed,IAAI,CAAC0b,KAAL,CAAW9V,CAAX,CADf,CAC+B,MAD/B,CACwC3N,EAAW,CAACya,OADpD,CAEH,GAFG,CAEG5R,CAFH,CAEO,GAFP,CAEa7I,EAAW,CAACiF,OAFzB,MAAP,CAKA,IAAK,GAAIsY,CAAAA,CAAT,GAAoBjZ,CAAAA,EAAc,CAACme,CAAD,CAAlC,CAA0C,CACtC,GAAIne,EAAc,CAACme,CAAD,CAAd,CAAqBlF,CAArB,GAAiCjS,CAArC,CAAwC,CACpCgY,CAAG,EAAI/F,CAAO,CAAG,IACpB,CACJ,CAED,GAAwC,CAAC,CAArC,EAAA+F,CAAG,CAACI,OAAJ,CAAY,GAAZ,CAAiBJ,CAAG,CAACta,MAAJ,CAAa,CAA9B,CAAJ,CAA4C,CACxCsa,CAAG,CAAGA,CAAG,CAACK,KAAJ,CAAU,CAAV,CAAa,CAAC,CAAd,CACT,CACDL,CAAG,EAAI,OAAP,CAGA,GAAI3e,EAAJ,CAAkB,CACd2e,CAAG,EAAItjB,EAAW,CAAC4jB,SAAZ,CAAwB,IAAxB,CAA+BR,CAAQ,CAAC9X,CAAD,CAAR,CAAYsY,SAAZ,CAAsBC,OAAtB,CAA8B,CAA9B,CAA/B,CAAkE,MAAzE,CACAP,CAAG,EAAItjB,EAAW,CAAC8jB,MAAZ,CAAqB,IAArB,CAA4BV,CAAQ,CAAC9X,CAAD,CAAR,CAAYwY,MAAZ,CAAmBD,OAAnB,CAA2B,CAA3B,CAA5B,CAA4D,MAAnE,CACAP,CAAG,EAAItjB,EAAW,CAAC+jB,EAAZ,CAAiB,IAAjB,CAAwBX,CAAQ,CAAC9X,CAAD,CAAR,CAAYyY,EAAZ,CAAeF,OAAf,CAAuB,CAAvB,CAAxB,CAAoD,MAA3D,CACAP,CAAG,EAAItjB,EAAW,CAACgkB,KAAZ,CAAoB,IAApB,CAA2BZ,CAAQ,CAAC9X,CAAD,CAAR,CAAY0Y,KAAZ,CAAkBH,OAAlB,CAA0B,CAA1B,CAA3B,CAA0D,MAAjE,CACAP,CAAG,EAAItjB,EAAW,CAACikB,EAAZ,CAAiB,IAAjB,CAAwBb,CAAQ,CAAC9X,CAAD,CAAR,CAAY2Y,EAAZ,CAAeJ,OAAf,CAAuB,CAAvB,CAAxB,CAAoD,MAC9D,CACJ,CAnDqC,GAsDlCK,CAAAA,CAAG,CAAGjiB,EAAQ,CAAC4K,SAAT,CAAmB5B,KAAnB,CAAyB,UAAzB,CAtD4B,CAuDlCkZ,CAAI,CAAGD,CAAG,CAAC,CAAD,CAAH,CAAOjZ,KAAP,CAAa,MAAb,CAvD2B,CAwDtChJ,EAAQ,CAAC4K,SAAT,CAAqB,EAArB,CAGA,IAAKvB,CAAC,CAAG,CAAT,CAAYA,CAAC,CAAG6Y,CAAI,CAACnb,MAArB,CAA6BsC,CAAC,EAA9B,CAAkC,CAC9B,GAAI6Y,CAAI,CAAC7Y,CAAD,CAAJ,CAAQ8Y,UAAR,CAAmBpkB,EAAW,CAACujB,aAA/B,CAAJ,CAAmD,CAC/C,KACH,CACDthB,EAAQ,CAAC4K,SAAT,EAAsBsX,CAAI,CAAC7Y,CAAD,CAAJ,CAAU,MACnC,CAKD,GAAI3G,EAAJ,CAAkB,CACd2G,CAAC,CAAG8X,CAAQ,CAACpa,MAAT,CAAkB,CAAtB,CACAsa,CAAG,EAAItjB,EAAW,CAACqkB,aAAZ,CAA4B,MAAnC,CACAf,CAAG,EAAItjB,EAAW,CAAC4jB,SAAZ,CAAwB,IAAxB,CAA+BR,CAAQ,CAAC9X,CAAD,CAAR,CAAYsY,SAAZ,CAAsBC,OAAtB,CAA8B,CAA9B,CAA/B,CAAkE,MAAzE,CACAP,CAAG,EAAItjB,EAAW,CAAC8jB,MAAZ,CAAqB,IAArB,CAA4BV,CAAQ,CAAC9X,CAAD,CAAR,CAAYwY,MAAZ,CAAmBD,OAAnB,CAA2B,CAA3B,CAA5B,CAA4D,MAAnE,CACAP,CAAG,EAAItjB,EAAW,CAAC+jB,EAAZ,CAAiB,IAAjB,CAAwBX,CAAQ,CAAC9X,CAAD,CAAR,CAAYyY,EAAZ,CAAeF,OAAf,CAAuB,CAAvB,CAAxB,CAAoD,MAA3D,CACAP,CAAG,EAAItjB,EAAW,CAACgkB,KAAZ,CAAoB,IAApB,CAA2BZ,CAAQ,CAAC9X,CAAD,CAAR,CAAY0Y,KAAZ,CAAkBH,OAAlB,CAA0B,CAA1B,CAA3B,CAA0D,MAAjE,CACAP,CAAG,EAAItjB,EAAW,CAACikB,EAAZ,CAAiB,IAAjB,CAAwBb,CAAQ,CAAC9X,CAAD,CAAR,CAAY2Y,EAAZ,CAAeJ,OAAf,CAAuB,CAAvB,CAAxB,CAAoD,MAC9D,CAED5hB,EAAQ,CAAC4K,SAAT,EAAsByW,CAAG,CAAG,MAA5B,CAGA,IAAKhY,CAAC,CAAG,CAAT,CAAYA,CAAC,CAAG4Y,CAAG,CAAClb,MAApB,CAA4BsC,CAAC,EAA7B,CAAiC,CAC7BrJ,EAAQ,CAAC4K,SAAT,EAAsBqX,CAAG,CAAC5Y,CAAD,CAAH,CAAS,UAClC,CACJ,CAUD,QAAS+X,CAAAA,EAAT,CAA4BZ,CAA5B,CAAkC,CAE9B,GAAI6B,CAAAA,CAAa,CAAG,CAApB,CACIC,CAAc,CAAG,CADrB,CAEIC,CAAc,CAAG,CAFrB,CAGIC,CAAO,CAAG,EAHd,CAIIC,CAJJ,CAKI/Z,CALJ,CAMIW,CANJ,CASA,IAAKA,CAAC,CAAG,CAAT,CAAYA,CAAC,CAAGnI,EAAS,CAAC6F,MAA1B,CAAkCsC,CAAC,EAAnC,CAAuC,CACnC,IAAK,GAAIiS,CAAAA,CAAT,GAAoBra,CAAAA,EAApB,CAAqC,CAEjC,GAAIA,EAAe,CAACqa,CAAD,CAAf,CAAyBoH,EAAzB,EAA+BrZ,CAA/B,EACAhH,EAAc,CAACme,CAAD,CAAd,CAAqBlF,CAArB,GAAiCra,EAAe,CAACqa,CAAD,CAAf,CAAyBoH,EAD9D,CACkE,CAE9DL,CAAa,EAChB,CAJD,IAIO,IAAIphB,EAAe,CAACqa,CAAD,CAAf,CAAyBoH,EAAzB,EAA+BrZ,CAA/B,EACAhH,EAAc,CAACme,CAAD,CAAd,CAAqBlF,CAArB,GAAiCra,EAAe,CAACqa,CAAD,CAAf,CAAyBoH,EAD9D,CACkE,CAErEJ,CAAc,EACjB,CAJM,IAIA,IAAIjgB,EAAc,CAACme,CAAD,CAAd,CAAqBlF,CAArB,GAAiCjS,CAAjC,EACAhH,EAAc,CAACme,CAAD,CAAd,CAAqBlF,CAArB,GAAiCra,EAAe,CAACqa,CAAD,CAAf,CAAyBoH,EAD9D,CACkE,CAErEH,CAAc,EACjB,CACJ,CAEDE,CAAC,CAAGJ,CAAa,EAAIA,CAAa,CAAGC,CAApB,CAAjB,CACA5Z,CAAC,CAAG2Z,CAAa,EAAIA,CAAa,CAAGE,CAApB,CAAjB,CAEAC,CAAO,CAACnZ,CAAD,CAAP,CAAa,CACTsZ,EAAE,CAAEN,CADK,CAETO,EAAE,CAAEN,CAFK,CAGTO,EAAE,CAAEN,CAHK,CAITZ,SAAS,CAAEc,CAJF,CAKTZ,MAAM,CAAEnZ,CALC,CAMToZ,EAAE,CAAW,CAAT,EAAAW,CAAC,CAAG/Z,CAAJ,CAAa,CAAb,CAAkB,EAAM+Z,CAAN,CAAU/Z,CAAX,EAAiB+Z,CAAC,CAAG/Z,CAArB,CANZ,CAOTqZ,KAAK,CAAW,CAAT,EAAAU,CAAC,CAAG/Z,CAAJ,CAAa,CAAb,CAAkB,KAAO+Z,CAAP,CAAW/Z,CAAZ,EAAmB,IAAO+Z,CAAR,CAAa/Z,CAA/B,CAPf,CAQTsZ,EAAE,CAAW,CAAT,EAAAS,CAAC,CAAG/Z,CAAJ,CAAa,CAAb,CAAkB,EAAM+Z,CAAN,CAAU/Z,CAAX,EAAkB,EAAM+Z,CAAP,CAAY/Z,CAA7B,CARZ,CAAb,CAWA2Z,CAAa,CAAG,CAAhB,CACAC,CAAc,CAAG,CAAjB,CACAC,CAAc,CAAG,CACpB,CAGD,IAAKlZ,CAAC,CAAG,CAAT,CAAYA,CAAC,CAAGmZ,CAAO,CAACzb,MAAxB,CAAgCsC,CAAC,EAAjC,CAAqC,CACjCgZ,CAAa,EAAIG,CAAO,CAACnZ,CAAD,CAAP,CAAWsZ,EAA5B,CACAL,CAAc,EAAIE,CAAO,CAACnZ,CAAD,CAAP,CAAWuZ,EAA7B,CACAL,CAAc,EAAIC,CAAO,CAACnZ,CAAD,CAAP,CAAWwZ,EAChC,CAEDJ,CAAC,CAAGJ,CAAa,EAAIA,CAAa,CAAGC,CAApB,CAAjB,CACA5Z,CAAC,CAAG2Z,CAAa,EAAIA,CAAa,CAAGE,CAApB,CAAjB,CAEAC,CAAO,CAACA,CAAO,CAACzb,MAAT,CAAP,CAA0B,CACtB4b,EAAE,CAAEN,CADkB,CAEtBO,EAAE,CAAEN,CAFkB,CAGtBO,EAAE,CAAEN,CAHkB,CAItBZ,SAAS,CAAEc,CAJW,CAKtBZ,MAAM,CAAEnZ,CALc,CAMtBoZ,EAAE,CAAW,CAAT,EAAAW,CAAC,CAAG/Z,CAAJ,CAAa,CAAb,CAAkB,EAAM+Z,CAAN,CAAU/Z,CAAX,EAAiB+Z,CAAC,CAAG/Z,CAArB,CANC,CAOtBqZ,KAAK,CAAW,CAAT,EAAAU,CAAC,CAAG/Z,CAAJ,CAAa,CAAb,CAAkB,KAAO+Z,CAAP,CAAW/Z,CAAZ,EAAmB,IAAO+Z,CAAR,CAAa/Z,CAA/B,CAPF,CAQtBsZ,EAAE,CAAW,CAAT,EAAAS,CAAC,CAAG/Z,CAAJ,CAAa,CAAb,CAAkB,EAAM+Z,CAAN,CAAU/Z,CAAX,EAAkB,EAAM+Z,CAAP,CAAY/Z,CAA7B,CARC,CAA1B,CAWA,MAAO8Z,CAAAA,CACV,CAQD,QAAS1C,CAAAA,EAAT,CAA+BD,CAA/B,CAA2C,CAGvC,GAAI3V,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCS,SAApC,EAAiD7M,EAAW,CAAC+kB,WAAjE,CAA8E,CAC1E,QACH,CAED,GAAIrgB,EAAY,EAAIvF,EAApB,CAA4B,CACxB,QACH,CATsC,GAYnC6lB,CAAAA,CAAU,CAAG9hB,EAAe,CAAC4e,CAAD,CAAf,CAA4B6C,EAZN,CAanC1f,CAAO,CAAG,CAbyB,CAcnCsY,CAdmC,CAevC,IAAKA,CAAL,GAAgBra,CAAAA,EAAhB,CAAiC,CAC7B,GAAIA,EAAe,CAACqa,CAAD,CAAf,CAAyBoH,EAAzB,EAA+BK,CAAnC,CAA+C,CAC3C/f,CAAO,EACV,CACJ,CAnBsC,GAqBnCwd,CAAAA,CAAI,CAAGJ,EAAmB,EArBS,CAsBnC4C,CAAU,CAAG,CAtBsB,CAuBvC,GAAI3gB,EAAc,CAACme,CAAD,CAAlB,CAA0B,CACtBuC,CAAU,CAAG1gB,EAAc,CAACme,CAAD,CAAd,CAAqBX,CAArB,CAAb,CACA,IAAKvE,CAAL,GAAgBjZ,CAAAA,EAAc,CAACme,CAAD,CAA9B,CAAsC,CAClC,GAAIne,EAAc,CAACme,CAAD,CAAd,CAAqBlF,CAArB,GAAiCyH,CAArC,CAAiD,CAC7CC,CAAU,EACb,CACJ,CACJ,CACD,GAAe,CAAX,EAAAhgB,CAAO,EAAuB,CAAd,EAAAggB,CAApB,CAAqC,CACjC,QACH,CACD,GAAkB,CAAd,EAAAA,CAAJ,CAAqB,CACjB,QACH,CAED,QACH,CAOD,QAAS5C,CAAAA,EAAT,EAA+B,CAE3B,GAAI6B,CAAAA,CAAG,CAAGjiB,EAAQ,CAAC4K,SAAT,CAAmB5B,KAAnB,CAAyB,MAAzB,CAAV,CAEA,GAAIiZ,CAAG,CAAC,CAAD,CAAH,EAAUA,CAAG,CAAC,CAAD,CAAH,CAAOE,UAAP,CAAkBpkB,EAAW,CAACkjB,SAA9B,CAAd,CAAwD,CACpD,MAAO1S,CAAAA,QAAQ,CAAC0T,CAAG,CAAC,CAAD,CAAH,CAAOjZ,KAAP,CAAa,GAAb,EAAkB,CAAlB,CAAD,CAClB,CAFD,IAEO,CACH,MAAO,KACV,CACJ,CAKD,QAASkX,CAAAA,EAAT,EAA0B,CAEtB,IAAK,GAAIM,CAAAA,CAAT,GAAiB/gB,CAAAA,EAAjB,CAA6B,CACzB,GAAY,CAAR,EAAA+gB,CAAJ,CAAe,CACX,QACH,CACDne,EAAc,CAACme,CAAD,CAAd,CAAuB,EAAvB,CACA,IAAK,GAAInX,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG5J,EAAU,CAAC+gB,CAAD,CAAV,CAAiBzZ,MAArC,CAA6CsC,CAAC,EAA9C,CAAkD,CAC9C,IAAK,GAAIgX,CAAAA,CAAT,GAAmB5gB,CAAAA,EAAU,CAAC+gB,CAAD,CAAV,CAAiBnX,CAAjB,EAAoBrG,OAAvC,CAAgD,CAE5C,GAAIkD,CAAAA,CAAE,CAAGpI,EAAW,CAAC2B,EAAU,CAAC+gB,CAAD,CAAV,CAAiBnX,CAAjB,EAAoBrG,OAApB,CAA4Bqd,CAA5B,EAAoCna,EAArC,CAApB,CACA7D,EAAc,CAACme,CAAD,CAAd,CAAqBta,CAArB,EAA2BmD,CAC9B,CACJ,CACJ,CACJ,CASD,QAASoX,CAAAA,EAAT,CAA4BN,CAA5B,CAAyCtB,CAAzC,CAAkDmB,CAAlD,CAAuD,CAGnD,GAAIiD,CAAAA,CAAK,CAAG,EAAZ,CACIC,CAAM,CAAG,EADb,CAEI7Z,CAFJ,CAGIiS,CAHJ,CAKA,IAAKjS,CAAC,CAAG,CAAT,CAAYA,CAAC,CAAG5J,EAAU,CAAC0gB,CAAD,CAAV,CAAwBpZ,MAAxC,CAAgDsC,CAAC,EAAjD,CAAqD,CACjD4Z,CAAK,CAAC5Z,CAAD,CAAL,CAAW,EAAX,CACA6Z,CAAM,CAAC7Z,CAAD,CAAN,CAAY,EAAZ,CAEA,IAAKiS,CAAL,GAAgBjZ,CAAAA,EAAc,CAAC8d,CAAD,CAA9B,CAA6C,CACzC,GAAI9d,EAAc,CAAC8d,CAAD,CAAd,CAA4B7E,CAA5B,GAAwCjS,CAA5C,CAA+C,IAEvC6E,CAAAA,CAAC,CAAGjN,EAAe,CAACqa,CAAD,CAAf,CAAyBpN,CAFU,CAGvCF,CAAC,CAAG/M,EAAe,CAACqa,CAAD,CAAf,CAAyBtN,CAHU,CAK3CiV,CAAK,CAAC5Z,CAAD,CAAL,CAAS6E,CAAC,CAAG,GAAJ,CAAUF,CAAnB,EAAwB,CAACE,CAAC,CAAEA,CAAJ,CAAOF,CAAC,CAAEA,CAAV,CAAa9F,MAAM,CAAEhH,EAAS,CAACmI,CAAD,CAAT,CAAanB,MAAlC,CAAxB,CACAgb,CAAM,CAAC7Z,CAAD,CAAN,CAAU6Z,CAAM,CAAC7Z,CAAD,CAAN,CAAUtC,MAApB,EAA8B,CAACmH,CAAD,CAAIF,CAAJ,CACjC,CACJ,CACJ,CAtBkD,GAyB/C/E,CAAAA,CAAC,CAAGiB,QAAQ,CAACiZ,sBAAT,CAAgC,iBAAhC,EAAmDpc,MAzBR,CA0B/Cqc,CAAiB,CAAQ,CAAL,EAAAna,CAAC,MA1B0B,CA6BnD/K,EAAG,CAACmO,SAAJ,CAAc,cAAd,EAA8BC,MAA9B,GACA,IAAKjD,CAAC,CAAG,CAAT,CAAYA,CAAC,CAAG4Z,CAAK,CAAClc,MAAtB,CAA8BsC,CAAC,EAA/B,CAAmC,CAC/B8R,EAAe,CAAC8H,CAAK,CAAC5Z,CAAD,CAAN,CAAqB,CAAC,CAAX,EAACA,CAAC,CAAG,CAAL,CAAX,IAA+B+Z,CAA/B,CAAf,CACA9gB,EAAe,CAAC+G,CAAD,CAAf,CAAqBga,EAAqB,CAACH,CAAM,CAAC7Z,CAAD,CAAP,CAC7C,CAGD,GAAIwV,CAAJ,CAAa,CAGT,GAAI,CAACA,CAAO,CAACmB,CAAG,CAACsD,GAAL,CAAZ,CAAuB,CACnBzE,CAAO,CAACmB,CAAG,CAACsD,GAAL,CAAP,CAAmB,EACtB,CACD,GAAI,CAACzE,CAAO,CAACmB,CAAG,CAACsD,GAAL,CAAP,CAAiBtD,CAAG,CAAC3G,GAArB,CAAL,CAAgC,CAC5BwF,CAAO,CAACmB,CAAG,CAACsD,GAAL,CAAP,CAAiBtD,CAAG,CAAC3G,GAArB,EAA4B,EAC/B,CACD,GAAI,CAACwF,CAAO,CAACmB,CAAG,CAACsD,GAAL,CAAP,CAAiBtD,CAAG,CAAC3G,GAArB,EAA0B2G,CAAG,CAACuD,GAA9B,CAAL,CAAyC,CACrC1E,CAAO,CAACmB,CAAG,CAACsD,GAAL,CAAP,CAAiBtD,CAAG,CAAC3G,GAArB,EAA0B2G,CAAG,CAACuD,GAA9B,EAAqC,EACxC,CACD,GAAI,CAAC1E,CAAO,CAACmB,CAAG,CAACsD,GAAL,CAAP,CAAiBtD,CAAG,CAAC3G,GAArB,EAA0B2G,CAAG,CAACuD,GAA9B,EAAmCpD,CAAnC,CAAL,CAAsD,CAClDtB,CAAO,CAACmB,CAAG,CAACsD,GAAL,CAAP,CAAiBtD,CAAG,CAAC3G,GAArB,EAA0B2G,CAAG,CAACuD,GAA9B,EAAmCpD,CAAnC,EAAkD,EACrD,CAGD,IAAK9W,CAAC,CAAG,CAAT,CAAYA,CAAC,CAAG/G,EAAe,CAACyE,MAAhC,CAAwCsC,CAAC,EAAzC,CAA6C,CACzC,GAAI,CAAC/G,EAAe,CAAC+G,CAAD,CAApB,CAAyB,CACrB,QACH,CACD,GAAIrG,CAAAA,CAAO,CAAG,EAAd,CAEA,IAAKsY,CAAL,GAAgBjZ,CAAAA,EAAc,CAAC8d,CAAD,CAA9B,CAA6C,CACzC,GAAI9d,EAAc,CAAC8d,CAAD,CAAd,CAA4B7E,CAA5B,GAAwCjS,CAA5C,CAA+C,CAE3CrG,CAAO,CAACA,CAAO,CAAC+D,MAAT,CAAP,CAA0B,CACtBb,EAAE,CAAGrI,EAAW,CAACyd,CAAD,CADM,CAEtB0F,GAAG,CAAE3X,CAFiB,CAI7B,CACJ,CAGDwV,CAAO,CAACmB,CAAG,CAACsD,GAAL,CAAP,CAAiBtD,CAAG,CAAC3G,GAArB,EAA0B2G,CAAG,CAACuD,GAA9B,EAAmCpD,CAAnC,EAAgD9W,CAAhD,EAAqD,CACjDma,SAAS,CAAElhB,EAAe,CAAC+G,CAAD,CAAf,CAAmB6E,CADmB,CAEjDuV,SAAS,CAAEnhB,EAAe,CAAC+G,CAAD,CAAf,CAAmB2E,CAFmB,CAGjDhL,OAAO,CAAIA,CAHsC,CAKxD,CACJ,CAGD,GAAIogB,CAAJ,CAAuB,CACnBM,EAAmB,EACtB,CAFD,IAEO,CACHC,EAA2B,EAC9B,CAEDrlB,EAAK,CAAC+N,SAAN,CAAgB,WAAhB,EAA6BgC,KAA7B,GACA/P,EAAK,CAAC+N,SAAN,CAAgB,sBAAhB,EAAwCgC,KAAxC,GACA/P,EAAK,CAAC+N,SAAN,CAAgB,kBAAhB,EAAoCgC,KAApC,EACH,CAKD,QAASuV,CAAAA,EAAT,EAAoB,CAEhB1lB,EAAG,CAAC6Z,KAAJ,CAAU8L,eAAV,EACH,CAKD,QAASH,CAAAA,EAAT,EAA+B,CAE3BxlB,EAAG,CAACmO,SAAJ,CAAc,kBAAd,EAAkCC,MAAlC,GAGA,OAFI3D,CAAAA,CAAC,CAAG,EAER,CAASU,CAAC,CAAG,CAAb,CAAgB6E,CAAhB,CAAmBF,CAAnB,CAAsB3E,CAAC,CAAG/G,EAAe,CAACyE,MAA1C,CAAkDsC,CAAC,EAAnD,CAAuD,CAEnD,GAAI,CAAC/G,EAAe,CAAC+G,CAAD,CAApB,CAAyB,CACrB,MACH,CAED6E,CAAC,CAAG5L,EAAe,CAAC+G,CAAD,CAAf,CAAmB6E,CAAvB,CACAF,CAAC,CAAG1L,EAAe,CAAC+G,CAAD,CAAf,CAAmB2E,CAAvB,CAEA1P,EAAK,CAACiN,MAAN,CAAa,MAAb,EACKC,IADL,CACU,OADV,CACmB,iBADnB,EAEKA,IAFL,CAEU,IAFV,CAEgB,WAAanC,CAF7B,EAGKmC,IAHL,CAGU,IAHV,CAGgB0C,CAAC,CAAGvF,CAHpB,EAIK6C,IAJL,CAIU,IAJV,CAIgBwC,CAAC,CAAGrF,CAJpB,EAKK6C,IALL,CAKU,IALV,CAKgB0C,CAAC,CAAGvF,CALpB,EAMK6C,IANL,CAMU,IANV,CAMgBwC,CAAC,CAAGrF,CANpB,EAOK8B,KAPL,CAOW,QAPX,CAOqBvJ,EAAS,CAACmI,CAAD,CAAT,CAAanB,MAPlC,EAQKuC,KARL,CAQW,cARX,CAQ2B,KAR3B,EASKA,KATL,CASW,SATX,CASsB,CATtB,EAUK2B,EAVL,CAUQ,OAVR,CAUiBwX,EAVjB,EAWKxX,EAXL,CAWQ,qBAXR,CAW+B6T,EAAa,CAACtP,IAAd,CAAmB,IAAnB,CAAmC,CAAC,CAAX,EAACtH,CAAC,CAAG,CAAL,CAAzB,CAAuCA,CAAvC,IAX/B,EAYK+C,EAZL,CAYQ,WAZR,CAYqBsE,EAAmB,CAACC,IAApB,CAAyB,IAAzB,CAA+BtH,CAA/B,IAZrB,EAcA/K,EAAK,CAACiN,MAAN,CAAa,MAAb,EACKC,IADL,CACU,OADV,CACmB,iBADnB,EAEKA,IAFL,CAEU,IAFV,CAEgB,WAAanC,CAF7B,EAGKmC,IAHL,CAGU,IAHV,CAGgB0C,CAAC,CAAGvF,CAHpB,EAIK6C,IAJL,CAIU,IAJV,CAIgBwC,CAAC,CAAGrF,CAJpB,EAKK6C,IALL,CAKU,IALV,CAKgB0C,CAAC,CAAGvF,CALpB,EAMK6C,IANL,CAMU,IANV,CAMgBwC,CAAC,CAAGrF,CANpB,EAOK8B,KAPL,CAOW,QAPX,CAOqBvJ,EAAS,CAACmI,CAAD,CAAT,CAAanB,MAPlC,EAQKuC,KARL,CAQW,cARX,CAQ2B,KAR3B,EASKA,KATL,CASW,SATX,CASsB,CATtB,EAUK2B,EAVL,CAUQ,OAVR,CAUiBwX,EAVjB,EAWKxX,EAXL,CAWQ,qBAXR,CAW+B6T,EAAa,CAACtP,IAAd,CAAmB,IAAnB,CAAmC,CAAC,CAAX,EAACtH,CAAC,CAAG,CAAL,CAAzB,CAAuCA,CAAvC,IAX/B,EAYK+C,EAZL,CAYQ,WAZR,CAYqBsE,EAAmB,CAACC,IAApB,CAAyB,IAAzB,CAA+BtH,CAA/B,IAZrB,CAaH,CAGDnL,EAAG,CAACmO,SAAJ,CAAc,kBAAd,EAAkC/G,UAAlC,GAA+CC,QAA/C,CAAwDpD,EAAxD,EACKsI,KADL,CACW,SADX,CACsB,EADtB,EAEAvM,EAAG,CAACmO,SAAJ,CAAc,cAAd,EAA8B/G,UAA9B,GAA2CC,QAA3C,CAAoDpD,EAApD,EACKsI,KADL,CACW,gBADX,CAC6B,CAD7B,EAEKA,KAFL,CAEW,cAFX,CAE2B1J,EAF3B,CAGH,CAKD,QAAS4iB,CAAAA,EAAT,EAAuC,CAGnC,OADIhb,CAAAA,CAAC,CAAG,EACR,CAASU,CAAC,CAAG,CAAb,CAAgB6E,CAAhB,CAAmBF,CAAnB,CAAsB3E,CAAC,CAAG/G,EAAe,CAACyE,MAA1C,CAAkDsC,CAAC,EAAnD,CAAuD,CAEnD,GAAI,CAAC/G,EAAe,CAAC+G,CAAD,CAApB,CAAyB,CACrBnL,EAAG,CAACmO,SAAJ,CAAc,kBAAd,EAAkCC,MAAlC,GACA,MACH,CAED4B,CAAC,CAAG5L,EAAe,CAAC+G,CAAD,CAAf,CAAmB6E,CAAvB,CACAF,CAAC,CAAG1L,EAAe,CAAC+G,CAAD,CAAf,CAAmB2E,CAAvB,CAEA9P,EAAG,CAACoN,MAAJ,CAAW,YAAcjC,CAAzB,EAA4B/D,UAA5B,GAAyCC,QAAzC,CAAkDpD,EAAlD,EACKqJ,IADL,CACU,IADV,CACgB0C,CAAC,CAAGvF,CADpB,EAEK6C,IAFL,CAEU,IAFV,CAEgBwC,CAAC,CAAGrF,CAFpB,EAGK6C,IAHL,CAGU,IAHV,CAGgB0C,CAAC,CAAGvF,CAHpB,EAIK6C,IAJL,CAIU,IAJV,CAIgBwC,CAAC,CAAGrF,CAJpB,EAKK8B,KALL,CAKW,SALX,CAKsB,OALtB,EAOAvM,EAAG,CAACoN,MAAJ,CAAW,YAAcjC,CAAzB,EAA4B/D,UAA5B,GAAyCC,QAAzC,CAAkDpD,EAAlD,EACKqJ,IADL,CACU,IADV,CACgB0C,CAAC,CAAGvF,CADpB,EAEK6C,IAFL,CAEU,IAFV,CAEgBwC,CAAC,CAAGrF,CAFpB,EAGK6C,IAHL,CAGU,IAHV,CAGgB0C,CAAC,CAAGvF,CAHpB,EAIK6C,IAJL,CAIU,IAJV,CAIgBwC,CAAC,CAAGrF,CAJpB,EAKK8B,KALL,CAKW,SALX,CAKsB,OALtB,CAMH,CACJ,CAOD,QAASqZ,CAAAA,EAAT,CAA8B3D,CAA9B,CAA2C,CAGvC,GAAI,CAACA,CAAD,EAA8B,CAAd,CAAAA,CAApB,CAAqC,CACjC7hB,EAAK,CAAC+N,SAAN,CAAgB,kBAAhB,EAAoCC,MAApC,GACAhO,EAAK,CAAC+N,SAAN,CAAgB,cAAhB,EAAgCC,MAAhC,GACA,MACH,CAGD,GAAI,CAAC/J,EAAL,CAA2B,CACvB,MACH,CAEDke,EAAkB,CAACN,CAAD,CAAc,IAAd,CAAoB,IAApB,CACrB,CAQD,QAASf,CAAAA,EAAT,CAA0BP,CAA1B,CAAmC,IAG3BlK,CAAAA,CAAG,CAAGzK,QAAQ,CAACC,cAAT,CAAwB,eAAxB,CAHqB,CAI3BtB,CAJ2B,CAK3BQ,CAL2B,CAO/B,IAAKA,CAAC,CAAG,CAAT,CAAYA,CAAC,CAAGsL,CAAG,CAACQ,OAAJ,CAAYpO,MAA5B,CAAoCsC,CAAC,EAArC,CAAyC,CACrC,GAAIsL,CAAG,CAACQ,OAAJ,CAAY9L,CAAZ,EAAe0K,QAAnB,CAA6B,CACzBlL,CAAI,CAAG8L,CAAG,CAACQ,OAAJ,CAAY9L,CAAZ,EAAemB,KAAf,CAAqBxB,KAArB,CAA2B,GAA3B,CAAP,CACA,KACH,CACJ,CAZ8B,GAa3BiW,CAAAA,CAAS,CAAGpW,CAAI,CAAC,CAAD,CAbW,CAc3BqY,CAAQ,CAAGrY,CAAI,CAAC,CAAD,CAdY,CAe3BsW,CAAS,CAAGtW,CAAI,CAAC,CAAD,CAfW,CAkB/BpG,EAAY,CAAGwc,CAAS,CAACjW,KAAV,CAAgB,GAAhB,EAAqB,CAArB,CAAf,CACA9G,EAAU,CAACgc,SAAX,CAAuBiB,CAAvB,CACAxhB,EAAU,CAAGM,EAAkB,CAACghB,CAAD,CAAlB,CAA8BiC,CAA9B,EAAwC6C,IAArD,CACAjnB,EAAW,CAAGmB,EAAkB,CAACghB,CAAD,CAAlB,CAA8BiC,CAA9B,EAAwCha,KAAtD,CACAnK,EAAS,CAAGkB,EAAkB,CAACghB,CAAD,CAAlB,CAA8BiC,CAA9B,EAAwC1d,KAApD,CACAxG,EAAW,CAAGiB,EAAkB,CAACghB,CAAD,CAAlB,CAA8BiC,CAA9B,EAAwCvd,KAAtD,CACApH,EAAO,CAAG0B,EAAkB,CAACghB,CAAD,CAAlB,CAA8BiC,CAA9B,EAAwCje,IAAlD,CACAxD,EAAU,CAAGxB,EAAkB,CAACghB,CAAD,CAAlB,CAA8BiC,CAA9B,EAAwC/B,CAAxC,CAAb,CACAjjB,EAAI,CAAG+B,EAAkB,CAACghB,CAAD,CAAlB,CAA8BiC,CAA9B,EAAwChlB,IAA/C,CACAC,EAAK,CAAG8B,EAAkB,CAACghB,CAAD,CAAlB,CAA8BiC,CAA9B,EAAwC/kB,KAAhD,CACAyB,EAAQ,CAAGK,EAAkB,CAACghB,CAAD,CAAlB,CAA8BiC,CAA9B,EAAwC/B,CAAxC,EAAmDvhB,QAA9D,CAGAE,EAAW,CAAG,EAAd,CACAD,EAAW,CAAG,EAAd,CACA1B,EAAK,CAAC6J,OAAN,CAAc,SAASC,CAAT,CAAY,CACtBpI,EAAW,CAACoI,CAAC,CAACC,EAAH,CAAX,CAAoBD,CAAC,CAACE,MAAtB,CACArI,EAAW,CAACmI,CAAC,CAACE,MAAH,CAAX,CAAwBF,CAAC,CAACC,EAC7B,CAHD,EAKAxF,EAAY,CAAG,CAAf,CACAZ,EAAkB,CAAG,CAArB,CAGAH,EAAa,CAAG,CAAhB,CACAC,EAAa,CAAG,CAAhB,CACA,IAAK,GAAIqH,CAAAA,CAAT,GAAgBxH,CAAAA,EAAhB,CAA4B,CACxB,GAAI0J,KAAK,CAAClC,CAAD,CAAT,CAAgB,CACZ,QACH,CAFD,IAEO,IAAW,CAAP,EAAAA,CAAJ,CAAc,CACjBtH,EAAa,EAChB,CAFM,IAEA,CACHC,EAAa,EAChB,CACJ,CAGD0C,EAAe,CAAG,EAAlB,CACAD,EAAc,CAAG,EAAjB,CACAE,EAAoB,GAApB,CACA,GAAIyhB,CAAAA,CAAU,CAAGnF,CAAO,CAACI,CAAD,CAAP,CAAmBiC,CAAnB,EAA6B/B,CAA7B,CAAjB,CACI8E,CADJ,CAEI5D,CAFJ,CAIA,GAAI2D,CAAJ,CAAgB,CACZzhB,EAAoB,GAApB,CAGA,IAAK8G,CAAC,CAAG,CAAC,CAAV,CAAaA,CAAC,EAAIzJ,EAAlB,CAAiCyJ,CAAC,EAAlC,CAAsC,CAClC,GAAI2a,CAAU,CAAC3a,CAAD,CAAV,EAAiB,CAAC2a,CAAU,CAAC3a,CAAC,CAAG,CAAL,CAAhC,CAAyC,CACrC2a,CAAU,CAAC3a,CAAC,CAAG,CAAL,CAAV,CAAoB2a,CAAU,CAAC3a,CAAD,CACjC,CAEDhH,EAAc,CAACgH,CAAD,CAAd,CAAoB,EAApB,CAEA,IAAK4a,CAAL,GAAmBD,CAAAA,CAAU,CAAC3a,CAAD,CAA7B,CAAkC,CAC9B,IAAKgX,CAAL,GAAe2D,CAAAA,CAAU,CAAC3a,CAAD,CAAV,CAAc4a,CAAd,EAA0BjhB,OAAzC,CAAkD,CAE9C,GAAIkD,CAAAA,CAAE,CAAG8d,CAAU,CAAC3a,CAAD,CAAV,CAAc4a,CAAd,EAA0BjhB,OAA1B,CAAkCqd,CAAlC,EAA0Cna,EAAnD,CACA7D,EAAc,CAACgH,CAAD,CAAd,CAAkBvL,EAAW,CAACoI,CAAD,CAA7B,EAAqC+d,CACxC,CACJ,CACJ,CACJ,CAGD/iB,EAAS,CAAG,EAAZ,CACAF,EAAa,CAAG,EAAhB,CACA,GAAIwG,CAAAA,CAAE,CAAG,EAAT,CACIkb,CAAE,CAAG,CADT,CAGA,IAAKuB,CAAL,GAAmBxkB,CAAAA,EAAU,CAAC,CAAD,CAA7B,CAAkC,CAE9B4J,CAAC,CAAGnI,EAAS,CAAC6F,MAAd,CACA7F,EAAS,CAACmI,CAAD,CAAT,CAAe,CAAC6E,CAAC,CAAE,CAAJ,CAAOF,CAAC,CAAE,CAAV,CAAf,CAEA,GAAI0U,CAAE,CAAGniB,EAAe,CAACwG,MAAzB,CAAiC,CAC7B7F,EAAS,CAACmI,CAAD,CAAT,CAAanB,MAAb,CAAsB3H,EAAe,CAACmiB,CAAE,EAAH,CACxC,CAFD,IAEO,CACH,GAAI9b,CAAAA,CAAJ,CACA,MAAO,CAACA,CAAR,CAAW,CACPA,CAAC,CAAGxG,EAAO,CAAC0F,IAAI,CAACe,KAAL,CAAWxI,EAAI,CAACyI,MAAL,GAAgB1G,EAAO,CAAC2G,MAAnC,CAAD,CAAX,CACAH,CAAC,CAAGrG,EAAe,CAAC2jB,QAAhB,CAAyBtd,CAAzB,SAA0CA,CACjD,CACD1F,EAAS,CAACmI,CAAD,CAAT,CAAanB,MAAb,CAAsBtB,CACzB,CAGD,IAAKyZ,CAAL,GAAe5gB,CAAAA,EAAU,CAAC,CAAD,CAAV,CAAcwkB,CAAd,EAA0BjhB,OAAzC,CAAkD,CAE9C,GAAImhB,CAAAA,CAAM,CAAGrmB,EAAW,CAAC2B,EAAU,CAAC,CAAD,CAAV,CAAcwkB,CAAd,EAA0BjhB,OAA1B,CAAkCqd,CAAlC,EAA0Cna,EAA3C,CAAxB,CACAlF,EAAa,CAACmjB,CAAD,CAAb,CAAwB,CACpBjW,CAAC,CAAEzO,EAAU,CAAC,CAAD,CAAV,CAAcwkB,CAAd,EAA0BjhB,OAA1B,CAAkCqd,CAAlC,EAA0CnS,CADzB,CAEpBF,CAAC,CAAEvO,EAAU,CAAC,CAAD,CAAV,CAAcwkB,CAAd,EAA0BjhB,OAA1B,CAAkCqd,CAAlC,EAA0CrS,CAFzB,CAAxB,CAIAxG,CAAE,CAAC2c,CAAD,CAAF,GACH,CACJ,CAED,MAAO,CAACnhB,OAAO,CAAEwE,CAAV,CAAc8b,GAAG,CAAErE,CAAnB,CAA8B5F,GAAG,CAAE6H,CAAnC,CAA6CqC,GAAG,CAAEpE,CAAlD,CACV,CAQD,QAASI,CAAAA,EAAT,CAAyBvc,CAAzB,CAAkC,CAG9B9D,EAAW,CAAGgL,QAAQ,CAACG,aAAT,CAAuB,QAAvB,CAAd,CACAnL,EAAW,CAACyZ,QAAZ,IACAzZ,EAAW,CAACgH,EAAZ,CAAiB,gBAAjB,CACAhH,EAAW,CAACuL,KAAZ,CAAkBwT,OAAlB,CAA4B,MAA5B,CAGA5d,EAAW,CAAG,CAAd,CACAlE,EAAK,CAAC6J,OAAN,CAAc,SAASC,CAAT,CAAY,CACtBiT,CAAW,CAACjT,CAAD,CAAI/G,EAAJ,CACd,CAFD,EAKA,IAAK,GAAImK,CAAAA,CAAC,CAAG,CAAR,CAAWnD,CAAhB,CAAoBmD,CAAC,CAAGnK,EAAW,CAACiW,OAAZ,CAAoBpO,MAA5C,CAAoDsC,CAAC,EAArD,CAAyD,CAErDnD,CAAE,CAAGhH,EAAW,CAACiW,OAAZ,CAAoB9L,CAApB,EAAuBmB,KAA5B,CAEA,GAAIxH,CAAO,CAACkD,CAAD,CAAX,CAAiB,CACbhH,EAAW,CAACiW,OAAZ,CAAoB9L,CAApB,EAAuB0K,QAAvB,GACH,CAFD,IAEO,CACH7U,EAAW,CAACiW,OAAZ,CAAoB9L,CAApB,EAAuB0K,QAAvB,GACH,CAED,GAAI/S,EAAa,CAACkF,CAAD,CAAjB,CAAuB,CACnBlF,EAAa,CAACkF,CAAD,CAAb,CAAkBgC,MAAlB,CAA2BhJ,EAAW,CAACiW,OAAZ,CAAoB9L,CAApB,EAAuBnB,MACrD,CACJ,CAEDgC,QAAQ,CAAC+F,IAAT,CAAcpF,WAAd,CAA0B3L,EAA1B,CACH,CASD,QAASugB,CAAAA,EAAT,CAAsB5D,CAAtB,CAA8BuI,CAA9B,CAA8C,CAE1C,IAAK,GAAInd,CAAAA,CAAT,GAAgB4U,CAAAA,CAAhB,CAAwB,CAEpBA,CAAM,CAAC5U,CAAD,CAAN,CAAYiH,CAAZ,EAAiBhM,EAAU,CAACiP,QAA5B,CACA0K,CAAM,CAAC5U,CAAD,CAAN,CAAYiH,CAAZ,EAAiBhM,EAAU,CAAC6O,SAA5B,CAEA8K,CAAM,CAAC5U,CAAD,CAAN,CAAY+G,CAAZ,EAAiB9L,EAAU,CAACiP,QAA5B,CACA0K,CAAM,CAAC5U,CAAD,CAAN,CAAY+G,CAAZ,EAAiB9L,EAAU,CAAC8O,SAA5B,CAEA,GAAIoT,CAAJ,CAAoB,CAEhBvI,CAAM,CAAC5U,CAAD,CAAN,CAAYiH,CAAZ,EAAiBhM,EAAU,CAACmiB,MAAX,CAAkBnW,CAAnC,CACA2N,CAAM,CAAC5U,CAAD,CAAN,CAAYiH,CAAZ,EAAiBhM,EAAU,CAACyB,KAA5B,CACAkY,CAAM,CAAC5U,CAAD,CAAN,CAAYiH,CAAZ,EAAiB3P,EAAK,CAAG,CAAzB,CAEAsd,CAAM,CAAC5U,CAAD,CAAN,CAAY+G,CAAZ,EAAiB9L,EAAU,CAACmiB,MAAX,CAAkBrW,CAAnC,CACA6N,CAAM,CAAC5U,CAAD,CAAN,CAAY+G,CAAZ,EAAiB9L,EAAU,CAACyB,KAA5B,CACAkY,CAAM,CAAC5U,CAAD,CAAN,CAAY+G,CAAZ,EAAiBxP,EAAM,CAAG,CAC7B,CACJ,CACJ,CAKD,QAASsgB,CAAAA,EAAT,EAA8B,IAGtBwF,CAAAA,CAAO,CAAGpa,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAHY,CAMtBoa,CAAE,CAAGra,QAAQ,CAACG,aAAT,CAAuB,GAAvB,CANiB,CAO1Bka,CAAE,CAAC3Z,SAAH,CAAe,OAAf,CACA2Z,CAAE,CAACre,EAAH,CAAQ,UAAR,CACAqe,CAAE,CAAC9Z,KAAH,CAAS+Z,SAAT,CAAqB,OAArB,CACAF,CAAO,CAACzZ,WAAR,CAAoB0Z,CAApB,EAGA,GAAIE,CAAAA,CAAE,CAAGva,QAAQ,CAACG,aAAT,CAAuB,GAAvB,CAAT,CACAoa,CAAE,CAAC7Z,SAAH,CAAe,OAAf,CACA6Z,CAAE,CAACve,EAAH,CAAQ,gBAAR,CACAue,CAAE,CAACha,KAAH,CAAS+Z,SAAT,CAAqB,OAArB,CACAF,CAAO,CAACzZ,WAAR,CAAoB4Z,CAApB,EAGA,GAAI7X,CAAAA,CAAI,CAAG1C,QAAQ,CAACG,aAAT,CAAuB,QAAvB,CAAX,CACAuC,CAAI,CAAC1G,EAAL,CAAU,aAAV,CACA0G,CAAI,CAAChC,SAAL,CAAiB,QAAjB,CACAgC,CAAI,CAAClC,gBAAL,CAAsB,OAAtB,CAA+Bga,EAA/B,EACA9X,CAAI,CAACnC,KAAL,CAAW6U,OAAX,CAAqB,CAArB,CACAgF,CAAO,CAACzZ,WAAR,CAAoB+B,CAApB,EAGA,GAAI+X,CAAAA,CAAS,CAAGza,QAAQ,CAACG,aAAT,CAAuB,QAAvB,CAAhB,CACAsa,CAAS,CAACze,EAAV,CAAe,cAAf,CACAye,CAAS,CAAC/Z,SAAV,CAAsB,QAAtB,CACA+Z,CAAS,CAACna,KAAV,CAAkB,MAAlB,CACAma,CAAS,CAACja,gBAAV,CAA2B,OAA3B,CAAoCka,EAApC,EACAD,CAAS,CAACla,KAAV,CAAgB6U,OAAhB,CAA0B,CAA1B,CACAgF,CAAO,CAACzZ,WAAR,CAAoB8Z,CAApB,EAGA,GAAIE,CAAAA,CAAS,CAAG3a,QAAQ,CAACG,aAAT,CAAuB,QAAvB,CAAhB,CACAwa,CAAS,CAAC3e,EAAV,CAAe,aAAf,CACA2e,CAAS,CAACja,SAAV,CAAsB,cAAtB,CACAia,CAAS,CAACna,gBAAV,CAA2B,OAA3B,CAAoCoa,EAApC,EACAD,CAAS,CAACpa,KAAV,CAAgB6U,OAAhB,CAA0B,CAA1B,CACAgF,CAAO,CAACzZ,WAAR,CAAoBga,CAApB,EAGA,GAAIE,CAAAA,CAAS,CAAG7a,QAAQ,CAACG,aAAT,CAAuB,QAAvB,CAAhB,CACA0a,CAAS,CAAC7e,EAAV,CAAe,gBAAf,CACA6e,CAAS,CAACta,KAAV,CAAgBua,WAAhB,CAA8B,MAA9B,CACAD,CAAS,CAACna,SAAV,CAAsB,wBAAtB,CACAma,CAAS,CAACra,gBAAV,CAA2B,OAA3B,CAAoCua,EAAa,CAACtU,IAAd,CAAmB,IAAnB,IAApC,EACAoU,CAAS,CAACta,KAAV,CAAgB6U,OAAhB,CAA0B,CAA1B,CACAgF,CAAO,CAACzZ,WAAR,CAAoBka,CAApB,EAGA,GAAIG,CAAAA,CAAG,CAAGhb,QAAQ,CAACG,aAAT,CAAuB,QAAvB,CAAV,CACA6a,CAAG,CAAChf,EAAJ,CAAS,eAAT,CACAgf,CAAG,CAACta,SAAJ,CAAgB7M,EAAW,CAAConB,SAA5B,CACAD,CAAG,CAACxa,gBAAJ,CAAqB,OAArB,CAA8B0a,EAA9B,EACAF,CAAG,CAACza,KAAJ,CAAU6U,OAAV,CAAoB,CAApB,CACAgF,CAAO,CAACzZ,WAAR,CAAoBqa,CAApB,CACH,CAKD,QAASE,CAAAA,EAAT,EAAgC,CAE5B,GAAIC,OAAO,CAACtnB,EAAW,CAACunB,UAAb,CAAX,CAAqC,CAEjC,GAAInM,CAAAA,CAAI,CAAGjP,QAAQ,CAACC,cAAT,CAAwB,eAAxB,CAAX,CACA,GAAyB,CAAC,CAAtB,CAAAgP,CAAI,CAACoM,aAAT,CAA6B,CAEzB,GAAI/a,CAAAA,CAAK,CAAG2O,CAAI,CAAChE,OAAL,CAAagE,CAAI,CAACoM,aAAlB,EAAiC/a,KAA7C,CACA,GAAmB,CAAf,CAAAA,CAAK,CAACzD,MAAV,CAAsB,CAClBkL,CAAU,CAAChW,EAAD,CAAeuO,CAAK,CAACgb,OAAN,CAAc,GAAd,CAAmB,GAAnB,CAAf,CAAV,CACArM,CAAI,CAAChE,OAAL,CAAagE,CAAI,CAACoM,aAAlB,EAAmC,IAAnC,CACAb,EAAU,EACb,CACJ,CACJ,CACJ,CAKD,QAASA,CAAAA,EAAT,EAAsB,CAGlB,GAAIpmB,EAAJ,CAAW,CACPyL,UAAU,CAAC,UAAW,CAClBzL,EAAK,CAACgO,MAAN,GACA0R,EAAa,GACb9T,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCS,SAApC,CAAgD,QAAhD,CACAV,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,EAA0CS,SAA1C,CAAsD,QACzD,CALS,CAKP,GALO,CAMb,CAEDnL,EAAU,OAAV,CACAwB,EAAe,CAAG,IAAlB,CACAoe,EAAe,GAGfnV,QAAQ,CAACC,cAAT,CAAwB,2BAAxB,EAAqDS,SAArD,CAAiE,OAAjE,CACAV,QAAQ,CAACC,cAAT,CAAwB,aAAxB,EAAuCM,KAAvC,CAA6C6U,OAA7C,CAAuD,CAAvD,CACApV,QAAQ,CAACC,cAAT,CAAwB,cAAxB,EAAwCM,KAAxC,CAA8C6U,OAA9C,CAAwD,CAAxD,CACApV,QAAQ,CAACC,cAAT,CAAwB,aAAxB,EAAuCM,KAAvC,CAA6C6U,OAA7C,CAAuD,CAAvD,CACApV,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,EAA0CM,KAA1C,CAAgD6U,OAAhD,CAA0D,CAA1D,CACApV,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCM,KAAzC,CAA+C6U,OAA/C,CAAyD,CAAzD,CAGA,GAAI3K,CAAAA,CAAG,CAAGzK,QAAQ,CAACC,cAAT,CAAwB,eAAxB,CAAV,CAEA,GAAwB,CAAC,CAArB,CAAAwK,CAAG,CAAC4Q,aAAR,CAA4B,CACxB5Q,CAAG,CAACQ,OAAJ,CAAYR,CAAG,CAAC4Q,aAAhB,EAA+BxR,QAA/B,GACH,CACJ,CAKD,QAASiK,CAAAA,EAAT,EAAyB,CACrBhe,EAAQ,CAACylB,QAAT,IACAzlB,EAAQ,CAAC4K,SAAT,CAAqB,EAArB,CACAb,UAAU,CAAC,UAAW,CAClB/J,EAAQ,CAACylB,QAAT,GACH,CAFS,CAEP,GAFO,CAGb,CAKD,QAASpG,CAAAA,EAAT,EAA2B,CACvB,GAAIqG,CAAAA,CAAM,CAAGxb,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAAb,CACAub,CAAM,CAAC9a,SAAP,CAAmB,QAAnB,CACA8a,CAAM,CAAClb,KAAP,CAAe,MAAf,CACAuT,aAAa,CAACpd,EAAD,CAAb,CACAA,EAAmB,OACtB,CAKD,QAASikB,CAAAA,EAAT,EAAuB,CAGnB,GAAI,CAACnlB,EAAL,CAAiB,CACb,MACH,CACD,GAAIimB,CAAAA,CAAM,CAAGxb,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAAb,CAGA,GAAoB,MAAhB,EAAAub,CAAM,CAAClb,KAAX,CAA4B,CACxBkb,CAAM,CAAC9a,SAAP,CAAmB,cAAnB,CACA8a,CAAM,CAAClb,KAAP,CAAe,OAAf,CACAya,EAAa,IAAb,CACAtkB,EAAmB,CAAGglB,WAAW,CAACV,EAAa,CAACtU,IAAd,CAAmB,IAAnB,IAAD,CAAkC,IAAlC,CAEpC,CAND,IAMO,CAEH0O,EAAe,EAClB,CACJ,CAOD,QAAS4F,CAAAA,EAAT,CAAuBW,CAAvB,CAAkC,CAG9B,GAAI,CAACnmB,EAAL,CAAiB,CACb,MACH,CACD,GAAImmB,CAAJ,CAAe,CACXvG,EAAe,EAClB,CAGD3e,EAAY,GACZ,GAAImlB,CAAAA,CAAU,CAAGnlB,EAAY,CAAG,CAAhC,CAGA,GAAIA,EAAY,CAAGf,EAAf,EAAgCF,EAAU,CAAC,CAAC,CAAF,CAA9C,CAAoD,CAChDomB,CAAU,CAAGlmB,EAAa,CAAGe,EAAhB,CAA+B,CAA5C,CAGA,GAAI,CAACjB,EAAU,CAAComB,CAAU,CAAG,CAAd,CAAf,CAAiC,CAC7BnlB,EAAY,GACZ2e,EAAe,GACf,MACH,CACJ,CACD,GAAIwG,CAAU,CAAGlmB,EAAjB,CAAgC,CAC5Be,EAAY,GACZ2e,EAAe,GACf,MACH,CAGD,GAAoB,CAAhB,EAAA3e,EAAJ,CAAuB,CACnBZ,EAAkB,CAAG,CAArB,CACAW,EAAU,GAAV,CACAW,EAAe,GAAf,CACA0kB,EAAe,EAElB,CAND,IAMO,IAAoB,CAAhB,EAAAplB,EAAJ,CAAuB,CAE1BqlB,EAAe,GACfC,EAAa,CAACH,CAAU,CAAG,CAAd,OAEhB,CALM,IAKA,CAEHG,EAAa,CAACH,CAAU,CAAG,CAAd,OAChB,CACJ,CAKD,QAASf,CAAAA,EAAT,EAAsB,CAGlB,GAAI,CAACrlB,EAAD,EAAe,CAACC,EAAhB,EAAqD,CAAnB,CAAAgB,EAAY,CAAG,CAArD,CAA4D,CACxD,MACH,CACD2e,EAAe,GAGf3e,EAAY,GACZ,GAAImlB,CAAAA,CAAU,CAAGnlB,EAAY,CAAG,CAAhC,CAGA,GAAIA,EAAY,CAAGf,EAAnB,CAAkC,CAC9BkmB,CAAU,CAAGlmB,EAAa,CAAGe,EAAhB,CAA+B,CAC/C,CAGD,GAAoB,CAAhB,EAAAA,EAAJ,CAAuB,CACnBZ,EAAkB,CAAG,CAArB,CACAmmB,EAAe,GACfxlB,EAAU,GAAV,CACAT,EAAQ,CAAC4K,SAAT,CAAqB5K,EAAQ,CAAC4K,SAAT,CAAmB8W,KAAnB,CAAyB1hB,EAAQ,CAAC4K,SAAT,CAAmB6W,OAAnB,CAA2B,UAA3B,EAAyC,CAAlE,CAArB,CACAvX,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCS,SAApC,CAAgD,QAAhD,CACAV,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,EAA0CS,SAA1C,CAAsD,QAEzD,CARD,IAQO,IAAoB,CAAhB,EAAAlK,EAAJ,CAAuB,CAE1BO,EAAe,CAAG,IAAlB,CACA6kB,EAAe,GACf9lB,EAAQ,CAAC4K,SAAT,CAAqB5K,EAAQ,CAAC4K,SAAT,CAAmB8W,KAAnB,CAAyB1hB,EAAQ,CAAC4K,SAAT,CAAmB6W,OAAnB,CAA2B,UAA3B,EAAyC,CAAlE,CAArB,CACAvX,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCS,SAApC,CAAgD,QAAhD,CACAV,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,EAA0CS,SAA1C,CAAsD,QAEzD,CARM,IAQA,CAEH3J,EAAe,CAAG,IAAlB,CACA+kB,EAAa,CAACH,CAAU,CAAG,CAAd,IAAwC,CAAhB,EAAAnlB,EAAxB,CAChB,CACJ,CASD,QAASslB,CAAAA,EAAT,CAAuBxF,CAAvB,CAA6B0F,CAA7B,CAAwCC,CAAxC,CAAoD,CAEhD,GAAIlD,CAAAA,CAAK,CAAG,EAAZ,CACIjgB,CAAO,CAAG,EADd,CAEIqG,CAFJ,CAGI7B,CAAE,CAAG,EAHT,CAMA,IAAK6B,CAAC,CAAG,CAAT,CAAYA,CAAC,CAAG5J,EAAU,CAAC+gB,CAAD,CAAV,CAAiBzZ,MAAjC,CAAyCsC,CAAC,GAAI7B,CAAE,CAAG,EAAnD,CAAuD,CACnDlJ,EAAK,CAAC+N,SAAN,CAAgB,SAAWhD,CAA3B,EAA8BiD,MAA9B,GAGApL,EAAS,CAACmI,CAAD,CAAT,CAAa6E,CAAb,CAAiBzO,EAAU,CAAC+gB,CAAD,CAAV,CAAiBnX,CAAjB,EAAoBma,SAArC,CACAtiB,EAAS,CAACmI,CAAD,CAAT,CAAa2E,CAAb,CAAiBvO,EAAU,CAAC+gB,CAAD,CAAV,CAAiBnX,CAAjB,EAAoBoa,SAArC,CAGA,IAAK,GAAIpD,CAAAA,CAAT,GAAmB5gB,CAAAA,EAAU,CAAC+gB,CAAD,CAAV,CAAiBnX,CAAjB,EAAoBrG,OAAvC,CAAgD,IAExCkL,CAAAA,CAAC,CAAGzO,EAAU,CAAC+gB,CAAD,CAAV,CAAiBnX,CAAjB,EAAoBrG,OAApB,CAA4Bqd,CAA5B,EAAoCnS,CAFA,CAGxCF,CAAC,CAAGvO,EAAU,CAAC+gB,CAAD,CAAV,CAAiBnX,CAAjB,EAAoBrG,OAApB,CAA4Bqd,CAA5B,EAAoCrS,CAHA,CAIxC9H,CAAE,CAAGpI,EAAW,CAAC2B,EAAU,CAAC+gB,CAAD,CAAV,CAAiBnX,CAAjB,EAAoBrG,OAApB,CAA4Bqd,CAA5B,EAAoCna,EAArC,CAJwB,CAM5ClF,EAAa,CAACkF,CAAD,CAAb,CAAkBgI,CAAlB,CAAsBA,CAAtB,CACAlN,EAAa,CAACkF,CAAD,CAAb,CAAkB8H,CAAlB,CAAsBA,CAAtB,CAEAxG,CAAE,CAAC0G,CAAC,CAAG,GAAJ,CAAUF,CAAX,CAAF,CAAkB,CAACE,CAAC,CAAEA,CAAJ,CAAOF,CAAC,CAAEA,CAAV,CAAa9F,MAAM,CAAEhH,EAAS,CAACmI,CAAD,CAAT,CAAanB,MAAlC,CAAlB,CAEAlF,CAAO,CAACkD,CAAD,CAAP,CAAcmD,CACjB,CACD4Z,CAAK,CAAC5Z,CAAD,CAAL,CAAW7B,CACd,CAGDiY,EAAY,CAACve,EAAD,IAAZ,CAEA,GAAIilB,CAAJ,CAAgB,CACZC,EAAuB,EAC1B,CAFD,IAEO,CAEH3G,EAAY,CAACze,EAAD,IAAZ,CAGA,IAAKqI,CAAC,CAAG,CAAT,CAAYA,CAAC,CAAG4Z,CAAK,CAAClc,MAAtB,CAA8BsC,CAAC,EAA/B,CAAmC,CAC/BoW,EAAY,CAACwD,CAAK,CAAC5Z,CAAD,CAAN,IAAZ,CACA8R,EAAe,CAAC8H,CAAK,CAAC5Z,CAAD,CAAN,CAAWA,CAAX,OAClB,CAEDgd,EAA+B,CAAClkB,EAAD,CAClC,CAEDmkB,EAAqB,CAAC5mB,EAAc,CAAC,CAAD,CAAf,CAAoBA,EAAc,CAAC,CAAD,CAAlC,CACCA,EAAc,CAAC,CAAD,CADf,CACoByC,EADpB,CAArB,CAEA7D,EAAK,CAAC+N,SAAN,CAAgB,WAAhB,EAA6BgC,KAA7B,GACA/P,EAAK,CAAC+N,SAAN,CAAgB,sBAAhB,EAAwCgC,KAAxC,GAEAyV,EAAoB,CAACtD,CAAD,CAApB,CAGA,GAAI0F,CAAJ,CAAe,CACXlmB,EAAQ,CAAC4K,SAAT,CAAqB5K,EAAQ,CAAC4K,SAAT,CAAmB8W,KAAnB,CAAyB1hB,EAAQ,CAAC4K,SAAT,CAAmB6W,OAAnB,CAA2B,UAA3B,EAAyC,CAAlE,CACxB,CAFD,IAEO,CACH,IAAK,GAAIxa,CAAAA,CAAT,GAAgBjE,CAAAA,CAAhB,CAAyB,CACrB/B,EAAe,CAACgG,CAAD,CAAf,CAAqByb,EAArB,CAA0B1f,CAAO,CAACiE,CAAD,CACpC,CACDsf,EAAoB,CAAC/F,CAAD,CAApB,CACAE,EAA0B,CAACF,CAAD,CAC7B,CAGD,GAAW,CAAP,CAAAA,CAAJ,CAAc,CACVtW,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCS,SAApC,CAAgD7M,EAAW,CAAC+kB,WAA5D,CACA5Y,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCM,KAApC,CAA0C8M,KAA1C,CAAkD,OAAlD,CAGA,GAAI7U,EAAJ,CAAkB,CACd,GAAI8jB,CAAAA,CAAI,CAAGtc,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCgL,OAApD,CAEA,IAAK9L,CAAC,CAAG,CAAT,CAAYA,CAAC,CAAGmd,CAAI,CAACzf,MAArB,CAA6BsC,CAAC,EAA9B,CAAkC,CAC9B,GAAImd,CAAI,CAACnd,CAAD,CAAJ,CAAQ0K,QAAZ,CAAsB,CAClB,GAAI0S,CAAAA,CAAG,CAAGD,CAAI,CAACnd,CAAD,CAAJ,CAAQmB,KAAR,CAAcxB,KAAd,CAAoB,GAApB,EAAyB,CAAzB,CAAV,CACA,GAAIyd,CAAG,EAAIvpB,EAAX,CAAmB,CACfgN,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,EAA0CS,SAA1C,CAAsD7M,EAAW,CAAC2oB,MACrE,CACD,KACH,CACJ,CACJ,CAZD,IAYO,CACHxc,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,EAA0CS,SAA1C,CAAsD7M,EAAW,CAAC2oB,MACrE,CACJ,CApBD,IAoBO,CACHxc,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCS,SAApC,CAAgD7M,EAAW,CAACkjB,SAAZ,CAAwB,GAAxB,CAA8BT,CAA9E,CACAtW,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCM,KAApC,CAA0C8M,KAA1C,CAAkD,OAAlD,CACArN,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,EAA0CS,SAA1C,CAAsD7M,EAAW,CAAC4oB,OACrE,CACJ,CAOD,QAASrI,CAAAA,EAAT,EAAiC,CAG7B,GAAIgG,CAAAA,CAAO,CAAGpa,QAAQ,CAACC,cAAT,CAAwB,eAAxB,CAAd,CACAma,CAAO,CAACzZ,WAAR,CAAoBX,QAAQ,CAACa,cAAT,CAAwBhN,EAAW,CAAC6oB,SAApC,CAApB,EAGA,GAAIrC,CAAAA,CAAE,CAAGra,QAAQ,CAACG,aAAT,CAAuB,GAAvB,CAAT,CACAka,CAAE,CAAC3Z,SAAH,CAAe,OAAf,CACA2Z,CAAE,CAACre,EAAH,CAAQ,YAAR,CACAoe,CAAO,CAACzZ,WAAR,CAAoB0Z,CAApB,EAGA,GAAIE,CAAAA,CAAE,CAAGva,QAAQ,CAACG,aAAT,CAAuB,GAAvB,CAAT,CACAoa,CAAE,CAAC7Z,SAAH,CAAe,OAAf,CACA6Z,CAAE,CAACve,EAAH,CAAQ,UAAR,CACAue,CAAE,CAACha,KAAH,CAAS+Z,SAAT,CAAqB,OAArB,CACAF,CAAO,CAACzZ,WAAR,CAAoB4Z,CAApB,EAGA,GAAIE,CAAAA,CAAS,CAAGza,QAAQ,CAACG,aAAT,CAAuB,QAAvB,CAAhB,CACAsa,CAAS,CAACze,EAAV,CAAe,YAAf,CACAye,CAAS,CAACla,KAAV,CAAgBoc,UAAhB,CAA6B,KAA7B,CACAlC,CAAS,CAACla,KAAV,CAAgBua,WAAhB,CAA8B,KAA9B,CACAL,CAAS,CAAC/Z,SAAV,CAAsB,QAAtB,CACA+Z,CAAS,CAACrR,SAAV,CAAsB,mBAAtB,CACAqR,CAAS,CAACja,gBAAV,CAA2B,OAA3B,CAAoCoc,EAApC,EACAnC,CAAS,CAAClG,QAAV,IAGA,GAAIsI,CAAAA,CAAQ,CAAG7c,QAAQ,CAACG,aAAT,CAAuB,QAAvB,CAAf,CACA0c,CAAQ,CAAC7gB,EAAT,CAAc,WAAd,CACA6gB,CAAQ,CAACtc,KAAT,CAAeoc,UAAf,CAA4B,KAA5B,CACAE,CAAQ,CAACnc,SAAT,CAAqB,wBAArB,CACAmc,CAAQ,CAACzT,SAAT,CAAqB,mBAArB,CACAyT,CAAQ,CAACrc,gBAAT,CAA0B,OAA1B,CAAmCsc,EAAU,CAACrW,IAAX,CAAgB,IAAhB,CAAsBgU,CAAtB,CAAnC,EACAoC,CAAQ,CAACtI,QAAT,IAEA6F,CAAO,CAACzZ,WAAR,CAAoBkc,CAApB,EACAzC,CAAO,CAACzZ,WAAR,CAAoB8Z,CAApB,EAGA,GAAI/X,CAAAA,CAAI,CAAG1C,QAAQ,CAACG,aAAT,CAAuB,QAAvB,CAAX,CACAuC,CAAI,CAAC1G,EAAL,CAAU,MAAV,CACA0G,CAAI,CAACnC,KAAL,CAAW+Z,SAAX,CAAuB,KAAvB,CACA5X,CAAI,CAACnC,KAAL,CAAWoc,UAAX,CAAwB,KAAxB,CACAja,CAAI,CAAChC,SAAL,CAAiB7M,EAAW,CAACkpB,KAA7B,CACAra,CAAI,CAAC0G,SAAL,CAAiB,mBAAjB,CACA1G,CAAI,CAAClC,gBAAL,CAAsB,OAAtB,CAA+Bwc,EAA/B,EACA5C,CAAO,CAACzZ,WAAR,CAAoB+B,CAApB,EAEA,MAAO0X,CAAAA,CACV,CAMD,QAAS4C,CAAAA,EAAT,EAA0B,CAGtBzmB,EAAU,GAAV,CACAC,EAAY,CAAG,CAAf,CACAqd,aAAa,CAACpd,EAAD,CAAb,CACAA,EAAmB,OAAnB,CACAuB,EAAU,CAACgc,SAAX,CAAuB9Y,IAAI,CAACC,GAAL,EAAvB,CACAxF,EAAa,CAAC6e,eAAd,CAA8B,UAA9B,EAGAxU,QAAQ,CAACC,cAAT,CAAwB,2BAAxB,EAAqDS,SAArD,CAAiE,OAAjE,CAGA,GAA0B,CAAtB,EAAA9K,EAAJ,CAA6B,CACzBD,EAAa,CAACmF,UAAd,CAAyB2Z,GAAzB,CAA6B,CAA7B,EACA5U,UAAU,CAAC,UAAW,CAClBlK,EAAa,CAACmF,UAAd,CAAyB2Z,GAAzB,CAA6B,CAA7B,EACA7e,EAAkB,CAAG,CACxB,CAHS,CAGPqC,EAHO,CAIb,CAND,IAMO,CACHtC,EAAa,CAACmF,UAAd,CAAyB2Z,GAAzB,CAA6B,CAA7B,EACA7e,EAAkB,CAAG,CACxB,CAGDoK,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCS,SAAtC,CAAkD,OAAlD,CACAV,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCS,SAApC,CAAgD,OAAhD,CACAV,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCS,SAAtC,CAAkD,QAAlD,CACAV,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCsU,QAAtC,IACAvU,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCsU,QAArC,IAEA,GAAIvU,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAAJ,CAA6C,CACzCD,QAAQ,CAACC,cAAT,CAAwB,cAAxB,EAAwCsb,QAAxC,IACAvb,QAAQ,CAACC,cAAT,CAAwB,cAAxB,EAAwCK,KAAxC,CAAgD,EACnD,CAGDtM,EAAG,CAACmO,SAAJ,CAAc,sBAAd,EACK/G,UADL,CACgBnH,EADhB,EACuBsM,KADvB,CAC6BwT,OAD7B,CACuC,MADvC,CAEA/f,EAAG,CAACmO,SAAJ,CAAc,eAAd,EACK/G,UADL,CACgBnH,EADhB,EACuBsM,KADvB,CAC6BwT,OAD7B,CACuC,MADvC,CAGAlU,UAAU,CAAC,UAAW,CAClB7L,EAAG,CAACmO,SAAJ,CAAc,sBAAd,EAAsCC,MAAtC,GACApO,EAAG,CAACmO,SAAJ,CAAc,eAAd,EAA+BC,MAA/B,GACA0R,EAAa,EAChB,CAJS,CAIP7b,EAJO,CAAV,CAOA,IAAK,GAAI8E,CAAAA,CAAT,GAAgBhG,CAAAA,EAAhB,CAAiC,CAC7BA,EAAe,CAACgG,CAAD,CAAf,CAAqByb,EAArB,OACH,CACJ,CAQD,QAASsE,CAAAA,EAAT,CAAoBrC,CAApB,CAA+B,CAG3B,GAA0B,CAAtB,EAAA7kB,EAAJ,CAA6B,CACzB,MACH,CAED,GAAIa,EAAJ,CAAyB,CACrBod,aAAa,CAACpd,EAAD,CAAb,CACAA,EAAmB,OAAnB,CACAgkB,CAAS,CAAC/Z,SAAV,CAAsB,QAAtB,CACA/K,EAAa,CAAC6e,eAAd,CAA8B,UAA9B,CACH,CALD,IAKO,CAEHyI,EAAiB,EACpB,CACJ,CAMD,QAASL,CAAAA,EAAT,EAAuB,CAGnB,GAA0B,CAAtB,EAAAhnB,EAAJ,CAA6B,CACzB,MACH,CAED,GAAI,CAACa,EAAL,CAA0B,CACtBA,EAAmB,CAAGglB,WAAW,CAACwB,EAAD,CAAoB,GAApB,CAAjC,CACA,KAAKvc,SAAL,CAAiB,cAAjB,CACA/K,EAAa,CAACunB,YAAd,CAA2B,UAA3B,IAEH,CALD,IAKO,CAEHrJ,aAAa,CAACpd,EAAD,CAAb,CACAA,EAAmB,OAAnB,CACA,KAAKiK,SAAL,CAAiB,QAAjB,CACA/K,EAAa,CAAC6e,eAAd,CAA8B,UAA9B,CACH,CACJ,CAKD,QAASc,CAAAA,EAAT,EAAyC,IAEjC6H,CAAAA,CAAM,CAAGnd,QAAQ,CAACC,cAAT,CAAwB,2BAAxB,CAFwB,CAIjCmd,CAAO,CAAGpd,QAAQ,CAACG,aAAT,CAAuB,OAAvB,CAJuB,CAKrCid,CAAO,CAACrf,IAAR,CAAe,MAAf,CACAqf,CAAO,CAACphB,EAAR,CAAa,gCAAb,CAEA,GAAItI,EAAQ,CAAC,CAAD,CAAZ,CAAiB,CACb0pB,CAAO,CAAC9c,KAAR,CAAgB5M,EAAQ,CAAC,CAAD,CAC3B,CAFD,IAEO,CACH0pB,CAAO,CAACC,WAAR,CAAsBxpB,EAAW,CAACypB,cACrC,CACDH,CAAM,CAACxc,WAAP,CAAmByc,CAAnB,EAEA,GAAI5B,CAAAA,CAAM,CAAGxb,QAAQ,CAACG,aAAT,CAAuB,QAAvB,CAAb,CACAqb,CAAM,CAAC9a,SAAP,CAAmB7M,EAAW,CAAC0pB,oBAA/B,CACAJ,CAAM,CAACxc,WAAP,CAAmB6a,CAAnB,EAEAA,CAAM,CAAChb,gBAAP,CAAwB,OAAxB,CAAiC,UAAW,CAGxC,GAAIjI,EAAY,EAAIvF,EAApB,CAA4B,CAGxB,GAAqB,EAAjB,EAAAoqB,CAAO,CAAC9c,KAAZ,CAAyB,CAGrB,GAAIjD,CAAAA,CAAI,CAAG,CACP,SAAa5J,EADN,CAEP,UAAauE,EAAU,CAACgc,SAFjB,CAGP,UAAa,CAHN,CAIP,OAAaoJ,CAAO,CAAC9c,KAJd,CAAX,CAOAyH,CAAU,CAAClW,EAAD,CAAiBwL,CAAjB,CAAV,CAGA,GAAIoN,CAAAA,CAAG,CAAGzK,QAAQ,CAACC,cAAT,CAAwB,eAAxB,CAAV,CACA,GAAIwK,CAAJ,CAAS,CAGL,OAFI9L,CAAAA,CAEJ,CAASQ,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGsL,CAAG,CAACQ,OAAJ,CAAYpO,MAAhC,CAAwCsC,CAAC,EAAzC,CAA6C,CACzC,GAAIsL,CAAG,CAACQ,OAAJ,CAAY9L,CAAZ,EAAe0K,QAAnB,CAA6B,CACzBlL,CAAI,CAAG8L,CAAG,CAACQ,OAAJ,CAAY9L,CAAZ,EAAemB,KAAf,CAAqBxB,KAArB,CAA2B,GAA3B,CAAP,CACA,KACH,CACJ,CARI,GASDiW,CAAAA,CAAS,CAAGpW,CAAI,CAAC,CAAD,CATf,CAUDqY,CAAQ,CAAGrY,CAAI,CAAC,CAAD,CAVd,CAWDsW,CAAS,CAAGtW,CAAI,CAAC,CAAD,CAXf,CAcL5K,EAAkB,CAACghB,CAAD,CAAlB,CAA8BiC,CAA9B,EAAwC/B,CAAxC,EAAmDvhB,QAAnD,CAA4D,CAA5D,EAAiE0pB,CAAO,CAAC9c,KAC5E,CACJ,CACJ,CACJ,CAtCD,CAuCH,CAKD,QAAS2c,CAAAA,EAAT,EAA6B,CAGzB,GAAoB,CAAhB,EAAAzmB,EAAJ,CAAuB,CAEnBD,EAAU,GAAV,CACA+e,EAA6B,GAHV,GAMfkI,CAAAA,CAAE,CAAGxd,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CANU,CAOfoS,CAAC,CAAGhO,QAAQ,CAACmZ,CAAE,CAACld,KAAJ,CAPG,CAUnB,GAAIrB,KAAK,CAACoT,CAAD,CAAL,EAAgB,CAAJ,CAAAA,CAAhB,CAAuB,CACnBA,CAAC,CAAG,CACP,CACD,GAAI/U,CAAAA,CAAE,CAAG,EAAT,CACA,IAAK,GAAIP,CAAAA,CAAT,GAAgBjG,CAAAA,EAAhB,CAA+B,CAC3BwG,CAAE,CAACxG,EAAa,CAACiG,CAAD,CAAb,CAAmBiH,CAAnB,CAAuB,GAAvB,CAA6BlN,EAAa,CAACiG,CAAD,CAAb,CAAmB+G,CAAjD,CAAF,CAAwD,CAC3D,CACD,MAAOuO,CAAC,CAAG3T,MAAM,CAACC,IAAP,CAAYrB,CAAZ,EAAgBT,MAA3B,CAAmC,CAC/BwV,CAAC,EACJ,CACDmL,CAAE,CAACld,KAAH,CAAW+R,CAAX,CACAmL,CAAE,CAACjC,QAAH,IAGAvkB,EAAS,CAAG,EAAZ,CACAC,EAAY,CAAG,IAAf,CAGA,GAAIkI,CAAAA,CAAJ,CACIqZ,CADJ,CAEA,IAAKrZ,CAAC,CAAG,CAAJ,CAAOqZ,CAAE,CAAG,CAAjB,CAAoBrZ,CAAC,CAAGkT,CAAxB,CAA2BlT,CAAC,EAA5B,CAAgC,CAE5B,GAAIqZ,CAAE,CAAGniB,EAAe,CAACwG,MAAzB,CAAiC,CAC7B7F,EAAS,CAACmI,CAAD,CAAT,CAAese,EAAiB,CAAC,IAAD,CAAOpnB,EAAe,CAACmiB,CAAE,EAAH,CAAtB,CACnC,CAFD,IAEO,CACH,GAAI9b,CAAAA,CAAJ,CACA,MAAO,CAACA,CAAR,CAAW,CACPA,CAAC,CAAGxG,EAAO,CAAC0F,IAAI,CAACe,KAAL,CAAWxI,EAAI,CAACyI,MAAL,GAAgB1G,EAAO,CAAC2G,MAAnC,CAAD,CAAX,CACAH,CAAC,CAAGrG,EAAe,CAAC2jB,QAAhB,CAAyBtd,CAAzB,SAA0CA,CACjD,CACD1F,EAAS,CAACmI,CAAD,CAAT,CAAese,EAAiB,CAAC,IAAD,CAAO/gB,CAAP,CACnC,CACJ,CACDwf,EAAuB,GAEvBlc,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCS,SAAtC,CAAkD7M,EAAW,CAAC6pB,aAA9D,CACA1d,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCS,SAApC,CAAgD7M,EAAW,CAAC4oB,OAA5D,CACAzc,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCM,KAAtC,CAA4C8M,KAA5C,CAAoD,OAApD,CAGA,GAAIsQ,CAAAA,CAAc,CAAGtB,EAAoB,CAAC7lB,EAAD,CAAzC,CAGAwB,EAAU,CAAC+e,SAAX,CAAuBvgB,EAAvB,CACAonB,EAAoB,CAACD,CAAD,CACvB,CAvDD,IAuDO,CAEHE,EAAS,CAACrnB,EAAD,CAAT,CACA2lB,EAA+B,CAAClkB,EAAD,CAClC,CAEDzB,EAAY,GAGZ,GAAIwJ,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCS,SAAtC,EAAmD7M,EAAW,CAAC+kB,WAAnE,CAAgF,CAE5E/E,aAAa,CAACpd,EAAD,CAAb,CACAA,EAAmB,OAAnB,CACAd,EAAa,CAAC6e,eAAd,CAA8B,UAA9B,EACAxU,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCS,SAAtC,CAAkD,QAAlD,CACAV,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCsU,QAAtC,IACAvU,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCsU,QAArC,GACH,CACJ,CASD,QAASkJ,CAAAA,EAAT,CAA2BK,CAA3B,CAAgCC,CAAhC,CAAqC,IAI7BC,CAAAA,CAAE,CAAG3pB,EAAK,IAJmB,CAK7B4pB,CAAE,IAL2B,CAM7BC,CAAE,CAAG5pB,EAAM,IANkB,CAO7B6pB,CAAE,IAP2B,CAQ7BC,CAR6B,CAS7BC,CAT6B,CAU7BrW,CAV6B,CAW7BlD,CAX6B,CAY7BtD,CAAC,CAAG,CAZyB,CAejC,GAAIsc,CAAJ,CAAS,CAGL,MAAW,GAAJ,CAAAtc,CAAP,CAAgB,CACZ4c,CAAE,CAAGxiB,IAAI,CAACe,KAAL,CAAWf,IAAI,CAACgB,MAAL,IAAiBohB,CAAE,CAAGC,CAAtB,EAA4BA,CAAvC,CAAL,CACAI,CAAE,CAAGziB,IAAI,CAACe,KAAL,CAAWf,IAAI,CAACgB,MAAL,IAAiBshB,CAAE,CAAGC,CAAtB,EAA4BA,CAAvC,CAAL,CACAnW,CAAE,CAAGoW,CAAE,CAAGN,CAAG,CAAC9Z,CAAd,CACAc,CAAE,CAAGuZ,CAAE,CAAGP,CAAG,CAACha,CAAd,CACAtC,CAAC,CAAG5F,IAAI,CAACyM,IAAL,CAAUL,CAAE,CAAGA,CAAL,CAAUlD,CAAE,CAAGA,CAAzB,CACP,CACJ,CAVD,IAUO,CAEHsZ,CAAE,CAAGxiB,IAAI,CAACe,KAAL,CAAWf,IAAI,CAACgB,MAAL,IAAiBohB,CAAE,CAAGC,CAAtB,EAA4BA,CAAvC,CAAL,CACAI,CAAE,CAAGziB,IAAI,CAACe,KAAL,CAAWf,IAAI,CAACgB,MAAL,IAAiBshB,CAAE,CAAGC,CAAtB,EAA4BA,CAAvC,CACR,CAED,MAAO,CAACna,CAAC,CAAEoa,CAAJ,CAAQta,CAAC,CAAEua,CAAX,CAAergB,MAAM,CAAE+f,CAAvB,CACV,CAKD,QAAS7B,CAAAA,EAAT,EAAmC,CAE/BloB,EAAG,CAACmO,SAAJ,CAAc,sBAAd,EAAsCC,MAAtC,GACA,GACIjD,CAAAA,CADJ,CAEI6E,CAFJ,CAGIF,CAHJ,CAKA,IAAK3E,CAAC,CAAG,CAAT,CAAYA,CAAC,CAAGnI,EAAS,CAAC6F,MAA1B,CAAkCsC,CAAC,EAAnC,CAAuC,CAEnC6E,CAAC,CAAGhN,EAAS,CAACmI,CAAD,CAAT,CAAa6E,CAAjB,CACAF,CAAC,CAAG9M,EAAS,CAACmI,CAAD,CAAT,CAAa2E,CAAjB,CAEA1P,EAAK,CAACiN,MAAN,CAAa,MAAb,EACKC,IADL,CACU,OADV,CACmB,qBADnB,EAEKA,IAFL,CAEU,IAFV,CAEgB,YAAcnC,CAF9B,EAGKmC,IAHL,CAGU,IAHV,CAGgB0C,CAAC,GAHjB,EAIK1C,IAJL,CAIU,IAJV,CAIgBwC,CAAC,GAJjB,EAKKxC,IALL,CAKU,IALV,CAKgB0C,CAAC,GALjB,EAMK1C,IANL,CAMU,IANV,CAMgBwC,CAAC,GANjB,EAOKvD,KAPL,CAOW,QAPX,CAOqBvJ,EAAS,CAACmI,CAAD,CAAT,CAAanB,MAPlC,EAQKuC,KARL,CAQW,cARX,CAQ2B,KAR3B,EASK2B,EATL,CASQ,OATR,CASiBwX,EATjB,EAUKxX,EAVL,CAUQ,qBAVR,CAU+B6T,EAAa,CAACtP,IAAd,CAAmB,IAAnB,CAAmC,CAAC,CAAX,EAACtH,CAAC,CAAG,CAAL,CAAzB,CAAuCA,CAAvC,IAV/B,EAWK+C,EAXL,CAWQ,WAXR,CAWqBsE,EAAmB,CAACC,IAApB,CAAyB,IAAzB,CAA+BtH,CAA/B,IAXrB,EAaA/K,EAAK,CAACiN,MAAN,CAAa,MAAb,EACKC,IADL,CACU,OADV,CACmB,qBADnB,EAEKA,IAFL,CAEU,IAFV,CAEgB,YAAcnC,CAF9B,EAGKmC,IAHL,CAGU,IAHV,CAGgB0C,CAAC,GAHjB,EAIK1C,IAJL,CAIU,IAJV,CAIgBwC,CAAC,GAJjB,EAKKxC,IALL,CAKU,IALV,CAKgB0C,CAAC,GALjB,EAMK1C,IANL,CAMU,IANV,CAMgBwC,CAAC,GANjB,EAOKvD,KAPL,CAOW,QAPX,CAOqBvJ,EAAS,CAACmI,CAAD,CAAT,CAAanB,MAPlC,EAQKuC,KARL,CAQW,cARX,CAQ2B,KAR3B,EASK2B,EATL,CASQ,OATR,CASiBwX,EATjB,EAUKxX,EAVL,CAUQ,qBAVR,CAU+B6T,EAAa,CAACtP,IAAd,CAAmB,IAAnB,CAAmC,CAAC,CAAX,EAACtH,CAAC,CAAG,CAAL,CAAzB,CAAuCA,CAAvC,IAV/B,EAWK+C,EAXL,CAWQ,WAXR,CAWqBsE,EAAmB,CAACC,IAApB,CAAyB,IAAzB,CAA+BtH,CAA/B,IAXrB,CAYH,CACJ,CAUD,QAASmf,CAAAA,EAAT,CAAwBC,CAAxB,CAAqCtO,CAArC,CAA+CuO,CAA/C,CAA4D,CAGxD,GAAIllB,CAAAA,CAAK,CAAG,EAAZ,CACI8X,CADJ,CAEIqN,CAFJ,CAGIC,CAHJ,CAII7a,CAJJ,CAKI7H,CALJ,CAMImD,CANJ,CAQA,IAAKiS,CAAL,GAAgBmN,CAAAA,CAAhB,CAA6B,CACzB,IAAKpf,CAAC,CAAGjK,EAAY,CAAC,CAAD,CAArB,CAA0BiK,CAAC,CAAGpK,EAAS,CAACkI,KAAV,CAAgBmU,CAAhB,EAAyBvU,MAA7B,EAAuCsC,CAAC,EAAIjK,EAAY,CAAC,CAAD,CAAlF,CAAuFiK,CAAC,EAAxF,CAA4F,CAGxFsf,CAAI,CAAG1pB,EAAS,CAACkI,KAAV,CAAgBmU,CAAhB,EAAyBjS,CAAzB,CAAP,CAEA,GAA0B,QAAtB,QAAOsf,CAAAA,CAAI,CAACtgB,MAAhB,CAAoC,CAChCugB,CAAC,CAAGra,QAAQ,CAACoa,CAAI,CAACtgB,MAAN,CAAZ,CACA0F,CAAC,CAAGQ,QAAQ,CAACoa,CAAI,CAACrgB,MAAN,CACf,CAHD,IAGO,CACHsgB,CAAC,CAAGD,CAAI,CAACtgB,MAAL,CAAYnC,EAAhB,CACA6H,CAAC,CAAG4a,CAAI,CAACrgB,MAAL,CAAYpC,EACnB,CAGD,GAAIiU,CAAQ,CAACyO,CAAD,CAAR,EAAezO,CAAQ,CAACpM,CAAD,CAA3B,CAAgC,CAC5B,QACH,CAED7H,CAAE,CAAG0iB,CAAC,CAAG,GAAJ,CAAU7a,CAAf,CACA,GAAI6a,CAAC,CAAG7a,CAAR,CAAW,CACP7H,CAAE,CAAG6H,CAAC,CAAG,GAAJ,CAAU6a,CAClB,CAGD,GAAI,CAACplB,CAAK,CAAC0C,CAAD,CAAV,CAAgB,CACZ1C,CAAK,CAAC0C,CAAD,CAAL,CAAY,EAAZ,CACA1C,CAAK,CAAC0C,CAAD,CAAL,CAAUoV,CAAV,EAAqB,CACxB,CAHD,IAGO,IAAI,CAAC9X,CAAK,CAAC0C,CAAD,CAAL,CAAUoV,CAAV,CAAL,CAAyB,CAC5B9X,CAAK,CAAC0C,CAAD,CAAL,CAAUoV,CAAV,EAAqB,CACxB,CAFM,IAEA,CACH9X,CAAK,CAAC0C,CAAD,CAAL,CAAUoV,CAAV,GACH,CACJ,CACJ,CAGD,GAAIuN,CAAAA,CAAM,CAAG,EAAb,CACIC,CADJ,CAEI7hB,CAFJ,CAIA,IAAK6hB,CAAL,GAAYtlB,CAAAA,CAAZ,CAAmB,CAEf,GAAIoF,MAAM,CAACC,IAAP,CAAYrF,CAAK,CAACslB,CAAD,CAAjB,EAAwB/hB,MAAxB,EAAkC2hB,CAAtC,CAAmD,CAG/C,GAAI3iB,CAAAA,CAAG,CAAGgjB,MAAM,CAACC,gBAAjB,CAEA,IAAK/hB,CAAL,GAAYzD,CAAAA,CAAK,CAACslB,CAAD,CAAjB,CAAwB,CACpB,GAAI/iB,CAAG,CAAGvC,CAAK,CAACslB,CAAD,CAAL,CAAW7hB,CAAX,CAAV,CAA2B,CACvBlB,CAAG,CAAGvC,CAAK,CAACslB,CAAD,CAAL,CAAW7hB,CAAX,CACT,CACJ,CAGD,GAAI+B,CAAAA,CAAK,CAAG8f,CAAG,CAAC9f,KAAJ,CAAU,GAAV,CAAZ,CAEA6f,CAAM,CAACA,CAAM,CAAC9hB,MAAR,CAAN,CAAwB,CACpBsB,MAAM,CAAEW,CAAK,CAAC,CAAD,CADO,CAEpBV,MAAM,CAAEU,CAAK,CAAC,CAAD,CAFO,CAGpBT,MAAM,CAAExC,CAHY,CAIpBmC,MAAM,CAAE,OAJY,CAM3B,CACJ,CAED,IAAKmB,CAAC,CAAG,CAAT,CAAYA,CAAC,CAAGpK,EAAS,CAACuE,KAAV,CAAgBuD,MAAhC,CAAwCsC,CAAC,EAAzC,CAA6C,CACzCwf,CAAM,CAACA,CAAM,CAAC9hB,MAAR,CAAN,CAAwB9H,EAAS,CAACuE,KAAV,CAAgB6F,CAAhB,CAC3B,CAED,MAAOwf,CAAAA,CACV,CAYD,QAASnY,CAAAA,EAAT,CAA6BsL,CAA7B,CAAgCiN,CAAhC,CAAkD,CAE9CtqB,EAAU,CAAC2N,MAAX,GAGAlL,EAAe,GAAf,CACAC,EAAW,GAAX,CAEAC,EAAe,GAAf,CAGAhD,EAAK,CAAC8N,EAAN,CAAS,OAAT,CAAkB8c,EAAlB,EAGA,GAAIT,CAAAA,CAAW,CAAG,EAAlB,CACIxhB,CADJ,CAEA,GAAIgiB,CAAJ,CAAsB,CAClB,GAAI9I,CAAAA,CAAW,CAAGC,EAAmB,EAArC,CAEA,IAAKnZ,CAAL,GAAY5E,CAAAA,EAAc,CAAC8d,CAAD,CAA1B,CAAyC,CACrC,GAAI9d,EAAc,CAAC8d,CAAD,CAAd,CAA4BlZ,CAA5B,GAAoC+U,CAAxC,CAA2C,CACvCyM,CAAW,CAACxhB,CAAD,CAAX,CAAmBA,CACtB,CACJ,CACJ,CARD,IAQO,CACH,IAAKA,CAAL,GAAYhG,CAAAA,EAAZ,CAA6B,CACzB,GAAIA,EAAe,CAACgG,CAAD,CAAf,CAAqByb,EAArB,EAA2B1G,CAA/B,CAAkC,CAC9ByM,CAAW,CAACxhB,CAAD,CAAX,CAAmBA,CACtB,CACJ,CACJ,CA9B6C,GA+B1CyhB,CAAAA,CAAW,CAAG9f,MAAM,CAACC,IAAP,CAAY4f,CAAZ,EAAyB1hB,MA/BG,CAkC1CoT,CAAQ,CAAG,EAlC+B,CAmC1C9Q,CAnC0C,CAoC9C,IAAKA,CAAC,CAAG,CAAT,CAAYA,CAAC,CAAGpK,EAAS,CAACiI,KAAV,CAAgBH,MAAhC,CAAwCsC,CAAC,EAAzC,CAA6C,CACzC,GAAI,CAACpK,EAAS,CAACiI,KAAV,CAAgBmC,CAAhB,EAAmBzB,OAAxB,CAAiC,CAC7BuS,CAAQ,CAAClb,EAAS,CAACiI,KAAV,CAAgBmC,CAAhB,EAAmBnD,EAApB,CAAR,CAAkC,CACrC,CACJ,CAED,GAAI2iB,CAAAA,CAAM,CAAGL,EAAc,CAACC,CAAD,CAActO,CAAd,CAAwBuO,CAAxB,CAA3B,CAGAhqB,EAAU,CACL+L,KADL,CACW,SADX,CACsB,OADtB,EAEKA,KAFL,CAEW,SAFX,CAEsB,CAFtB,EAGK2B,EAHL,CAGQ,WAHR,CAGqBG,CAHrB,EAIKH,EAJL,CAIQ,UAJR,CAIoBI,CAJpB,EAMA/N,EAAU,CAACuL,KAAX,CAAiB,MAAjB,EAAyBxG,KAAzB,CAA+BqlB,CAA/B,EACA1c,CAAS,CAAC0c,CAAD,CAAT,CAEAlqB,EAAU,CACLyN,EADL,CACQ,WADR,CACqBqE,EADrB,EAEKrE,EAFL,CAEQ,UAFR,CAEoBI,CAFpB,EAIA/N,EAAU,CAAC4Z,OAAX,GACAtO,UAAU,CAAC,UAAW,CAClBtL,EAAU,CAACmO,IAAX,GACAjO,EAAU,CAACwqB,KAAX,GACAjrB,EAAG,CAACmO,SAAJ,CAAc,eAAd,EAA+B8c,KAA/B,EACH,CAJS,CAIP,EAJO,CAKb,CAMD,QAASD,CAAAA,EAAT,EAAuB,CAEnB9nB,EAAe,GAAf,CACAC,EAAW,GAAX,CACAC,EAAe,GAAf,CAEA3C,EAAU,CAAC2N,MAAX,GAEA5N,EAAU,CACL+L,KADL,CACW,SADX,CACsB,MADtB,EAEK2B,EAFL,CAEQ,WAFR,CAEqB,IAFrB,EAGKA,EAHL,CAGQ,UAHR,CAGoB,IAHpB,EAKA9N,EAAK,CAAC8N,EAAN,CAAS,OAAT,CAAkB,IAAlB,CACH,CAOD,QAASqE,CAAAA,EAAT,CAAuBkY,CAAvB,CAA6B,CAGzB,GAAmB,OAAf,EAAAA,CAAI,CAACzgB,MAAT,CAA4B,CACxB,MACH,CAEDvJ,EAAU,CAACyN,EAAX,CAAc,WAAd,CAA2B,IAA3B,EAEA1N,EAAU,CACL0N,EADL,CACQ,WADR,CACqB,IADrB,EAEKA,EAFL,CAEQ,UAFR,CAEoB,IAFpB,EAIAlO,EAAG,CAACmO,SAAJ,CAAc,sBAAd,EACKD,EADL,CACQ,WADR,CACqB,IADrB,EAIAG,CAAS,CAACoc,CAAI,CAACtgB,MAAN,CAAT,CACA9G,EAAW,GAAX,CACAgL,CAAS,CAACoc,CAAI,CAACrgB,MAAN,IAAT,CACA/G,EAAW,GACd,CAOD,QAASwmB,CAAAA,EAAT,CAAmBvH,CAAnB,CAAyB,CAGrB,GAAItW,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCS,SAAtC,EAAmD7M,EAAW,CAAC+kB,WAAnE,CAAgF,CAC5E,MACH,CAFD,IAEO,IAA2C,CAAvC,EAAAla,MAAM,CAACC,IAAP,CAAY5H,EAAZ,EAA6B8F,MAAjC,CAA8C,CAEjDmD,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCS,SAAtC,CAAkD7M,EAAW,CAAC+kB,WAA9D,CACA,MACH,CAED,GAAIlC,CAAAA,CAAG,CAAG7iB,EAAW,CAACkjB,SAAZ,CAAwB,IAAxB,CAA+BT,CAAzC,CACIvZ,CADJ,CAEIoC,CAFJ,CAGI6I,CAHJ,CAIIlD,CAJJ,CAOA,IAAK/H,CAAL,GAAYhG,CAAAA,EAAZ,CAA6B,CACzBA,EAAe,CAACgG,CAAD,CAAf,CAAqByb,EAArB,CAA0BnC,EAAa,CAACtf,EAAe,CAACgG,CAAD,CAAhB,CAC1C,CAGD,GAAImiB,CAAAA,CAAY,CAAG,EAAnB,CAEA,IAAK/f,CAAC,CAAG,CAAT,CAAYA,CAAC,CAAGnI,EAAS,CAAC6F,MAA1B,CAAkCsC,CAAC,EAAnC,CAAuC,CACnC+f,CAAY,CAAC/f,CAAD,CAAZ,CAAkBggB,EAAc,CAAChgB,CAAD,CACnC,CAGDlI,EAAY,CAAGD,EAAf,CACAA,EAAS,CAAGkoB,CAAZ,CAGA,GAAIE,CAAAA,CAAS,GAAb,CACA,GAAInoB,EAAJ,CAAkB,CAGd,GAAIooB,CAAAA,CAAK,CAAG,CAAZ,CAEA,IAAKlgB,CAAC,CAAG,CAAT,CAAYA,CAAC,CAAGnI,EAAS,CAAC6F,MAA1B,CAAkCsC,CAAC,EAAnC,CAAuC,CAEnC6I,CAAE,CAAG/Q,EAAY,CAACkI,CAAD,CAAZ,CAAgB6E,CAAhB,CAAoBhN,EAAS,CAACmI,CAAD,CAAT,CAAa6E,CAAtC,CACAc,CAAE,CAAG7N,EAAY,CAACkI,CAAD,CAAZ,CAAgB2E,CAAhB,CAAoB9M,EAAS,CAACmI,CAAD,CAAT,CAAa2E,CAAtC,CACAub,CAAK,EAAIzjB,IAAI,CAACyM,IAAL,CAAUL,CAAE,CAAGA,CAAL,CAAUlD,CAAE,CAAGA,CAAzB,CACZ,CAGD,GAAIua,CAAK,EAAI5nB,EAAb,CAAkC,CAC9Bif,CAAG,CAAG7iB,EAAW,CAAC+kB,WAAlB,CACA5Y,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCM,KAAtC,CAA4C8M,KAA5C,CAAoD,OAApD,CACA+R,CAAS,GACZ,CACJ,CAGDpf,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCS,SAAtC,CAAkDgW,CAAlD,CACA1W,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCS,SAApC,CACW,CAAP,CAAA4V,CAAI,EAAQ,CAAC8I,CAAb,CAAyBvrB,EAAW,CAAC2oB,MAArC,CAA8C3oB,EAAW,CAAC4oB,OAD9D,CAIA,GAAIkB,CAAAA,CAAc,CAAGtB,EAAoB,CAAC/F,CAAD,CAAzC,CAGAte,EAAU,CAAC+e,SAAX,CAAuBqI,CAAS,CAAG,CAAC,CAAJ,CAAQ9I,CAAxC,CACAsH,EAAoB,CAACD,CAAD,CACvB,CAQD,QAASwB,CAAAA,EAAT,CAAwBrN,CAAxB,CAA2B,CAEvB,GAAIwN,CAAAA,CAAG,CAAG,EAAV,CACIhiB,CAAE,CAAG,EADT,CAEIP,CAFJ,CAKA,IAAKA,CAAL,GAAYhG,CAAAA,EAAZ,CAA6B,CAEzB,GAAIA,EAAe,CAACgG,CAAD,CAAf,CAAqByb,EAArB,EAA2B1G,CAA/B,CAAkC,CAE9BwN,CAAG,CAACA,CAAG,CAACziB,MAAL,CAAH,CAAkB,CAAC9F,EAAe,CAACgG,CAAD,CAAf,CAAqBiH,CAAtB,CAAyBjN,EAAe,CAACgG,CAAD,CAAf,CAAqB+G,CAA9C,CAAlB,CAEAxG,CAAE,CAACvG,EAAe,CAACgG,CAAD,CAAf,CAAqBiH,CAArB,CAAyB,GAAzB,CAA+BjN,EAAe,CAACgG,CAAD,CAAf,CAAqB+G,CAArD,CAAF,CAA4D,CACxDE,CAAC,CAAEjN,EAAe,CAACgG,CAAD,CAAf,CAAqBiH,CADgC,CAExDF,CAAC,CAAE/M,EAAe,CAACgG,CAAD,CAAf,CAAqB+G,CAFgC,CAGxD9F,MAAM,CAAEhH,EAAS,CAAC8a,CAAD,CAAT,CAAa9T,MAHmC,CAK/D,CACJ,CAGD5J,EAAK,CAAC+N,SAAN,CAAgB,SAAW2P,CAA3B,EAA8B1P,MAA9B,GACA6O,EAAe,CAAC3T,CAAD,CAAKwU,CAAL,OAAf,CACA1d,EAAK,CAAC+N,SAAN,CAAgB,WAAhB,EAA6BgC,KAA7B,GACA/P,EAAK,CAAC+N,SAAN,CAAgB,sBAAhB,EAAwCgC,KAAxC,GAMA,GAAIob,CAAAA,CAAE,CAAG7gB,MAAM,CAACC,IAAP,CAAYrB,CAAZ,CAAT,CAGA,GAAiB,CAAb,EAAAiiB,CAAE,CAAC1iB,MAAP,CAAoB,CAChB,MAAO4gB,CAAAA,EAAiB,CAACzmB,EAAS,CAAC8a,CAAD,CAAV,CAAe9a,EAAS,CAAC8a,CAAD,CAAT,CAAa9T,MAA5B,CAC3B,CAFD,IAEO,CACH,GAAI8f,CAAAA,CAAG,CAAG3E,EAAqB,CAACmG,CAAD,CAA/B,CACAxB,CAAG,CAAC9f,MAAJ,CAAahH,EAAS,CAAC8a,CAAD,CAAT,CAAa9T,MAA1B,CACA,MAAO8f,CAAAA,CACV,CACJ,CASD,QAAS3E,CAAAA,EAAT,CAA+BmG,CAA/B,CAAoC,CAEhC,GAAkB,CAAd,EAAAA,CAAG,CAACziB,MAAR,CAAqB,CACjB,MAAO,KACV,CACD,GAAI0U,CAAAA,CAAE,CAAG,CAAT,CACIC,CAAE,CAAG,CADT,CAEIrS,CAFJ,CAKA,IAAKA,CAAC,CAAG,CAAT,CAAYA,CAAC,CAAGmgB,CAAG,CAACziB,MAApB,CAA4BsC,CAAC,EAA7B,CAAiC,CAC7BoS,CAAE,EAAI+N,CAAG,CAACngB,CAAD,CAAH,CAAO,CAAP,CAAN,CACAqS,CAAE,EAAI8N,CAAG,CAACngB,CAAD,CAAH,CAAO,CAAP,CACT,CAGD,MAAO,CAAC6E,CAAC,CAAEuN,CAAE,CAAG+N,CAAG,CAACziB,MAAb,CAAqBiH,CAAC,CAAE0N,CAAE,CAAG8N,CAAG,CAACziB,MAAjC,CACV,CAQD,QAASwf,CAAAA,EAAT,CAA8B/F,CAA9B,CAAoC,CAGhC,GAAIa,CAAAA,CAAG,CAAGtjB,EAAW,CAAC2rB,WAAZ,CAA0B,IAA1B,CAAiC9gB,MAAM,CAACC,IAAP,CAAY5H,EAAZ,EAA6B8F,MAA9D,CAAuE,MAAvE,CACNhJ,EAAW,CAAC4rB,aADN,CACsB,IADtB,CAC6BzoB,EAAS,CAAC6F,MADvC,CACgD,MADhD,CAENhJ,EAAW,CAACkjB,SAFN,CAEkB,IAFlB,CAEyBT,CAFzB,CAEgC,MAF1C,CAIA,GAAItW,QAAQ,CAACC,cAAT,CAAwB,YAAxB,GACAD,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCS,SAAtC,EAAmD7M,EAAW,CAAC+kB,WADnE,CACgF,CAE5EzB,CAAG,EAAI,+BAA+BtjB,EAAW,CAAC+kB,WAA3C,CAAyD,aACnE,CAGD,GAAI8G,CAAAA,CAAU,CAAG,EAAjB,CACIvgB,CADJ,CAEI6I,CAFJ,CAGIlD,CAHJ,CAIItD,CAJJ,CAKIzE,CALJ,CAMIL,CANJ,CAQA,IAAKyC,CAAC,CAAG,CAAT,CAAYA,CAAC,CAAGnI,EAAS,CAAC6F,MAA1B,CAAkCsC,CAAC,EAAnC,CAAuC,CAEnC6I,CAAE,CAAGhR,EAAS,CAACmI,CAAD,CAAT,CAAa6E,CAAb,CAAiB3P,EAAK,CAAG,CAA9B,CACAyQ,CAAE,CAAG9N,EAAS,CAACmI,CAAD,CAAT,CAAa2E,CAAb,CAAiBxP,EAAM,CAAG,CAA/B,CACAkN,CAAC,CAAG5F,IAAI,CAACyM,IAAL,CAAUL,CAAE,CAAGA,CAAL,CAAUlD,CAAE,CAAGA,CAAzB,CAAJ,CACApI,CAAC,CAAG1F,EAAS,CAACmI,CAAD,CAAT,CAAanB,MAAjB,CAGAmZ,CAAG,EAAItjB,EAAW,CAACwjB,aAAZ,CAA4B,uBAA5B,CAAqD3a,CAArD,CAAyD,KAAzD,CACHA,CADG,CACC,WADD,CACed,IAAI,CAAC0b,KAAL,CAAW9V,CAAX,CAAc,CAAd,CADf,CACkC,MADlC,CAC2C3N,EAAW,CAACya,OADvD,CAEH,GAFG,CAEG5R,CAFH,CAEO,GAFP,CAEa7I,EAAW,CAACiF,OAFzB,MAAP,CAIA4mB,CAAU,CAACvgB,CAAD,CAAV,CAAgB,EAAhB,CAGA,IAAKpC,CAAL,GAAYhG,CAAAA,EAAZ,CAA6B,CACzB,GAAIA,EAAe,CAACgG,CAAD,CAAf,CAAqByb,EAArB,EAA2BrZ,CAA/B,CAAkC,CAC9BgY,CAAG,EAAIpa,CAAG,CAAG,IAAb,CACA2iB,CAAU,CAACvgB,CAAD,CAAV,CAAcugB,CAAU,CAACvgB,CAAD,CAAV,CAActC,MAA5B,EAAsCE,CACzC,CACJ,CAED,GAAwC,CAAC,CAArC,EAAAoa,CAAG,CAACI,OAAJ,CAAY,GAAZ,CAAiBJ,CAAG,CAACta,MAAJ,CAAa,CAA9B,CAAJ,CAA4C,CACxCsa,CAAG,CAAGA,CAAG,CAACK,KAAJ,CAAU,CAAV,CAAa,CAAC,CAAd,CACT,CACDL,CAAG,EAAI,OACV,CACDA,CAAG,EAAI,MAAP,CAGArhB,EAAQ,CAAC4K,SAAT,CAAqByW,CAAG,CAAGrhB,EAAQ,CAAC4K,SAApC,CAEA,MAAOgf,CAAAA,CACV,CAOD,QAAS9B,CAAAA,EAAT,CAA8B9kB,CAA9B,CAAuC,CAEnC,GAAI4d,CAAAA,CAAG,CAAG,CAACC,aAAa,CAAE,EAAhB,CAAV,CACIxX,CADJ,CAEI+P,CAFJ,CAGIyQ,CAHJ,CAIA,IAAKxgB,CAAC,CAAG,CAAT,CAAYA,CAAC,CAAGrG,CAAO,CAAC+D,MAAxB,CAAgCsC,CAAC,EAAjC,CAAqC,CAGjCuX,CAAG,CAACC,aAAJ,CAAkBxX,CAAlB,EAAuB0X,EAAY,CAAC7f,EAAS,CAACmI,CAAD,CAAV,CAAnC,CACAuX,CAAG,CAACC,aAAJ,CAAkBxX,CAAlB,EAAqB2X,GAArB,CAA2B3X,CAA3B,CAGA,IAAK+P,CAAC,CAAG,CAAT,CAAYA,CAAC,CAAGpW,CAAO,CAACqG,CAAD,CAAP,CAAWtC,MAA3B,CAAmCqS,CAAC,EAApC,CAAwC,CACpCyQ,CAAG,CAAG9I,EAAY,CAAC9f,EAAe,CAAC+B,CAAO,CAACqG,CAAD,CAAP,CAAW+P,CAAX,CAAD,CAAhB,CAAlB,CACApW,CAAO,CAACqG,CAAD,CAAP,CAAW+P,CAAX,EAAgB,CACZlT,EAAE,CAAGrI,EAAW,CAACmF,CAAO,CAACqG,CAAD,CAAP,CAAW+P,CAAX,CAAD,CADJ,CAEZ4H,GAAG,CAAE3X,CAFO,CAGZ6E,CAAC,CAAI2b,CAAG,CAAC3b,CAHG,CAIZF,CAAC,CAAI6b,CAAG,CAAC7b,CAJG,CAMnB,CACJ,CAED4S,CAAG,CAAC5d,OAAJ,CAAcA,CAAd,CACA4d,CAAG,CAACK,SAAJ,CAAgB/e,EAAU,CAAC+e,SAA3B,CACAL,CAAG,CAAC1C,SAAJ,CAAgBhc,EAAU,CAACgc,SAA3B,CACA0C,CAAG,CAACM,QAAJ,CAAevjB,EAAf,CACAijB,CAAG,CAACkJ,YAAJ,CAAmBlnB,EAAqB,CAAG,CAAH,CAAO,CAA/C,CAGA,GAAI,CAAoB,CAAnB,EAAAxD,EAAY,CAAC,CAAD,CAAZ,EAAwBA,EAAY,CAAC,CAAD,CAAZ,EAAmBH,EAAS,CAACmI,UAAtD,GACoB,CAAhB,CAAAwZ,CAAG,CAACK,SADZ,CAC2B,CACvBL,CAAG,CAACK,SAAJ,CAAgBvgB,EACnB,CAEDuR,CAAU,CAACnW,EAAD,CAAiB8kB,CAAjB,CACb,CAUD,QAASG,CAAAA,EAAT,CAAsBD,CAAtB,CAAgC,IAGxBiJ,CAAAA,CAAI,CAAI,CAACjJ,CAAQ,CAAC5S,CAAT,CAAa3P,EAAK,CAAG,CAAtB,EAA2B2D,EAAU,CAACyB,KAAvC,CAAgDzB,EAAU,CAACmiB,MAAX,CAAkBnW,CAHjD,CAIxB8b,CAAI,CAAI,CAAClJ,CAAQ,CAAC9S,CAAT,CAAaxP,EAAM,CAAG,CAAvB,EAA4B0D,EAAU,CAACyB,KAAxC,CAAiDzB,EAAU,CAACmiB,MAAX,CAAkBrW,CAJlD,CAS5B+b,CAAI,CAAG,CAACA,CAAI,CAAG7nB,EAAU,CAAC6O,SAAnB,EAAgC7O,EAAU,CAACiP,QAAlD,CACA6Y,CAAI,CAAG,CAACA,CAAI,CAAG9nB,EAAU,CAAC8O,SAAnB,EAAgC9O,EAAU,CAACiP,QAAlD,CAEA,MAAO,CAACjD,CAAC,CAAE6b,CAAJ,CAAU/b,CAAC,CAAEgc,CAAb,CACV,CAOD,QAAS3D,CAAAA,EAAT,CAAyCtY,CAAzC,CAA4C,CAExC,GACI1E,CAAAA,CADJ,CAEI6E,CAFJ,CAGIF,CAHJ,CAIA,IAAK3E,CAAC,CAAG,CAAT,CAAYA,CAAC,CAAGnI,EAAS,CAAC6F,MAA1B,CAAkCsC,CAAC,EAAnC,CAAuC,CAEnC6E,CAAC,CAAGhN,EAAS,CAACmI,CAAD,CAAT,CAAa6E,CAAjB,CACAF,CAAC,CAAG9M,EAAS,CAACmI,CAAD,CAAT,CAAa2E,CAAjB,CAEA9P,EAAG,CAACoN,MAAJ,CAAW,aAAejC,CAA1B,EAA6B/D,UAA7B,GAA0CC,QAA1C,CAAmDwI,CAAnD,EACKvC,IADL,CACU,IADV,CACgB0C,CAAC,GADjB,EAEK1C,IAFL,CAEU,IAFV,CAEgBwC,CAAC,GAFjB,EAGKxC,IAHL,CAGU,IAHV,CAGgB0C,CAAC,GAHjB,EAIK1C,IAJL,CAIU,IAJV,CAIgBwC,CAAC,GAJjB,EAMA9P,EAAG,CAACoN,MAAJ,CAAW,aAAejC,CAA1B,EAA6B/D,UAA7B,GAA0CC,QAA1C,CAAmDwI,CAAnD,EACKvC,IADL,CACU,IADV,CACgB0C,CAAC,GADjB,EAEK1C,IAFL,CAEU,IAFV,CAEgBwC,CAAC,GAFjB,EAGKxC,IAHL,CAGU,IAHV,CAGgB0C,CAAC,GAHjB,EAIK1C,IAJL,CAIU,IAJV,CAIgBwC,CAAC,GAJjB,CAKH,CACJ,CAQD,QAASuQ,CAAAA,EAAT,CAA2BJ,CAA3B,CAA+BmG,CAA/B,CAAwC,CAGpCzkB,EAAa,CAAGqK,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,CAAhB,CACA/L,EAAM,CAACmb,MAAP,CAAc1Z,EAAd,CAA6B,CACzB2Z,KAAK,CAAE,CAAC,CAAD,CADkB,CAEzByQ,OAAO,CAAE,CAFgB,CAGzBxQ,KAAK,CAAE,CACH1T,GAAG,CAAE,CADF,CAEHuE,GAAG,CAAE,CAFF,CAHkB,CAOzBC,IAAI,CAAE,CAPmB,CAQzB2f,WAAW,CAAE,UARY,CASzBC,SAAS,CAAE,KATc,CAUzBxQ,IAAI,CAAE,CACFC,IAAI,CAAE,OADJ,CAEFC,OAAO,GAFL,CAGFC,OAAO,CAAE,GAHP,CAIFzI,MAAM,CAAE,iBAAW,CACf,MAAO,EACV,CANC,CAOF+Y,MAAM,CAAE,CACJC,EAAE,CAAE,YAAS7f,CAAT,CAAgB,CAChB,OAAQA,CAAR,EACI,IAAK,EAAL,CAAQ,MAAOzM,CAAAA,EAAW,CAACusB,aAAnB,CACR,IAAK,EAAL,CAAQ,MAAOvsB,CAAAA,EAAW,CAACwsB,WAAnB,CACR,IAAK,EAAL,CAAQ,MAAOpM,CAAAA,CAAP,CACR,QAAS,MAAO,EAAP,CAJb,CAMH,CARG,CASJqM,IAAI,CAAE,eAAW,CACb,MAAO,EACV,CAXG,CAPN,CAVmB,CAA7B,EAkCA3qB,EAAa,CAACmF,UAAd,CAAyBoH,EAAzB,CAA4B,QAA5B,CAAsCqe,EAAtC,EAGA5qB,EAAa,CAAC4K,KAAd,CAAsB,mBAAtB,CAzCoC,GA2ChCigB,CAAAA,CAAG,CAAGprB,EAAa,CAACyQ,qBAAd,GAAsCvR,MA3CZ,CA4ChCmsB,CAAG,CAAGrG,CAAO,CAACvU,qBAAR,GAAgCvR,MA5CN,CA8CpCqB,EAAa,CAAC4K,KAAd,CAAoBjM,MAApB,CAA8BA,EAAM,CAAGksB,CAAT,CAAeC,CAAf,CAAqB,GAAtB,CAA6B,IAA1D,CAGA,GAAIC,CAAAA,CAAK,CAAG1gB,QAAQ,CAACG,aAAT,CAAuB,OAAvB,CAAZ,CACAugB,CAAK,CAAC3iB,IAAN,CAAa,OAAb,CACA2iB,CAAK,CAACxnB,IAAN,CAAa,eAAb,CACAwnB,CAAK,CAACpgB,KAAN,CAAc,WAAd,CACAogB,CAAK,CAACngB,KAAN,CAAc,kBAAd,CACAmgB,CAAK,CAACtV,OAAN,IACAsV,CAAK,CAAClgB,gBAAN,CAAuB,OAAvB,CAAgCmgB,EAAhC,EAEA,GAAIvT,CAAAA,CAAK,CAAGpN,QAAQ,CAACG,aAAT,CAAuB,OAAvB,CAAZ,CACAiN,CAAK,CAACzM,WAAN,CAAkB+f,CAAlB,EACAtT,CAAK,CAACzM,WAAN,CAAkBX,QAAQ,CAACa,cAAT,CAAwBhN,EAAW,CAAC+sB,UAApC,CAAlB,EACAjrB,EAAa,CAACgL,WAAd,CAA0ByM,CAA1B,EAGA,GAAqC,CAAjC,EAAA1O,MAAM,CAACC,IAAP,CAAY9L,EAAZ,EAAuBgK,MAA3B,CAAwC,CAEpC6jB,CAAK,CAAG1gB,QAAQ,CAACG,aAAT,CAAuB,OAAvB,CAAR,CACAugB,CAAK,CAAC3iB,IAAN,CAAa,OAAb,CACA2iB,CAAK,CAACxnB,IAAN,CAAa,eAAb,CACAwnB,CAAK,CAACpgB,KAAN,CAAc,YAAd,CACAogB,CAAK,CAAClgB,gBAAN,CAAuB,OAAvB,CAAgCmgB,EAAhC,EAEAvT,CAAK,CAAGpN,QAAQ,CAACG,aAAT,CAAuB,OAAvB,CAAR,CACAiN,CAAK,CAACzM,WAAN,CAAkB+f,CAAlB,EACAtT,CAAK,CAACzM,WAAN,CAAkBX,QAAQ,CAACa,cAAT,CAAwBhN,EAAW,CAACgtB,UAApC,CAAlB,EACAlrB,EAAa,CAACgL,WAAd,CAA0ByM,CAA1B,CACH,CACJ,CAKD,QAASuT,CAAAA,EAAT,EAAsB,CAElBjoB,EAAqB,CAAiB,WAAd,OAAK4H,KAAL,MAAxB,CACAlM,EAAK,CAAC+N,SAAN,CAAgB,WAAhB,EAA6BC,MAA7B,GAGA,GAAI6I,CAAAA,CAAO,CAAG,EAAd,CACI9L,CAAC,CAAG,CADR,CAEIiS,CAFJ,CAGA,IAAKA,CAAL,GAAgBta,CAAAA,EAAhB,CAA+B,CAE3BmU,CAAO,CAAC9L,CAAC,EAAF,CAAP,CAAe,CACXmB,KAAK,CAAK8Q,CADC,CAEXvH,QAAQ,GAFG,CAGX7L,MAAM,CAAIlH,EAAa,CAACsa,CAAD,CAAb,CAAuBpT,MAHtB,CAKlB,CAGD,GAAItF,EAAJ,CAA2B,CACvBwY,CAAqB,CAACjG,CAAD,CACxB,CAFD,IAEO,CACHkG,CAAsB,CAAClG,CAAD,CACzB,CACDsD,EAAS,EACZ,CASD,QAASgS,CAAAA,EAAT,CAA6B1Q,CAA7B,CAAqCC,CAArC,CAA6C,CAEzC,GAAIgR,CAAAA,CAAJ,CACItiB,CADJ,CAGA,OAAQ6F,QAAQ,CAACwL,CAAM,CAACC,CAAD,CAAP,CAAhB,EAGI,IAAK,EAAL,CAGI,GAA0B,CAAtB,EAAAla,EAAJ,CAA6B,CACzBD,EAAa,CAACmF,UAAd,CAAyB2Z,GAAzB,CAA6B,CAA7B,EACA,KACH,CACD7e,EAAkB,CAAG,CAArB,CACAmmB,EAAe,GAGf,GAAI,CAACxlB,EAAL,CAAiB,CACbuqB,CAAM,CAAG9gB,QAAQ,CAAC+gB,iBAAT,CAA2B,eAA3B,CAAT,CACA,IAAKviB,CAAL,GAAUsiB,CAAAA,CAAV,CAAkB,CACdA,CAAM,CAACtiB,CAAD,CAAN,CAAU+V,QAAV,GACH,CACJ,CACD,MAGJ,IAAK,EAAL,CAEI3e,EAAkB,CAAG,CAArB,CACAgmB,EAAe,GAGfkF,CAAM,CAAG9gB,QAAQ,CAAC+gB,iBAAT,CAA2B,eAA3B,CAAT,CACA,IAAKviB,CAAL,GAAUsiB,CAAAA,CAAV,CAAkB,CACdA,CAAM,CAACtiB,CAAD,CAAN,CAAU+V,QAAV,GACH,CAGDvU,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCsU,QAAtC,IACAvU,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCsU,QAArC,IAGA,GAAIvU,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCS,SAApC,EAAiD7M,EAAW,CAAC2oB,MAAjE,CAAyE,CACrExc,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCS,SAApC,CAAgD,IACnD,CACD,MAGJ,IAAK,EAAL,CAGI,GAA0B,CAAtB,EAAA9K,EAAJ,CAA6B,CACzBD,EAAa,CAACmF,UAAd,CAAyB2Z,GAAzB,CAA6B,CAA7B,EACA,KACH,CACD7e,EAAkB,CAAG,CAArB,CACAimB,EAAe,GAEf,GAAI,CAACtlB,EAAL,CAAiB,CAEb,GAAIyqB,CAAAA,CAAE,CAAG,sCAAqCntB,EAAW,CAACqgB,WAAjD,CACL,2DADJ,CAGAlU,QAAQ,CAACC,cAAT,CAAwB,cAAxB,EAAwCS,SAAxC,CAAoDsgB,CACvD,CAGDhhB,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCsU,QAAtC,IACAvU,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCsU,QAArC,IAEA,GAAIvU,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCS,SAAtC,EAAmD7M,EAAW,CAAC+kB,WAAnE,CAAgF,CAC5E5Y,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCsU,QAAtC,IACAvU,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCsU,QAArC,GACH,CAGD,GAAqD,IAAjD,EAAAvU,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCS,SAAxC,CAA2D,CACvDV,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCS,SAApC,CAAgD7M,EAAW,CAAC2oB,MAC/D,CACD,MA5ER,CA8EH,CAKD,QAAST,CAAAA,EAAT,EAA2B,CAEvBpN,CAAY,IAAZ,CACAna,EAAU,CAAC0N,EAAX,CAAc,WAAd,CAA2B,IAA3B,EAAiCA,EAAjC,CAAoC,UAApC,CAAgD,IAAhD,EACAka,EAAqB,CAAC,CAAD,CAAM,CAAN,CAAS,CAAT,CAAYnkB,EAAZ,CAArB,CACA4H,UAAU,CAAC,UAAW,CAClB7L,EAAG,CAACmO,SAAJ,CAAc,WAAd,EAA2BgC,KAA3B,EACH,CAFS,CAEP,GAFO,CAGb,CAKD,QAASyX,CAAAA,EAAT,EAA2B,CAEvBpnB,EAAU,CAAC4G,UAAX,CAAsBnH,EAAtB,EAA6BsM,KAA7B,CAAmC,SAAnC,CAA8C,CAA9C,EACA9L,EAAU,CAAC2G,UAAX,CAAsBnH,EAAtB,EAA6BsM,KAA7B,CAAmC,SAAnC,CAA8C,CAA9C,EACAvM,EAAG,CAACmO,SAAJ,CAAc,sBAAd,EACK/G,UADL,CACgBnH,EADhB,EACuBsM,KADvB,CAC6B,SAD7B,CACwC,CADxC,EAEAvM,EAAG,CAACmO,SAAJ,CAAc,eAAd,EAA+B/G,UAA/B,CAA0CnH,EAA1C,EAAiDsM,KAAjD,CAAuD,SAAvD,CAAkE,CAAlE,EAEAV,UAAU,CAAC,UAAW,CAClBrL,EAAU,CAAC+L,KAAX,CAAiB,SAAjB,CAA4B,MAA5B,EACA9L,EAAU,CAAC8L,KAAX,CAAiB,SAAjB,CAA4B,MAA5B,EACAvM,EAAG,CAACmO,SAAJ,CAAc,sBAAd,EAAsC5B,KAAtC,CAA4C,SAA5C,CAAuD,MAAvD,EACAvM,EAAG,CAACmO,SAAJ,CAAc,eAAd,EAA+B5B,KAA/B,CAAqC,SAArC,CAAgD,MAAhD,CACH,CALS,CAKPtI,EALO,CAAV,CAOA,GAAI,CAAC1B,EAAD,EAAeyJ,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAAnB,CAA4D,CACxDD,QAAQ,CAACC,cAAT,CAAwB,cAAxB,EAAwCS,SAAxC,CAAoD7M,EAAW,CAACqgB,WACnE,CAGD,GAAI+M,CAAAA,CAAK,CAAGC,EAAmB,EAA/B,CACA,GAAc,IAAV,GAAAD,CAAJ,CAAoB,CAChB,MACH,CACDjpB,EAAU,CAACyB,KAAX,CAAmBwnB,CAAK,CAAC,CAAD,CAAxB,CACAzrB,EAAc,CAAGyrB,CAAjB,CAEAphB,UAAU,CAAC,UAAW,CAClBuc,EAAqB,CAAC6E,CAAK,CAAC,CAAD,CAAN,CAAWA,CAAK,CAAC,CAAD,CAAhB,CAAqBA,CAAK,CAAC,CAAD,CAA1B,CAA+BhpB,EAA/B,CACxB,CAFS,CAEPA,EAAQ,CAAG,CAFJ,CAGb,CAKD,QAAS4jB,CAAAA,EAAT,EAA2B,CAEvB7nB,EAAG,CAACmO,SAAJ,CAAc,sBAAd,EACK/G,UADL,CACgBnH,EADhB,EAEKsM,KAFL,CAEW,SAFX,CAEsB,OAFtB,EAGKA,KAHL,CAGW,SAHX,CAGsB,CAHtB,EAKAvM,EAAG,CAACmO,SAAJ,CAAc,eAAd,EACK/G,UADL,CACgBnH,EADhB,EAEKsM,KAFL,CAEW,SAFX,CAEsB,OAFtB,EAGKA,KAHL,CAGW,SAHX,CAGsB,CAHtB,EAKAvM,EAAG,CAACmO,SAAJ,CAAc,sBAAd,EAAsCgC,KAAtC,EACH,CAUD,QAASiY,CAAAA,EAAT,CAA+B3iB,CAA/B,CAAsCyO,CAAtC,CAA0CC,CAA1C,CAA8CtE,CAA9C,CAAiD,CAE7C,GACIG,CAAAA,CADJ,CAEIF,CAFJ,CAGIkE,CAHJ,CAIIlD,CAJJ,CAKIkU,CALJ,CAMImI,CAAO,CAAG9sB,EAAK,CAAG,CANtB,CAOI+sB,CAAO,CAAG9sB,EAAM,CAAG,CAPvB,CAQIyI,CARJ,CAUA,GAAI,CAAChG,EAAL,CAAsB,CAClBA,EAAe,CAAG,EAAlB,CACA,IAAKgG,CAAL,GAAYjG,CAAAA,EAAZ,CAA2B,CACvBC,EAAe,CAACgG,CAAD,CAAf,CAAuB,CAACiH,CAAC,CAAE,CAAJ,CAAOF,CAAC,CAAE,CAAV,CAC1B,CACJ,CAED9L,EAAU,CAACmiB,MAAX,CAAoB,CAACnW,CAAC,CAAEkE,CAAJ,CAAQpE,CAAC,CAAEqE,CAAX,CAApB,CAGA,IAAKpL,CAAL,GAAYjG,CAAAA,EAAZ,CAA2B,CAEvBkN,CAAC,CAAGlN,EAAa,CAACiG,CAAD,CAAb,CAAmBiH,CAAvB,CACAF,CAAC,CAAGhN,EAAa,CAACiG,CAAD,CAAb,CAAmB+G,CAAvB,CAEAkE,CAAE,CAAG,CAAChE,CAAC,CAAGkE,CAAL,EAAWzO,CAAhB,CACAqL,CAAE,CAAG,CAAChB,CAAC,CAAGqE,CAAL,EAAW1O,CAAhB,CAEA,GAAa,CAAT,EAAAA,CAAK,EAAiB,CAAN,EAAAyO,CAAhB,EAAiC,CAAN,EAAAC,CAA/B,CAAwC,CACpCnE,CAAC,CAAGkE,CAAE,CAAGF,CAAT,CACAlE,CAAC,CAAGqE,CAAE,CAAGrD,CACZ,CAHD,IAGO,CACHd,CAAC,CAAGmd,CAAO,CAAGnZ,CAAd,CACAlE,CAAC,CAAGsd,CAAO,CAAGtc,CACjB,CAGD/N,EAAe,CAACgG,CAAD,CAAf,CAAqBiH,CAArB,CAAyBA,CAAzB,CACAjN,EAAe,CAACgG,CAAD,CAAf,CAAqB+G,CAArB,CAAyBA,CAAzB,CAEAkV,CAAM,CAAGhV,CAAC,CAAG,GAAJ,EAAWF,CAAC,GAAZ,EAAoB,GAApB,EAA2BE,CAAC,GAA5B,EAAoC,GAApC,EAA2CF,CAAC,GAA5C,EAAoD,GAApD,EAA2DE,CAAC,GAA5D,EAAoE,GAApE,EAA2EF,CAAC,GAA5E,CAAT,CAEA9P,EAAG,CAACoN,MAAJ,CAAW,aAAerE,CAA1B,EAA+B3B,UAA/B,GAA4CC,QAA5C,CAAqDwI,CAArD,EAAwDvC,IAAxD,CAA6D,QAA7D,CAAuE0X,CAAvE,CACH,CAGD,GAAIqI,CAAAA,CAAc,CAAG,SAASrd,CAAT,CAAYF,CAAZ,CAAe,CAEhCE,CAAC,EAAIhM,EAAU,CAACiP,QAAhB,CACAjD,CAAC,EAAIhM,EAAU,CAAC6O,SAAhB,CAEA/C,CAAC,EAAI9L,EAAU,CAACiP,QAAhB,CACAnD,CAAC,EAAI9L,EAAU,CAAC8O,SAAhB,CAGA9C,CAAC,EAAIhM,EAAU,CAACmiB,MAAX,CAAkBnW,CAAvB,CACAA,CAAC,EAAIhM,EAAU,CAACyB,KAAhB,CACAuK,CAAC,EAAI3P,EAAK,CAAG,CAAb,CAEAyP,CAAC,EAAI9L,EAAU,CAACmiB,MAAX,CAAkBrW,CAAvB,CACAA,CAAC,EAAI9L,EAAU,CAACyB,KAAhB,CACAqK,CAAC,EAAIxP,EAAM,CAAG,CAAd,CAEA,MAAO,CAAC0P,CAAC,CAAEA,CAAJ,CAAOF,CAAC,CAAEA,CAAV,CACV,CAlBD,CAmBA,IAAK/G,CAAL,GAAYnE,CAAAA,EAAZ,CAA6B,CACzB,GAAI0oB,CAAAA,CAAM,CAAGD,CAAc,CAACzoB,EAAe,CAACmE,CAAD,CAAf,CAAqBiH,CAAtB,CAAyBpL,EAAe,CAACmE,CAAD,CAAf,CAAqB+G,CAA9C,CAA3B,CACAE,CAAC,CAAGsd,CAAM,CAACtd,CAAX,CACAF,CAAC,CAAGwd,CAAM,CAACxd,CAAX,CAEA9P,EAAG,CAACoN,MAAJ,CAAW,oBAAsBrE,CAAjC,EACK3B,UADL,GAEKC,QAFL,CAEcwI,CAFd,EAGKvC,IAHL,CAGU,IAHV,CAGgB0C,CAHhB,EAIK1C,IAJL,CAIU,IAJV,CAIgBwC,CAJhB,CAKH,CACJ,CAOD,QAASod,CAAAA,EAAT,EAA+B,CAE3B,GAAI5B,CAAAA,CAAG,CAAG,EAAV,CACIviB,CADJ,CAIA,GAAI1H,EAAJ,CAAe,CACX,MAAOksB,CAAAA,EAAyB,EACnC,CAGD,IAAKxkB,CAAL,GAAYjG,CAAAA,EAAZ,CAA2B,CACvBwoB,CAAG,CAACA,CAAG,CAACziB,MAAL,CAAH,CAAkB,CAAC/F,EAAa,CAACiG,CAAD,CAAb,CAAmBiH,CAApB,CAAuBlN,EAAa,CAACiG,CAAD,CAAb,CAAmB+G,CAA1C,CACrB,CAED,GAAI0d,CAAAA,CAAK,CAAGC,EAAc,CAACnC,CAAD,CAA1B,CACA,GAAc,IAAV,GAAAkC,CAAJ,CAAoB,CAChB,MAAO,KACV,CAlB0B,GAmBvB1D,CAAAA,CAAG,CAAG,CAAC0D,CAAK,CAACxd,CAAP,CAAUwd,CAAK,CAAC1d,CAAhB,CAnBiB,CAsBvBkE,CAtBuB,CAuBvBlD,CAvBuB,CAwBvB4c,CAxBuB,CAyBvBC,CAzBuB,CA0BvBC,CAAI,CAAG,CA1BgB,CA2BvBC,CAAI,CAAG,CA3BgB,CA6B3B,IAAK9kB,CAAL,GAAYjG,CAAAA,EAAZ,CAA2B,CAEvBkR,CAAE,CAAGpM,IAAI,CAACkmB,GAAL,CAAShrB,EAAa,CAACiG,CAAD,CAAb,CAAmBiH,CAAnB,CAAuB8Z,CAAG,CAAC,CAAD,CAAnC,CAAL,CACAhZ,CAAE,CAAGlJ,IAAI,CAACkmB,GAAL,CAAShrB,EAAa,CAACiG,CAAD,CAAb,CAAmB+G,CAAnB,CAAuBga,CAAG,CAAC,CAAD,CAAnC,CAAL,CAEA,GAAI9V,CAAE,CAAG4Z,CAAT,CAAe,CACXA,CAAI,CAAG5Z,CAAP,CACA0Z,CAAK,CAAG3kB,CACX,CACD,GAAI+H,CAAE,CAAG+c,CAAT,CAAe,CACXA,CAAI,CAAG/c,CAAP,CACA6c,CAAK,CAAG5kB,CACX,CACJ,CAGD,GAAI4kB,CAAK,SAAL,EAAuBD,CAAK,SAAhC,CAAgD,CAC5C5D,CAAG,CAAC,CAAD,CAAH,CAAS,CAAT,CACA,MAAOA,CAAAA,CACV,CAhD0B,GAmDvB+B,CAAAA,CAAI,CAAI/oB,EAAa,CAAC4qB,CAAD,CAAb,CAAqB1d,CAArB,CAAyB8Z,CAAG,CAAC,CAAD,CAA7B,CAAoCzpB,EAAK,CAAG,CAnD5B,CAoDvByrB,CAAI,CAAIhpB,EAAa,CAAC4qB,CAAD,CAAb,CAAqB5d,CAArB,CAAyBga,CAAG,CAAC,CAAD,CAA7B,CAAoCxpB,EAAM,CAAG,CApD7B,CAqDvBytB,CAAI,CAAGC,EAAQ,CAACnC,CAAD,CAAOC,CAAP,CAAazrB,EAAK,CAAG,CAArB,CAAwBC,EAAM,CAAG,CAAjC,CArDQ,CAuD3BurB,CAAI,CAAI/oB,EAAa,CAAC6qB,CAAD,CAAb,CAAqB3d,CAArB,CAAyB8Z,CAAG,CAAC,CAAD,CAA7B,CAAoCzpB,EAAK,CAAG,CAAnD,CACAyrB,CAAI,CAAIhpB,EAAa,CAAC6qB,CAAD,CAAb,CAAqB7d,CAArB,CAAyBga,CAAG,CAAC,CAAD,CAA7B,CAAoCxpB,EAAM,CAAG,CAApD,CACA,GAAI2tB,CAAAA,CAAI,CAAGD,EAAQ,CAACnC,CAAD,CAAOC,CAAP,CAAazrB,EAAK,CAAG,CAArB,CAAwBC,EAAM,CAAG,CAAjC,CAAnB,CAGAwpB,CAAG,CAAC,CAAD,CAAH,CAASiE,CAAI,CAAGE,CAAP,CAAcF,CAAd,CAAqBE,CAA9B,CACAnE,CAAG,CAAC,CAAD,CAAH,EAAU,EAAV,CAEA,MAAOA,CAAAA,CACV,CAUD,QAASyD,CAAAA,EAAT,EAAqC,CAEjC,GAAIjC,CAAAA,CAAG,CAAG,EAAV,CACItb,CAAC,CAAG,CADR,CAEIF,CAAC,CAAG,CAFR,CAGIwS,CAHJ,CAMA,IAAKA,CAAL,GAAa/gB,CAAAA,EAAb,CAAyB,CACrB,GAAY,CAAR,EAAA+gB,CAAI,EAAiB,CAAR,EAAAA,CAAjB,CAA4B,CACxB,QACH,CACD,IAAK,GAAIyD,CAAAA,CAAT,GAAuBxkB,CAAAA,EAAU,CAAC+gB,CAAD,CAAjC,CAAyC,CACrC,IAAK,GAAIH,CAAAA,CAAT,GAAmB5gB,CAAAA,EAAU,CAAC+gB,CAAD,CAAV,CAAiByD,CAAjB,EAA6BjhB,OAAhD,CAAyD,CAErDkL,CAAC,CAAGzO,EAAU,CAAC+gB,CAAD,CAAV,CAAiByD,CAAjB,EAA6BjhB,OAA7B,CAAqCqd,CAArC,EAA6CnS,CAAjD,CACAA,CAAC,CAAGA,CAAC,CAAGlR,EAAJ,CAAkBkF,EAAU,CAAC6O,SAAjC,CAEA/C,CAAC,CAAGvO,EAAU,CAAC+gB,CAAD,CAAV,CAAiByD,CAAjB,EAA6BjhB,OAA7B,CAAqCqd,CAArC,EAA6CrS,CAAjD,CACAA,CAAC,CAAGA,CAAC,CAAGhR,EAAJ,CAAkBkF,EAAU,CAAC8O,SAAjC,CAEAwY,CAAG,CAACA,CAAG,CAACziB,MAAL,CAAH,CAAkB,CAACmH,CAAD,CAAIF,CAAJ,CACrB,CACJ,CACJ,CAGD,GAAI0d,CAAAA,CAAK,CAAGC,EAAc,CAACnC,CAAD,CAA1B,CACA,GAAc,IAAV,GAAAkC,CAAJ,CAAoB,CAChB,MAAO,KACV,CA9BgC,GA+B7B1D,CAAAA,CAAG,CAAG,CAAC0D,CAAK,CAACxd,CAAP,CAAUwd,CAAK,CAAC1d,CAAhB,CA/BuB,CAkC7BkE,CAlC6B,CAmC7BlD,CAnC6B,CAoC7B4c,CApC6B,CAqC7BC,CArC6B,CAsC7BC,CAAI,CAAG,CAtCsB,CAuC7BC,CAAI,CAAG,CAvCsB,CAwC7B1iB,CAxC6B,CA0CjC,IAAKA,CAAC,CAAG,CAAT,CAAYA,CAAC,CAAGmgB,CAAG,CAACziB,MAApB,CAA4BsC,CAAC,EAA7B,CAAiC,CAE7B6I,CAAE,CAAGpM,IAAI,CAACkmB,GAAL,CAASxC,CAAG,CAACngB,CAAD,CAAH,CAAO,CAAP,EAAY2e,CAAG,CAAC,CAAD,CAAxB,CAAL,CACAhZ,CAAE,CAAGlJ,IAAI,CAACkmB,GAAL,CAASxC,CAAG,CAACngB,CAAD,CAAH,CAAO,CAAP,EAAY2e,CAAG,CAAC,CAAD,CAAxB,CAAL,CAEA,GAAI9V,CAAE,CAAG4Z,CAAT,CAAe,CACXA,CAAI,CAAG5Z,CAAP,CACA0Z,CAAK,CAAGviB,CACX,CACD,GAAI2F,CAAE,CAAG+c,CAAT,CAAe,CACXA,CAAI,CAAG/c,CAAP,CACA6c,CAAK,CAAGxiB,CACX,CACJ,CAGD,GAAIwiB,CAAK,SAAL,EAAuBD,CAAK,SAAhC,CAAgD,CAC5C5D,CAAG,CAAC,CAAD,CAAH,CAAS,CAAT,CACA,MAAOA,CAAAA,CACV,CA7DgC,GAgE7B+B,CAAAA,CAAI,CAAIP,CAAG,CAACoC,CAAD,CAAH,CAAW,CAAX,EAAgB5D,CAAG,CAAC,CAAD,CAApB,CAA2BzpB,EAAK,CAAG,CAhEb,CAiE7ByrB,CAAI,CAAIR,CAAG,CAACoC,CAAD,CAAH,CAAW,CAAX,EAAgB5D,CAAG,CAAC,CAAD,CAApB,CAA2BxpB,EAAM,CAAG,CAjEd,CAkE7BytB,CAAI,CAAGC,EAAQ,CAACnC,CAAD,CAAOC,CAAP,CAAazrB,EAAK,CAAG,CAArB,CAAwBC,EAAM,CAAG,CAAjC,CAlEc,CAoEjCurB,CAAI,CAAIP,CAAG,CAACqC,CAAD,CAAH,CAAW,CAAX,EAAgB7D,CAAG,CAAC,CAAD,CAApB,CAA2BzpB,EAAK,CAAG,CAA1C,CACAyrB,CAAI,CAAIR,CAAG,CAACqC,CAAD,CAAH,CAAW,CAAX,EAAgB7D,CAAG,CAAC,CAAD,CAApB,CAA2BxpB,EAAM,CAAG,CAA3C,CACA,GAAI2tB,CAAAA,CAAI,CAAGD,EAAQ,CAACnC,CAAD,CAAOC,CAAP,CAAazrB,EAAK,CAAG,CAArB,CAAwBC,EAAM,CAAG,CAAjC,CAAnB,CAGAwpB,CAAG,CAAC,CAAD,CAAH,CAASiE,CAAI,CAAGE,CAAP,CAAcF,CAAd,CAAqBE,CAA9B,CACAnE,CAAG,CAAC,CAAD,CAAH,EAAU,EAAV,CAEA,MAAOA,CAAAA,CACV,CAQD,QAAS2D,CAAAA,EAAT,CAAwBnC,CAAxB,CAA6B,CAGzB,GAAkB,CAAd,EAAAA,CAAG,CAACziB,MAAR,CAAqB,CACjB,MAAO,KACV,CAFD,IAEO,IAAkB,CAAd,EAAAyiB,CAAG,CAACziB,MAAR,CAAqB,CACxB,MAAO,CAACmH,CAAC,CAAEsb,CAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAAJ,CAAexb,CAAC,CAAEwb,CAAG,CAAC,CAAD,CAAH,CAAO,CAAP,CAAlB,CACV,CAGD,GAAIsC,CAAAA,CAAI,CAAG,CAAX,CACIC,CAAI,CAAG,CADX,CAEIK,CAAI,CAAG7tB,EAFX,CAGI8tB,CAAI,CAAG7tB,EAHX,CAII6K,CAJJ,CAKI6E,CALJ,CAMIF,CANJ,CAQA,IAAK3E,CAAC,CAAG,CAAT,CAAYA,CAAC,CAAGmgB,CAAG,CAACziB,MAApB,CAA4BsC,CAAC,EAA7B,CAAiC,CAE7B6E,CAAC,CAAGsb,CAAG,CAACngB,CAAD,CAAH,CAAO,CAAP,CAAJ,CACA2E,CAAC,CAAGwb,CAAG,CAACngB,CAAD,CAAH,CAAO,CAAP,CAAJ,CAEA,GAAI6E,CAAC,CAAG4d,CAAR,CAAc,CACVA,CAAI,CAAG5d,CACV,CACD,GAAIA,CAAC,CAAGke,CAAR,CAAc,CACVA,CAAI,CAAGle,CACV,CACD,GAAIF,CAAC,CAAG+d,CAAR,CAAc,CACVA,CAAI,CAAG/d,CACV,CACD,GAAIA,CAAC,CAAGqe,CAAR,CAAc,CACVA,CAAI,CAAGre,CACV,CACJ,CAED,MAAO,CAACE,CAAC,CAAE,CAAC4d,CAAI,CAAGM,CAAR,EAAgB,CAApB,CAAuBpe,CAAC,CAAE,CAAC+d,CAAI,CAAGM,CAAR,EAAgB,CAA1C,CACV,CAaD,QAASH,CAAAA,EAAT,CAAkBI,CAAlB,CAAuBC,CAAvB,CAA4BC,CAA5B,CAAiCC,CAAjC,CAAsC,IAG9Bva,CAAAA,CAAE,CAAGoa,CAAG,CAAGE,CAHmB,CAI9Bxd,CAAE,CAAGud,CAAG,CAAGE,CAJmB,CAO9BC,CAAE,CAAQ,CAAL,CAAAxa,CAAE,CAAO3T,EAAP,CAAe,CAPQ,CAQ9BouB,CAAE,CAAQ,CAAL,CAAA3d,CAAE,CAAOxQ,EAAP,CAAgB,CARO,CAW9Bid,CAAE,CAAG,CAACiR,CAAE,CAAGnuB,EAAK,CAAG,CAAd,EAAmB2T,CAXM,CAY9BwJ,CAAE,CAAG,CAACiR,CAAE,CAAGnuB,EAAM,CAAG,CAAf,EAAoBwQ,CAZK,CAelC,GAAI4d,QAAQ,CAACnR,CAAD,CAAR,EAAgBmR,QAAQ,CAAClR,CAAD,CAAxB,EAAgCD,CAAE,EAAIC,CAA1C,CAA8C,CAC1C,MAAOD,CAAAA,CACV,CAFD,IAEO,IAAImR,QAAQ,CAACnR,CAAD,CAAR,EAAgB,CAACmR,QAAQ,CAAClR,CAAD,CAA7B,CAAmC,CACtC,MAAOD,CAAAA,CACV,CAFM,IAEA,IAAImR,QAAQ,CAAClR,CAAD,CAAZ,CAAkB,CACrB,MAAOA,CAAAA,CACV,CAFM,IAEA,CACH,MAAO,EACV,CACJ,CAKD,QAAS8C,CAAAA,EAAT,EAAwB,CAGpB,GAAIqO,CAAAA,CAAE,CAAG3iB,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAAT,CACA0iB,CAAE,CAACpiB,KAAH,CAASlM,KAAT,CAAiB9B,EAAW,CAAG,IAA/B,CAGA,GAAI4W,CAAAA,CAAI,CAAGnJ,QAAQ,CAACG,aAAT,CAAuB,QAAvB,CAAX,CACAgJ,CAAI,CAACzI,SAAL,CAAiB7M,EAAW,CAACsV,IAA7B,CACAA,CAAI,CAACC,SAAL,CAAiB,wBAAjB,CAEAD,CAAI,CAAC3I,gBAAL,CAAsB,OAAtB,CAA+B,UAAW,CACtChP,MAAM,CAACkZ,YAAP,GAAsBkY,iBAAtB,CAAwC9sB,EAAxC,EACAkK,QAAQ,CAAC4K,WAAT,CAAqB,MAArB,CACH,CAHD,EAKA,GAAIrT,EAAJ,CAAe,CACX4R,CAAI,CAAC5I,KAAL,CAAWoc,UAAX,CAAwB,MAC3B,CAFD,IAEO,CACHxT,CAAI,CAAC5I,KAAL,CAAWmF,QAAX,CAAsB,UAAtB,CACAyD,CAAI,CAAC5I,KAAL,CAAWiD,KAAX,CAAoBjR,EAAW,CAAG,EAAf,CAAqB,IAC3C,CAEDowB,CAAE,CAAChiB,WAAH,CAAewI,CAAf,EAGA,GAAII,CAAAA,CAAK,CAAGvJ,QAAQ,CAACG,aAAT,CAAuB,QAAvB,CAAZ,CACAoJ,CAAK,CAAC7I,SAAN,CAAkB7M,EAAW,CAAC0V,KAA9B,CACAA,CAAK,CAACH,SAAN,CAAkB,wBAAlB,CACAG,CAAK,CAAC/I,gBAAN,CAAuB,OAAvB,CAAgC,UAAW,CAIvC,GAAIsK,CAAAA,CAAQ,CAAGtZ,MAAM,CAACmX,IAAP,EAAf,CAEAmC,CAAQ,CAAC9K,QAAT,CAAkB+K,KAAlB,CAAwB,2BAAxB,EACAD,CAAQ,CAAC9K,QAAT,CAAkB+K,KAAlB,CAAwBjV,EAAQ,CAAC4K,SAAjC,EACAoK,CAAQ,CAAC9K,QAAT,CAAkB+K,KAAlB,CAAwB,gBAAxB,EAEAD,CAAQ,CAACvB,KAAT,GACAuB,CAAQ,CAACE,KAAT,EACH,CAZD,EAcA,GAAIzT,EAAJ,CAAe,CACXgS,CAAK,CAAChJ,KAAN,CAAYoc,UAAZ,CAAyB,MAC5B,CAFD,IAEO,CACHpT,CAAK,CAAChJ,KAAN,CAAYmF,QAAZ,CAAuB,UAAvB,CACA6D,CAAK,CAAChJ,KAAN,CAAYiD,KAAZ,CAAqBjR,EAAW,CAAG,GAAf,CAAsB,IAC7C,CAEDowB,CAAE,CAAChiB,WAAH,CAAe4I,CAAf,EAGAzT,EAAQ,CAAGkK,QAAQ,CAACG,aAAT,CAAuB,KAAvB,CAAX,CACArK,EAAQ,CAACylB,QAAT,IACAzlB,EAAQ,CAACyK,KAAT,CAAesiB,QAAf,CAA0B,QAA1B,CAEA/sB,EAAQ,CAACyK,KAAT,CAAelM,KAAf,CAAuB,OAAvB,CACAyB,EAAQ,CAACyK,KAAT,CAAejM,MAAf,CAAwBA,EAAM,CAAG,IAAjC,CAEAwB,EAAQ,CAACyK,KAAT,CAAeuiB,MAAf,CAAwB,MAAxB,CACAhtB,EAAQ,CAACyK,KAAT,CAAewiB,MAAf,CAAwB,iBAAxB,CAEA,GAAI,CAACxrB,EAAL,CAAgB,CACZzB,EAAQ,CAACyK,KAAT,CAAemF,QAAf,CAA0B,UAA1B,CACA5P,EAAQ,CAACyK,KAAT,CAAeiD,KAAf,CAAuB,KAAvB,CACA1N,EAAQ,CAACyK,KAAT,CAAe0F,GAAf,CAAqB,OACxB,CAED0c,CAAE,CAAChiB,WAAH,CAAe7K,EAAf,CACH,CAOD,QAAS4e,CAAAA,EAAT,EAAyB,CAGrB,OAAK3X,CAAAA,CAAL,GAAYjG,CAAAA,EAAZ,CAA2B,CAEvB1C,EAAK,CAACiN,MAAN,CAAa,SAAb,EACKC,IADL,CACU,OADV,CACmB,UADnB,EAEKA,IAFL,CAEU,IAFV,CAEgB,YAAcvE,CAF9B,EAGKuE,IAHL,CAGU,QAHV,CAGoBuU,EAAgB,CAAC/e,EAAa,CAACiG,CAAD,CAAb,CAAmBiH,CAApB,CAAuBlN,EAAa,CAACiG,CAAD,CAAb,CAAmB+G,CAA1C,CAHpC,EAIKvD,KAJL,CAIW,QAJX,CAIqB,OAJrB,EAKKA,KALL,CAKW,cALX,CAK2B,KAL3B,EAMKA,KANL,CAMW,MANX,CAMmBzJ,EAAa,CAACiG,CAAD,CAAb,CAAmBiB,MANtC,EAOKkF,IAPL,CAOUlP,EAAG,CAAC+O,IAAJ,GACCb,EADD,CACI,OADJ,CACa8gB,EAAiB,CAACvc,IAAlB,CAAuB,IAAvB,CAA6B1J,CAA7B,CADb,EAECmF,EAFD,CAEI,MAFJ,CAEY+gB,EAAY,CAACxc,IAAb,CAAkB,IAAlB,CAAwB1J,CAAxB,CAFZ,EAGCmF,EAHD,CAGI,KAHJ,CAGWghB,EAAe,CAACzc,IAAhB,CAAqB,IAArB,CAA2B1J,CAA3B,CAHX,CAPV,EAWKmF,EAXL,CAWQ,UAXR,CAWoBihB,EAXpB,EAYKjhB,EAZL,CAYQ,WAZR,CAYqBkhB,EAAgB,CAAC3c,IAAjB,CAAsB,IAAtB,CAA4B1J,CAA5B,CAZrB,EAaKmF,EAbL,CAaQ,OAbR,CAaiBwX,EAbjB,EAcKxX,EAdL,CAcQ,qBAdR,CAc+B6T,EAAa,CAACtP,IAAd,CAAmB,IAAnB,CAAyB9S,EAAW,CAACoJ,CAAD,CAApC,CAA2CA,CAA3C,IAd/B,CAeH,CAED,GAAIpE,EAAJ,CAAoB,CAChB,IAAKoE,CAAL,GAAYnE,CAAAA,EAAZ,CAA6B,IACrBsP,CAAAA,CAAE,CAAItP,EAAe,CAACmE,CAAD,CAAf,CAAqBiH,CAArB,CAAyBhM,EAAU,CAACiP,QAArC,CAAiDjP,EAAU,CAAC6O,SAD5C,CAErBsB,CAAE,CAAIvP,EAAe,CAACmE,CAAD,CAAf,CAAqB+G,CAArB,CAAyB9L,EAAU,CAACiP,QAArC,CAAiDjP,EAAU,CAAC8O,SAF5C,CAGzB1S,EAAK,CAACiN,MAAN,CAAa,QAAb,EACKC,IADL,CACU,OADV,CACmB,iBADnB,EAEKA,IAFL,CAEU,IAFV,CAEgB,mBAAqBvE,CAFrC,EAGKuE,IAHL,CAGU,GAHV,CAGe,CAHf,EAIKA,IAJL,CAIU,IAJV,CAIgB4G,CAJhB,EAKK5G,IALL,CAKU,IALV,CAKgB6G,CALhB,EAMK5H,KANL,CAMW,MANX,CAMmB,OANnB,CAOH,CACJ,CACJ,CAUD,QAASsV,CAAAA,EAAT,CAA0B7R,CAA1B,CAA6BF,CAA7B,CAAgC,CAG5B,MAAOE,CAAAA,CAAC,CAAG,GAAJ,EAAWF,CAAC,GAAZ,EAAoB,GAApB,EAA2BE,CAAC,GAA5B,EAAoC,GAApC,EAA2CF,CAAC,GAA5C,EAAoD,GAApD,EAA2DE,CAAC,GAA5D,EAAoE,GAApE,EAA2EF,CAAC,GAA5E,CACV,CAQD,QAASkf,CAAAA,EAAT,CAA2BrN,CAA3B,CAAuC,CAEnC,GAAI,CAAC0N,EAAe,EAApB,CAAwB,CACpB,MACH,CAED/qB,EAAgB,CAAG4C,IAAI,CAACC,GAAL,EAAnB,CAEA/G,EAAK,CAACiN,MAAN,CAAa,SAAb,EACKC,IADL,CACU,OADV,CACmB,kBADnB,EAEKA,IAFL,CAEU,IAFV,CAEgB,WAAaqU,CAF7B,EAGKrU,IAHL,CAGU,QAHV,CAGoBuU,EAAgB,CAAC7hB,EAAG,CAAC6Z,KAAJ,CAAU7J,CAAX,CAAchQ,EAAG,CAAC6Z,KAAJ,CAAU/J,CAAxB,CAHpC,EAIKvD,KAJL,CAIW,QAJX,CAIqB,OAJrB,EAKKA,KALL,CAKW,cALX,CAK2B,KAL3B,EAMKA,KANL,CAMW,MANX,CAMmBzJ,EAAa,CAAC6e,CAAD,CAAb,CAA0B3X,MAN7C,EAOKuC,KAPL,CAOW,SAPX,CAOsB,EAPtB,CAQH,CAQD,QAAS0iB,CAAAA,EAAT,CAAsBtN,CAAtB,CAAkC,CAE9B,GAAI,CAAC0N,EAAe,EAApB,CAAwB,CACpB,MACH,CAEDrvB,EAAG,CAACoN,MAAJ,CAAW,YAAcuU,CAAzB,EACKrU,IADL,CACU,QADV,CACoBuU,EAAgB,CAAC7hB,EAAG,CAAC6Z,KAAJ,CAAU7J,CAAX,CAAchQ,EAAG,CAAC6Z,KAAJ,CAAU/J,CAAxB,CADpC,CAEH,CAOD,QAASof,CAAAA,EAAT,CAAyBvN,CAAzB,CAAqC,CAEjC3hB,EAAG,CAACmO,SAAJ,CAAc,mBAAd,EAAmCC,MAAnC,GAEA,GAAI,CAACihB,EAAe,EAApB,CAAwB,CACpB,MACH,CAGD,GAAoC,GAAhC,CAAAnoB,IAAI,CAACC,GAAL,GAAa7C,EAAjB,CAAyC,CACrCyd,EAAa,CAACpiB,EAAW,CAACgiB,CAAD,CAAZ,CAA0BA,CAA1B,IAAb,CACA,MACH,CAGD5e,EAAe,CAAC4e,CAAD,CAAf,CAA4B6C,EAA5B,CAAiCnC,EAAa,CAACriB,EAAG,CAAC6Z,KAAL,CAA9C,CAIA,OADIqR,CAAAA,CAAY,CAAG,EACnB,CAAS/f,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGnI,EAAS,CAAC6F,MAA9B,CAAsCsC,CAAC,EAAvC,CAA2C,CACvC+f,CAAY,CAAC/f,CAAD,CAAZ,CAAkBggB,EAAc,CAAChgB,CAAD,CACnC,CAGDlI,EAAY,CAAGD,EAAf,CACAA,EAAS,CAAGkoB,CAAZ,CAEA/C,EAA+B,CAAClkB,EAAD,CAA/B,CAGA,GAAIye,CAAAA,CAAG,CAAG7iB,EAAW,CAACkjB,SAAZ,CAAwB,IAAxB,CAA+BvgB,EAAzC,CACAwJ,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCS,SAAtC,CAAkDgW,CAAlD,CACA1W,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCS,SAApC,CAAgD7M,EAAW,CAAC2oB,MAA5D,CAGA,GAAImB,CAAAA,CAAc,CAAGtB,EAAoB,CAAC7lB,EAAD,CAAzC,CAGAwB,EAAU,CAAC+e,SAAX,CAAuBvgB,EAAY,EAAnC,CACAonB,EAAoB,CAACD,CAAD,CACvB,CAQD,QAAStH,CAAAA,EAAT,CAAuBiN,CAAvB,CAA8B,CAM1B,OAHIznB,CAAAA,CAAG,CAAGgjB,MAAM,CAACC,gBAGjB,CAFI1I,CAAI,CAAG,CAAC,CAEZ,CAASjX,CAAC,CAAG,CAAb,CAAgBqC,CAAhB,CAAmBwG,CAAnB,CAAuBlD,CAAvB,CAA2B3F,CAAC,CAAGnI,EAAS,CAAC6F,MAAzC,CAAiDsC,CAAC,EAAlD,CAAsD,CAClD6I,CAAE,CAAGsb,CAAK,CAACtf,CAAN,CAAUhN,EAAS,CAACmI,CAAD,CAAT,CAAa6E,CAA5B,CACAc,CAAE,CAAGwe,CAAK,CAACxf,CAAN,CAAU9M,EAAS,CAACmI,CAAD,CAAT,CAAa2E,CAA5B,CACAtC,CAAC,CAAG5F,IAAI,CAACyM,IAAL,CAAUL,CAAE,CAAGA,CAAL,CAAUlD,CAAE,CAAGA,CAAzB,CAAJ,CAEA,GAAItD,CAAC,CAAG3F,CAAR,CAAa,CACTA,CAAG,CAAG2F,CAAN,CACA4U,CAAI,CAAGjX,CACV,CACJ,CAED,MAAOiX,CAAAA,CACV,CAOD,QAASiN,CAAAA,EAAT,EAA2B,CAGvB,GAAI,CAACrsB,EAAD,EAAc,CAACgJ,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAnB,CAA0D,CACtD,QACH,CAGD,GAAID,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCS,SAAtC,EAAmD7M,EAAW,CAAC+kB,WAAnE,CAAgF,CAC5E,QACH,CAGD,IAAK,GAAI7b,CAAAA,CAAT,GAAgBhG,CAAAA,EAAhB,CAAiC,CAC7B,GAAIA,EAAe,CAACgG,CAAD,CAAf,CAAqByb,EAArB,SAAJ,CAA2C,CACvC,QACH,CACJ,CAGD,GAA0B,CAAtB,EAAA5iB,EAAJ,CAA6B,CACzB,QACH,CAED,QACH,CAKD,QAASutB,CAAAA,EAAT,EAA2B,CAEvB,GAAIjsB,EAAJ,CAAqB,CACjB,MACH,CAEDlD,EAAG,CAACmO,SAAJ,CAAc,OAAd,EAAuBC,MAAvB,GACApO,EAAG,CAACmO,SAAJ,CAAc,MAAd,EAAsBC,MAAtB,GAEA,GAAI7L,EAAU,GAAKlB,EAAS,EAA0B,CAAtB,EAAAO,EAAlB,CAAV,EAC0B,IAA1B,GAAAsgB,EAAmB,EADvB,CACoC,CAChC1hB,EAAU,CAAC+L,KAAX,CAAiB,SAAjB,CAA4B,MAA5B,EAAoCA,KAApC,CAA0C,SAA1C,CAAqD,CAArD,EACA9L,EAAU,CAAC2N,MAAX,EACH,CACJ,CAOD,QAASghB,CAAAA,EAAT,CAA0Bhc,CAA1B,CAA+B,CAE3B,GAAIlQ,EAAJ,CAAqB,CACjB,MACH,CAEDlD,EAAG,CAACmO,SAAJ,CAAc,OAAd,EAAuBC,MAAvB,GACApO,EAAG,CAACmO,SAAJ,CAAc,MAAd,EAAsBC,MAAtB,GAP2B,GASvB5D,CAAAA,CAAC,CAAGpK,EAAK,CAACiN,MAAN,CAAa,MAAb,CATmB,CAUvBgC,CAAI,CAAG,CAAC,CAAD,CAVgB,CAavBkgB,CAAO,CAAyB,CAAtB,EAAA3tB,EAAkB,CAAQkB,EAAR,CAAwBC,EAb7B,CAgBvBysB,CAAW,CAAGpc,CAhBS,CAiB3BnV,EAAK,CAAC6J,OAAN,CAAc,SAASC,CAAT,CAAY,CACtB,GAAIA,CAAC,CAACC,EAAF,EAAQoL,CAAZ,CAAiB,CACboc,CAAW,CAAuB,CAApB,EAAAhsB,EAAgB,CAAQuE,CAAC,CAAC8S,SAAF,CAAc,GAAd,CAAoB9S,CAAC,CAAC+S,QAA9B,CAAyC/S,CAAC,CAACC,EAC5E,CACJ,CAJD,EAjB2B,GAuBvBynB,CAAAA,CAAM,CAAuB,CAApB,EAAAjsB,EAAgB,CAAQ,EAAR,CAAa,EAvBf,CAwBvBqM,CAAC,CAAGzP,EAAK,CAACiN,MAAN,CAAa,MAAb,EACHC,IADG,CACE,OADF,CACW,MADX,EAEHA,IAFG,CAEE,IAFF,CAEQ,KAAO8F,CAFf,EAGH9F,IAHG,CAGE,GAHF,CAGOiiB,CAAO,CAACnc,CAAD,CAAP,CAAatD,CAAb,CAAiB,EAHxB,EAIHxC,IAJG,CAIE,IAJF,CAIQ,OAJR,EAKHf,KALG,CAKG,gBALH,CAKqB,MALrB,EAMHK,IANG,CAME4iB,CANF,EAOHtgB,IAPG,CAOEa,CAPF,CAOQ0f,CAPR,CAOgBF,CAAO,CAACnc,CAAD,CAAP,CAAapD,CAAb,CAAiB,CAACyf,CAAM,CAAG,CAAV,EAAe,CAAhC,CAAoC,CAPpD,CAOuDpgB,CAPvD,CAxBmB,CAkCvBY,CAAE,CAAa,EAAV,CAAAZ,CAAI,CAAC,CAAD,CAAJ,CAAe,EAlCG,CAqC3B,GAAIY,CAAE,CAAGsf,CAAO,CAACnc,CAAD,CAAP,CAAatD,CAAlB,CAAsB,EAAtB,EAA4BxP,EAAhC,CAAwC,CACpCuP,CAAC,CAACvC,IAAF,CAAO,GAAP,CAAYhN,EAAM,CAAG2P,CAAT,EAAe3P,EAAM,CAAGivB,CAAO,CAACnc,CAAD,CAAP,CAAatD,CAArC,CAAZ,EACKlD,IADL,CACU4iB,CADV,EAEKtgB,IAFL,CAEUa,CAFV,CAEgB0f,CAFhB,CAEwBF,CAAO,CAACnc,CAAD,CAAP,CAAapD,CAAb,CAAiB,CAACyf,CAAM,CAAG,CAAV,EAAe,CAAhC,CAAoC,CAF5D,CAE+DpgB,CAF/D,CAGH,CAGD7E,CAAC,CAAC8C,IAAF,CAAO,IAAP,CAAa,KAAO8F,CAApB,EACK9F,IADL,CACU,GADV,CACeiiB,CAAO,CAACnc,CAAD,CAAP,CAAapD,CAAb,CAAiB,CAACyf,CAAM,CAAG,CAAV,EAAe,CAD/C,EAEKniB,IAFL,CAEU,GAFV,CAEe2C,CAAE,CAAGsf,CAAO,CAACnc,CAAD,CAAP,CAAatD,CAAlB,CAAsB,EAAtB,EAA4BxP,EAA5B,CAAqCivB,CAAO,CAACnc,CAAD,CAAP,CAAatD,CAAb,CAAiB,EAAtD,CACLxP,EAAM,CAAG2P,CAAT,CAAc,EAAd,EAAoB3P,EAAM,CAAGivB,CAAO,CAACnc,CAAD,CAAP,CAAatD,CAA1C,CAHV,EAIKxC,IAJL,CAIU,OAJV,CAImBmiB,CAAM,CAAG,EAJ5B,EAKKniB,IALL,CAKU,QALV,CAKoB2C,CALpB,EAMK1D,KANL,CAMW,QANX,CAMqB,OANrB,EAOKA,KAPL,CAOW,MAPX,CAOmB,QAPnB,EAUA,GAAIhK,EAAU,GAAKlB,EAAS,EAA0B,CAAtB,EAAAO,EAAlB,CAAV,EAC0B,IAA1B,GAAAsgB,EAAmB,EADvB,CACoC,CAEhCzhB,EAAU,CAAC2N,MAAX,GAGA,GAAI6N,CAAAA,CAAQ,CAAG,EAAf,CACI9Q,CADJ,CAEA,IAAKA,CAAC,CAAG,CAAT,CAAYA,CAAC,CAAGpK,EAAS,CAACiI,KAAV,CAAgBH,MAAhC,CAAwCsC,CAAC,EAAzC,CAA6C,CACzC,GAAI,CAACpK,EAAS,CAACiI,KAAV,CAAgBmC,CAAhB,EAAmBzB,OAAxB,CAAiC,CAC7BuS,CAAQ,CAAClb,EAAS,CAACiI,KAAV,CAAgBmC,CAAhB,EAAmBnD,EAApB,CAAR,CAAkC,CACrC,CACJ,CAGD,GAAI1C,CAAAA,CAAK,CAAG,EAAZ,CACImlB,CADJ,CAEIpY,CAFJ,CAGIqd,CAHJ,CAII1nB,CAJJ,CAKA,IAAKmD,CAAC,CAAGjK,EAAY,CAAC,CAAD,CAArB,CAA0BiK,CAAC,CAAGpK,EAAS,CAACkI,KAAV,CAAgBmK,CAAhB,EAAqBvK,MAAzB,EAAmCsC,CAAC,EAAIjK,EAAY,CAAC,CAAD,CAA9E,CAAmFiK,CAAC,EAApF,CAAwF,CAGpFsf,CAAI,CAAG1pB,EAAS,CAACkI,KAAV,CAAgBmK,CAAhB,EAAqBjI,CAArB,CAAP,CAEA,GAA0B,QAAtB,QAAOsf,CAAAA,CAAI,CAACtgB,MAAhB,CAAoC,CAChCkI,CAAG,CAAGhC,QAAQ,CAACoa,CAAI,CAACtgB,MAAN,CAAd,CACAulB,CAAG,CAAGrf,QAAQ,CAACoa,CAAI,CAACrgB,MAAN,CACjB,CAHD,IAGO,CACHiI,CAAG,CAAGoY,CAAI,CAACtgB,MAAL,CAAYnC,EAAlB,CACA0nB,CAAG,CAAGjF,CAAI,CAACrgB,MAAL,CAAYpC,EACrB,CAGD,GAAIiU,CAAQ,CAAC5J,CAAD,CAAR,EAAiB4J,CAAQ,CAACyT,CAAD,CAA7B,CAAoC,CAChC,QACH,CACD1nB,CAAE,CAAGqK,CAAG,CAAG,GAAN,CAAYqd,CAAjB,CAGA,GAAI,CAACpqB,CAAK,CAAC0C,CAAD,CAAV,CAAgB,CACZ1C,CAAK,CAAC0C,CAAD,CAAL,CAAY,CACf,CAFD,IAEO,CACH1C,CAAK,CAAC0C,CAAD,CAAL,EACH,CACJ,CAGD,GAAI2nB,CAAAA,CAAI,CAAG,EAAX,CACI7kB,CADJ,CAEId,CAAM,CAAGjJ,EAAS,CAACkI,KAAV,CAAgBmK,CAAhB,EAAqB,CAArB,EAAwBpJ,MAFrC,CAIA,IAAKygB,CAAL,GAAanlB,CAAAA,CAAb,CAAoB,CAChBwF,CAAK,CAAG2f,CAAI,CAAC3f,KAAL,CAAW,GAAX,CAAR,CAEA6kB,CAAI,CAACA,CAAI,CAAC9mB,MAAN,CAAJ,CAAoB,CAChBsB,MAAM,CAAEW,CAAK,CAAC,CAAD,CADG,CAEhBV,MAAM,CAAEU,CAAK,CAAC,CAAD,CAFG,CAGhBT,MAAM,CAAE/E,CAAK,CAACmlB,CAAD,CAHG,CAIhBzgB,MAAM,CAAEA,CAJQ,CAMvB,CAGD,IAAKmB,CAAC,CAAG,CAAT,CAAYA,CAAC,CAAGpK,EAAS,CAACuE,KAAV,CAAgBuD,MAAhC,CAAwCsC,CAAC,EAAzC,CAA6C,CACzCwkB,CAAI,CAACA,CAAI,CAAC9mB,MAAN,CAAJ,CAAoB9H,EAAS,CAACuE,KAAV,CAAgB6F,CAAhB,CACvB,CAGD5K,EAAU,CAACuL,KAAX,CAAiB,MAAjB,EAAyBxG,KAAzB,CAA+BqqB,CAA/B,EACA1hB,CAAS,CAAC0hB,CAAD,CAAT,CAEAnvB,EAAU,CACL+L,KADL,CACW,SADX,CACsB,OADtB,EAEKA,KAFL,CAEW,SAFX,CAEsB,CAFtB,EAIAhM,EAAU,CAAC4Z,OAAX,GACAtO,UAAU,CAAC,UAAW,CAClBtL,EAAU,CAACmO,IAAX,GACAlO,EAAU,CAACyqB,KAAX,GACAxqB,EAAU,CAACwqB,KAAX,EACH,CAJS,CAIP,CAJO,CAKb,CACJ,CAUD,QAASlJ,CAAAA,EAAT,CAAuB1W,CAAvB,CAA6BtC,CAA7B,CAAkCuR,CAAlC,CAA2C,CAGvC,GAAI,CAAC/X,EAAD,EACAyJ,QAAQ,CAACC,cAAT,CAAwB,WAAaZ,CAArC,CADA,EAE0B,IAA1B,GAAA6W,EAAmB,EAFvB,CAEoC,CAChC,MAEH,CALD,IAKO,IAAI,CAAC7gB,EAAD,EAAckB,EAAd,EAAkD,CAAtB,EAAAX,EAAhC,CAAyD,CAE5D,MACH,CAGD,GAAIwnB,CAAAA,CAAO,CAAGpd,QAAQ,CAACG,aAAT,CAAuB,UAAvB,CAAd,CACAid,CAAO,CAACphB,EAAR,CAAa,WAAaqD,CAA1B,CACA+d,CAAO,CAAC7c,KAAR,CAAcuiB,MAAd,CAAuB,MAAvB,CACA1F,CAAO,CAAC7c,KAAR,CAAcmF,QAAd,CAAyB,UAAzB,CAGA,GAAIhS,EAAQ,CAAC2L,CAAD,CAAZ,CAAoB,CAChB+d,CAAO,CAAC9c,KAAR,CAAgB5M,EAAQ,CAAC2L,CAAD,CAC3B,CAED,GAAI9G,EAAY,EAAIvF,EAApB,CAA4B,CACxBoqB,CAAO,CAAC7B,QAAR,GACH,CACDvb,QAAQ,CAAC+F,IAAT,CAAcpF,WAAd,CAA0Byc,CAA1B,EA3BuC,GA8BnCwG,CAAAA,CAAI,CAAGxG,CAAO,CAACvX,qBAAR,EA9B4B,CA+BnCF,CAAG,CAAG3F,QAAQ,CAAC4F,oBAAT,CAA8B,KAA9B,EAAqC,CAArC,EAAwCC,qBAAxC,EA/B6B,CAkCnCge,CAAG,CAAGvV,CAAO,CAAGtX,EAAS,CAAC+F,CAAD,CAAT,CAAeiH,CAAlB,CAAsBjN,EAAe,CAACgG,CAAD,CAAf,CAAqBiH,CAlCrB,CAmCnC8f,CAnCmC,CAoCvC,GAAID,CAAG,CAAGD,CAAI,CAACvvB,KAAL,CAAa,CAAnB,EAAwBA,EAA5B,CAAmC,CAC/ByvB,CAAG,CAAGD,CAAG,CAAGle,CAAG,CAAC3B,CAAV,CAAc4f,CAAI,CAACvvB,KAC5B,CAFD,IAEO,IAA4B,CAAxB,EAAAwvB,CAAG,CAAGD,CAAI,CAACvvB,KAAL,CAAa,CAAvB,CAA+B,CAClCyvB,CAAG,CAAGD,CAAG,CAAGle,CAAG,CAAC3B,CACnB,CAFM,IAEA,CACH8f,CAAG,CAAGD,CAAG,CAAGle,CAAG,CAAC3B,CAAV,CAAe4f,CAAI,CAACvvB,KAAL,CAAa,CACrC,CACD+oB,CAAO,CAAC7c,KAAR,CAAcgD,IAAd,CAAqBugB,CAAG,CAAG,IAA3B,CA3CuC,GA8CnCC,CAAAA,CAAG,CAAGzV,CAAO,CAAGtX,EAAS,CAAC+F,CAAD,CAAT,CAAe+G,CAAlB,CAAsB/M,EAAe,CAACgG,CAAD,CAAf,CAAqB+G,CA9CrB,CA+CnCkgB,CAAG,CAAGD,CAAG,CAAG,GAAN,EAAazvB,EAAb,CAAsByvB,CAAG,CAAG,GAA5B,CAAkCA,CAAG,CAAG,GA/CX,CAgDvC,GAAIzV,CAAJ,CAAa,CACT0V,CAAG,CAAGD,CAAG,CAAG,GAAN,EAAazvB,EAAb,CAAsByvB,CAAG,CAAG,GAA5B,CAAkCA,CAAG,CAAG,GACjD,CACD3G,CAAO,CAAC7c,KAAR,CAAc0F,GAAd,CAAoB+d,CAAG,CAAG,IAA1B,CAGA,GAAIC,CAAAA,CAAI,CAAGjkB,QAAQ,CAACG,aAAT,CAAuB,QAAvB,CAAX,CACA8jB,CAAI,CAACvjB,SAAL,CAAiBnI,EAAY,EAAIvF,EAAhB,CAAyBa,EAAW,CAACowB,IAArC,CAA4CpwB,EAAW,CAACmX,KAAzE,CACAiZ,CAAI,CAACjoB,EAAL,CAAUqD,CAAV,CAGA4kB,CAAI,CAAC1jB,KAAL,CAAWmF,QAAX,CAAsB,UAAtB,CACAue,CAAI,CAAC1jB,KAAL,CAAWgD,IAAX,CAAkBugB,CAAG,CAAG,IAAxB,CACAG,CAAI,CAAC1jB,KAAL,CAAW0F,GAAX,CAAkB+d,CAAG,CAAGJ,CAAI,CAACtvB,MAAZ,CAAsB,IAAvC,CAEA0L,QAAQ,CAAC+F,IAAT,CAAcpF,WAAd,CAA0BsjB,CAA1B,EAEA7G,CAAO,CAAC8G,KAAR,GAGA9G,CAAO,CAAC5c,gBAAR,CAAyB,OAAzB,CAAkC,UAAW,CAGzC,KAAK2jB,UAAL,CAAgBxjB,WAAhB,CAA4B,IAA5B,EACAsjB,CAAI,CAACE,UAAL,CAAgBxjB,WAAhB,CAA4BsjB,CAA5B,EAGA,KAAKC,KAAL,EACH,CARD,EAWA,GAAIE,CAAAA,CAAQ,GAAZ,CAEAhH,CAAO,CAAC5c,gBAAR,CAAyB,WAAzB,CAAsC,UAAW,CAC7C4jB,CAAQ,GACX,CAFD,EAIAhH,CAAO,CAAC5c,gBAAR,CAAyB,SAAzB,CAAoC,UAAW,CAC3C4jB,CAAQ,GACX,CAFD,EAIAhH,CAAO,CAAC5c,gBAAR,CAAyB,WAAzB,CAAsC,UAAW,CAC7C,GAAI4jB,CAAJ,CAAc,CACVR,CAAI,CAAG,KAAK/d,qBAAL,EAAP,CACAoe,CAAI,CAAC1jB,KAAL,CAAWgD,IAAX,CAAkBugB,CAAG,CAAG,IAAxB,CACAG,CAAI,CAAC1jB,KAAL,CAAW0F,GAAX,CAAkB+d,CAAG,CAAGJ,CAAI,CAACtvB,MAAZ,CAAsB,IAC1C,CACJ,CAND,EASA2vB,CAAI,CAACzjB,gBAAL,CAAsB,OAAtB,CAA+B,UAAW,CAEtC,GAAIjI,EAAY,EAAIvF,EAApB,CAA4B,CAGxB,GAAIqK,CAAAA,CAAI,CAAG,CACP,SAAa5J,EADN,CAEP,UAAauE,EAAU,CAACgc,SAFjB,CAGP,UAAa3U,CAHN,CAIP,OAAa+d,CAAO,CAAC9c,KAJd,CAAX,CAQA,GAAqB,EAAjB,EAAA8c,CAAO,CAAC9c,KAAR,EAAuB8c,CAAO,CAAC9c,KAAR,EAAiB5M,EAAQ,CAAC2L,CAAD,CAApD,CAA4D,CAExD3L,EAAQ,CAAC2L,CAAD,CAAR,CAAiB+d,CAAO,CAAC9c,KAAzB,CACAyH,CAAU,CAAClW,EAAD,CAAiBwL,CAAjB,CACb,CACJ,CAED2C,QAAQ,CAAC+F,IAAT,CAAc8E,WAAd,CAA0BuS,CAA1B,EACApd,QAAQ,CAAC+F,IAAT,CAAc8E,WAAd,CAA0BoZ,CAA1B,CACH,CAtBD,CAuBH,CAEDprB,CAAI,CAACnH,CAAD,CACP,CAEJ,CAjmMD","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * File to render and control the graphing and clustering on the client side.\n * This file also controls the module node positioning stage of the plugin as\n * well as the replaying of clustering.\n *\n * @package block_behaviour\n * @author Ted Krahn\n * @copyright 2019 Athabasca University\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n(function(factory) {\n    if (typeof define === \"function\" && define.amd) {\n        // AMD. Register as an anonymous module.\n        define([], factory);\n    } else {\n        // Browser globals.\n        window.behaviourAnalytics = factory();\n    }\n})(function() {\n\n    var behaviourAnalytics = function(incoming) {\n\n        // These variables are the server-side scripts that are called.\n        var coordsScript, // Updates the node coordinates during node positioning.\n            clustersScript, // Updates the clustering results and membership changes.\n            commentsScript, // Updates the teacher comments about centroids.\n            manualScript, // Updates manual clustering during replay.\n            deleteScript; // Deletes the selected clustering data.\n\n        // These variables get their values from the server data.\n        var logs, // Array of all logs from the server.\n            users, // Array of user data from server.\n            groups, // Array of group names indexed on group id.\n            groupMembers, // Array of group id indexed on student id.\n            groupMenu, // Group selection menu.\n            modules, // Array of module information.\n            panelWidth, // Width of left menu panel.\n            legendWidth, // Width of right legend panel.\n            courseName, // Name of the course.\n            iframeURL, // Server prefix for iframes.\n            positioning, // Boolean flag indicates regular graphing or node positioning.\n            originalPositioning, // Other positioning flag gets changed, but need to know original value.\n            presetNodes, // Predetermined node coordinates from server.\n            lordLinks, // When integrated with LORD plugin, need links between nodes.\n            coordsScale, // Scale value used for normalizing preset nodes.\n            courseId, // Course id number.\n            userId, // Teacher user id number.\n            allGraphs, // For researcher role, all other teachers graphs.\n            allLinks, // For researcher role, all LORD link sets.\n            allScales, // For researcher role, all teachers scales.\n            allChanges, // For researcher role, all teachers change times.\n            allNames, // For researcher role, all teachers usernames.\n            allMods, // For researcher role, all users mods (node coords).\n            allSetNames, // For researcher role, all dataset names\n            allsKey, // For researcher role, current key into previous arrays.\n            lastChange, // Time of last node positioning change.\n            comments, // Any comments this teacher user has made during clustering.\n            realUserIds, // Map of anonymized id to real id.\n            anonUserIds, // Map of real user ids to anonymous ids.\n            langStrings, // An array of language dependent strings.\n            sessionKey, // The session key gets sent back to the server to avoid CSRF.\n            originalReplayData; // The replay data.\n\n        // These variables are external packages used in the plugin.\n        var ddd, // D3 package.\n            trans, // D3 transition.\n            slider, // The noUiSlider package.\n            prng; // Psuedo random number generator, i.e. Mersenne Twister package.\n\n        // Main graphing variables.\n        var graph, // The main graph.\n            width, // The graph width.\n            height, // The graph height.\n            simulation, // The force directed simulation.\n            graphNodes, // The graph nodes.\n            graphLinks, // The graph links.\n            linkForce, // The link force in simulation.\n            defaultWeight, // The default link weight.\n            linkAlpha, // The base alpha value.\n            dragAlpha, // The alpha when dragging.\n            dragEndAlpha, // The alpha when done dragging.\n            graphData; // The node and link data.\n\n        // The main UI variables.\n        var studentMenu, // Student select menu used in graphing.\n            timeSlider, // The time slider used in graphing.\n            sliderValues, // Values on time slider.\n            sliderHeight, // Height of time slider.\n            clusterButton, // Cluster/graph button to switch between graphing/clustering.\n            replaying, // Clustering replay flag.\n            replayMenu, // Clustering replay menu of clustering runs.\n            replayData, // Clustering replay data, iterations of current clustering.\n            replayCentroid, // Clustering replay centroid and scale data.\n            positiveIters, // Clustering replay, number of positive value iterations.\n            negativeIters, // Clustering replay, number of negative value iterations.\n            clusterSlider, // The clustering slider used in clustering.\n            clusterSliderValue, // Value of cluster slider.\n            clusterSliderPanelWidth, // Width of cluster slider.\n            logPanel, // Text area log panel used in clustsering.\n            nodeLegend, // Hiearchical legend used in node positioning.\n            nodeBoxes, // Node checkboxes in node legend.\n            teacherMenu; // Teacher select menu used in positioning (researchers).\n\n        // Other variables.\n        var colours, // Array of html colours for user links and hulls.\n            colourIndex, // Index of current colour in colours.\n            modColours, // Module colours for nodes.\n            centroidColours, // Array of colours for centroids.\n            graphing, // Are we graphing or clustering?\n            clustering, // Are we clustering or just in clustering stage?\n            clusterIters, // Number of cluster iterations.\n            clusterAnimInterval, // Clustering animation interval.\n            useDefaultConcave, // Should use default setting for hull?\n            concaveHullDistance, // If not use default, then need new distance.\n            curveType, // Type of curve for line drawing.\n            hullOpacity, // Opacity for hulls.\n            hullCentroids, // Centroids of student hulls.\n            scaledCentroids, // Centroids after scaling.\n            centroids, // Current clustering centroids.\n            oldCentroids, // Centroids from last clustering iteration.\n            noCentroidMouse, // Flag for setting and unsetting mouse listeners.\n            noNodeMouse, // Flag for setting and unsetting mouse listeners.\n            iframeStaticPos, // Flag to place iframe at window edge/below node.\n            iframeRight, // Flag to position an iframe on the right side.\n            inIframe, // Flag to remove iframe or not.\n            version36, // Flag for log panel styling, and iframe offset, different in 3.6.\n            showStudentNames, // Flag to show student names or sequential ids.\n            convergenceDistance, // Mean distance between old centroids and new.\n            dragEndTime, // Time dragging was stopped.\n            dragstartedFunc, // Node drag started function.\n            draggedFunc, // Node dragging function.\n            dragendedFunc, // Node drag ended function.\n            rightClickFunc, // Node right click function.\n            nodeRadius, // Size of module nodes, smaller if smaller screen.\n            coordsData, // Holds data about the module coordinates.\n            animTime, // Animation delay.\n            gotAllNodes; // Flag to determine if there are new nodes to consider.\n\n        var manualClusters = {}, // Keeps clustering data for manual clustering during replay.\n            manualCentroids = [], // Keeps centroid data for manual clustering during replay.\n            haveManualClustering, // Flag to see if manual clustering has been done.\n            centroidDragTime, // Student centroids can be clicked or dragged, short drag == click.\n            replayUserId, // Other users data is seen when researcher runs replay, keep track.\n            isResearcher; // Flag to show or not the clustering measures.\n\n        var clickData, // The student click data.\n            useGeometricCentroids; // Flag to determine how to calculate centroids.\n\n        // Debugging.\n        var debugCentroids, // Turn on/off centroid debugging.\n            serverCentroids; // Copy of centroid values calculated at server.\n\n        /**\n         * Initialize the program. This function sets various default values and\n         * initializes various variables, then calls the necessary functions to run the\n         * program.\n         *\n         * @param {array} incoming - Data from server\n         */\n        function init(incoming) {\n\n            // Get incoming data from the server.\n            logs = incoming.logs;\n            users = incoming.users;\n            groups = incoming.groups;\n            groupMembers = incoming.members;\n            modules = incoming.mods;\n            panelWidth = incoming.panelwidth;\n            legendWidth = incoming.legendwidth;\n            courseName = incoming.name;\n            iframeURL = incoming.iframeurl;\n            version36 = incoming.version36;\n            showStudentNames = incoming.showstudentnames;\n            positioning = incoming.positioning;\n            originalPositioning = incoming.positioning;\n            presetNodes = incoming.nodecoords;\n            lordLinks = incoming.links;\n            courseId = incoming.courseid;\n            userId = incoming.userid;\n            coordsScale = incoming.scale;\n            allGraphs = incoming.graphs;\n            allLinks = incoming.alllinks;\n            allScales = incoming.scales;\n            allChanges = incoming.changes;\n            allNames = incoming.names;\n            allMods = incoming.allmods;\n            allSetNames = incoming.setnames;\n            allsKey = userId;\n            lastChange = incoming.lastchange;\n            comments = incoming.comments;\n            langStrings = incoming.strings;\n            coordsScript = incoming.coordsscript;\n            clustersScript = incoming.clustersscript;\n            commentsScript = incoming.commentsscript;\n            manualScript = incoming.manualscript;\n            deleteScript = incoming.deletescript;\n            sessionKey = incoming.sesskey;\n            gotAllNodes = incoming.gotallnodes;\n            replaying = incoming.replaying;\n            debugCentroids = incoming.debugcentroids;\n            serverCentroids = incoming.centroids;\n            isResearcher = incoming.isresearcher;\n            replayUserId = userId;\n            originalReplayData = incoming.replaydata;\n\n            // Get external packages.\n            ddd = window.dataDrivenDocs;\n            slider = window.noUiSlider;\n            var MT = window.mersenneTwister;\n            prng = new MT(259);\n\n            // Get base values for various variables.\n            colourIndex = 0;\n            colours = getColours();\n\n            dragEndTime = Date.now() + 3000;\n            animTime = 1000;\n            trans = ddd.transition().duration(animTime).ease(ddd.easeLinear);\n\n            // Should be dynamic sizes?\n            clusterSliderPanelWidth = 120;\n\n            convergenceDistance = 1;\n\n            dragEndAlpha = 0.0001;\n            defaultWeight = 1.0;\n\n            rightClickFunc = rightClick;\n\n            useDefaultConcave = false;\n            concaveHullDistance = 220;\n            hullOpacity = 0.15;\n            // A curveType = ddd.curveLinearClosed; // Good, angled corners.\n            curveType = ddd.curveCatmullRomClosed; // Good, rounded corners.\n\n            useGeometricCentroids = true;\n\n            nodeBoxes = {};\n            coordsData = {};\n\n            modColours = {\n                'originalLinks': 'lightgrey', // Removed from colours[].\n                'grouping':      'black', // Removed from colours[].\n                'assign':        'blue',\n                'quiz':          'red',\n                'forum':         'orange',\n                'resource':      'green',\n                'lti':           'yellow',\n                'url':           'purple',\n                'book':          'magenta',\n                'page':          'cyan',\n                'lesson':        'brown',\n                'data':          'coral',\n                'chat':          'maroon',\n                'choice':        'grey',\n                'feedback':      'lime',\n                'glossary':      'navy',\n                'survey':        'tan',\n                'wiki':          'teal',\n                'workshop':      'silver',\n                'scorm':         'tomato',\n                'imscp':         'lightpink',\n                'folder':        'peru',\n            };\n\n            centroidColours = ['blue', 'red', 'orange', 'green', 'yellow', 'brown',\n                               'purple', 'magenta', 'cyan'];\n\n            // Basic dimensions.\n            sliderHeight = positioning ? 0 : 36;\n            panelWidth = positioning ? 0 : panelWidth;\n\n            width = window.innerWidth - clusterSliderPanelWidth - legendWidth - 150;\n            height = window.innerHeight - sliderHeight - 90;\n\n            nodeRadius = Math.min(width, height) < 450 ? 6 : 8;\n\n            // Create map for anonymized id to real id.\n            realUserIds = {};\n            users.forEach(function(u) {\n                realUserIds[u.id] = u.realId;\n            });\n\n            // Init some other stuff.\n            assignModuleColours();\n            getData();\n\n            if (replaying) {\n                doClusterReplay(incoming.manualdata);\n            } else if (positioning) {\n                initPositioning();\n            } else {\n                initGraphing();\n            }\n        }\n\n        // Change english names to hex values.\n        /**\n         * Returns an array of select (darker) html colour names taken from\n         * https://www.w3schools.com/colors/colors_names.asp.\n         *\n         * @return {array}\n         */\n        function getColours() {\n\n            var c = ['aqua', 'blue', 'blueviolet', 'brown',\n                     'cadetblue', 'chartreuse', 'chocolate', 'coral', 'cornflowerblue',\n                     'crimson', 'cyan', 'darkblue', 'darkcyan', 'darkgoldenrod',\n                     'darkgrey', 'darkgreen', 'darkmagenta', 'darkolivegreen',\n                     'darkorange', 'darkorchid', 'darkred', 'darksalmon',\n                     'darkseagreen', 'darkslateblue', 'darkslategrey', 'darkturquoise',\n                     'darkviolet', 'deeppink', 'deepskyblue', 'dimgrey', 'dodgerblue',\n                     'firebrick', 'forestgreen', 'fuchsia', 'gold', 'goldenrod', 'grey',\n                     'green', 'greenyellow', 'hotpink', 'indianred', 'indigo', 'khaki',\n                     'lawngreen', 'lightblue', 'lightcoral', 'lightgreen',\n                     'lightpink', 'lightsalmon', 'lightseagreen', 'lightskyblue',\n                     'lightslategrey', 'lightsteelblue', 'lime', 'limegreen', 'magenta',\n                     'maroon', 'mediumaquamarine', 'mediumblue', 'mediumorchid',\n                     'mediumpurple', 'mediumseagreen', 'mediumslateblue',\n                     'mediumspringgreen', 'mediumturquoise', 'mediumvioletred',\n                     'midnightblue', 'navy', 'olive', 'olivedrab', 'orange', 'orangered',\n                     'orchid', 'palegreen', 'paleturquoise', 'palevioletred', 'peru',\n                     'plum', 'powderblue', 'purple', 'rebeccapurple', 'red', 'rosybrown',\n                     'royalblue', 'saddlebrown', 'salmon', 'sandybrown', 'seagreen',\n                     'sienna', 'silver', 'skyblue', 'slateblue', 'slategrey',\n                     'springgreen', 'steelblue', 'tan', 'teal', 'thistle', 'tomato',\n                     'turquoise', 'violet', 'yellow', 'yellowgreen'];\n            return c;\n        }\n\n        /**\n         * Ensure all module types have assigned colour. This will account for unknown\n         * module types.\n         */\n        function assignModuleColours() {\n\n            modules.forEach(function(m) {\n                while (!modColours[m.entype]) {\n\n                    // Pick random colour, but make sure it is not a duplicate.\n                    var c = colours[Math.floor(prng.random() * colours.length)];\n                    var isOKColour = true;\n\n                    for (var key in modColours) {\n                        if (modColours[key] == c) {\n                            isOKColour = false;\n                        }\n                    }\n                    modColours[m.entype] = isOKColour ? c : undefined;\n                }\n            });\n        }\n\n        /**\n         * Makes the node and link data from the information passed by the server.\n         */\n        function getData() {\n\n            graphData = {nodes: [], links: [], edges: {}, maxSession: 0};\n\n            makeNodeData();\n            makeStudentLinks();\n        }\n\n        /**\n         * Makes the node data for the graph and the link data for the links that\n         * connect the nodes to their sections.\n         */\n        function makeNodeData() {\n\n            var data = graphData;\n            var ob = {},\n                vis,\n                xc,\n                yc;\n\n            // Make nodes from modules.\n            modules.forEach(function(m) {\n\n                vis = true;\n                xc = undefined;\n                yc = undefined;\n\n                if (presetNodes[m.id]) {\n                    // Ensure group node visible as well, for new nodes.\n                    vis = presetNodes[m.id].visible == 1 &&\n                        presetNodes['g' + m.sect].visible == 1 ? true : false;\n                    if (presetNodes[m.id].visible == 1 && !vis) {\n                        presetNodes[m.id].visible = 0;\n                    }\n                    xc = presetNodes[m.id].xcoord;\n                    yc = presetNodes[m.id].ycoord;\n\n                } else if (presetNodes['g' + m.sect]) {\n                    // New resource in course, but no node data.\n                    vis = presetNodes['g' + m.sect].visible == 1 &&\n                        userId == allsKey ? true : false;\n                }\n\n                data.nodes[data.nodes.length] = {\n                    id:      m.id,\n                    name:    m.name,\n                    group:   m.sect,\n                    type:    m.type,\n                    entype:  m.entype,\n                    colour:  modColours[m.entype],\n                    visible: vis,\n                    xcoord:  xc,\n                    ycoord:  yc\n                };\n\n                // Make nodes for grouping by section.\n                if (!ob[m.sect]) {\n                    if (presetNodes['g' + m.sect]) {\n\n                        vis = presetNodes['g' + m.sect].visible == 1 ? true : false;\n                        xc = presetNodes['g' + m.sect].xcoord;\n                        yc = presetNodes['g' + m.sect].ycoord;\n                    }\n\n                    ob[m.sect] = {\n                        id:      'g' + m.sect,\n                        name:    langStrings.section + ' ' + m.sect,\n                        group:   m.sect,\n                        type:    'grouping',\n                        colour:  modColours.grouping,\n                        visible: vis,\n                        xcoord:  xc,\n                        ycoord:  yc\n                    };\n\n                    data.nodes[data.nodes.length] = ob[m.sect];\n                }\n\n                // Link module nodes to group nodes.\n                data.links[data.links.length] = {\n                    source: 'g' + m.sect,\n                    target: m.id,\n                    weight: defaultWeight,\n                    colour: modColours.originalLinks\n                };\n            });\n\n            xc = yc = undefined;\n\n            // Make root node for course.\n            if (presetNodes.root) {\n                xc = presetNodes.root.xcoord;\n                yc = presetNodes.root.ycoord;\n            }\n\n            var r = {\n                id:      'root',\n                name:    courseName,\n                group:   -1,\n                type:    'grouping',\n                colour:  modColours.grouping,\n                visible: true,\n                xcoord:  xc,\n                ycoord:  yc\n            };\n\n            // Link other group nodes to root course node.\n            for (var o in ob) {\n                data.links[data.links.length] = {\n                    source: 'root',\n                    target: ob[o].id,\n                    weight: defaultWeight,\n                    colour: modColours.originalLinks\n                };\n            }\n\n            data.nodes[data.nodes.length] = r;\n\n            // When integrated with LORD plugin, make links between nodes instead\n            // of grouping by section to keep the graph consistent with LORD.\n            if (Object.keys(lordLinks).length > 0) {\n\n                var m1,\n                    m2,\n                    split;\n\n                for (var l in lordLinks) {\n                    split = l.split('_');\n                    m1 = split[0];\n                    m2 = split[1];\n\n                    data.links[data.links.length] = {\n                        source: m1,\n                        target: m2,\n                        weight: lordLinks[l] * 5.0,\n                        colour: modColours.originalLinks\n                    };\n                }\n\n                // Do not render grouping nodes, unless in positioning stage.\n                if (!originalPositioning) {\n                    for (var n in data.nodes) {\n                        if (isNaN(data.nodes[n].id)) {\n                            data.nodes[n].visible = false;\n                        }\n                    }\n                }\n            }\n        }\n\n        /**\n         * Makes the student link data for the graph and finds max time slider value.\n         */\n        function makeStudentLinks() {\n\n            var data = graphData,\n                m = 0,\n                n = 0,\n                edge;\n            clickData = {};\n\n            // Go through the logs to make the student link sets.\n            for (var i = 0; i < logs.length; i++) {\n\n                edge = {\n                    source: logs[i].moduleId,\n                    target: logs[i].moduleId,\n                    weight: defaultWeight,\n                    user:   logs[i].userId,\n                    colour: \"\"\n                };\n                // Have not seen this user yet, create initial array.\n                if (!data.edges[logs[i].userId]) {\n\n                    data.edges[logs[i].userId] = [];\n                    clickData[logs[i].userId] = [];\n                    data.maxSession = data.maxSession < m ? m : data.maxSession;\n                    m = 0; n = 0;\n                }\n\n                if (presetNodes[logs[i].moduleId] && presetNodes[logs[i].moduleId].visible == 1) {\n                    clickData[logs[i].userId][n++] = logs[i].moduleId;\n                }\n\n                // Make the link.\n                if (i + 1 < logs.length && logs[i].userId == logs[i + 1].userId) {\n\n                    edge.target = logs[i + 1].moduleId;\n                    data.edges[logs[i].userId][m++] = edge;\n\n                } else if (data.edges[logs[i].userId].length == 0) {\n                    // Student clicked only 1 thing, not enough to make a link, fake it.\n                    data.edges[logs[i].userId][m++] = edge;\n                }\n            }\n            data.maxSession = data.maxSession < m ? m : data.maxSession;\n\n            // Handle case where the user has no records.\n            users.forEach(function(u) {\n                if (!data.edges[u.id]) {\n                    data.edges[u.id] = [];\n                }\n            });\n        }\n\n        /**\n         * Function called for node positioning stage.\n         */\n        function initPositioning() {\n\n            graphing = false;\n\n            linkAlpha = 0.01;\n            dragAlpha = 0.01;\n\n            dragstartedFunc = dragstarted;\n            draggedFunc = dragged;\n            dragendedFunc = dragended;\n\n            // Have preset node coordinates to use for graph.\n            if (gotAllNodes && Object.keys(presetNodes).length > 0) {\n                defaultWeight = 0;\n            }\n\n            // Is user researcher?\n            if (allGraphs && allScales) {\n                makeTeacherMenu();\n            }\n\n            initGraph(0.6);\n            makeNodeLegend();\n            makeWeightControl();\n\n            setTimeout(function() {\n                simulation.force('charge', null)\n                    .force('x', null)\n                    .force('y', null);\n            }, 500);\n        }\n\n        /**\n         * This function renders the slider to control the link weights during\n         * the node positioning stage.\n         */\n        function makeWeightControl() {\n\n            var sm = document.getElementById('student-menu');\n\n            // The actual slider element.\n            var weightSlider = document.createElement('input');\n            weightSlider.id = 'weight-slider';\n            weightSlider.type = 'range';\n            weightSlider.min = '-0.2';\n            weightSlider.max = '2';\n            weightSlider.step = '0.2';\n            weightSlider.value = '0.6';\n            weightSlider.style.width = '130px';\n            weightSlider.addEventListener('change', function() {\n                linkForce.strength(this.value);\n                document.getElementById('weights-output').innerHTML = '&nbsp;= ' + this.value;\n            });\n            sm.appendChild(weightSlider);\n\n            // The label for the slider.\n            var text = document.createTextNode(langStrings.linksweight);\n            sm.appendChild(text);\n\n            text = document.createElement('label');\n            text.id = 'weights-output';\n            text.innerHTML = '&nbsp;= ' + weightSlider.value;\n            sm.appendChild(text);\n        }\n\n        /**\n         * Function called for regular graphing and clustering stage.\n         */\n        function initGraphing() {\n\n            graphing = true;\n            positioning = true;\n\n            linkAlpha = 0;\n\n            dragstartedFunc = null;\n            draggedFunc = null;\n            dragendedFunc = null;\n\n            // Trying to graph and cluster without configuring nodes first, give default.\n            if (!gotAllNodes || Object.keys(presetNodes).length == 0) {\n                initGraph(0.6);\n\n                setTimeout(function() {\n                    var h = makeClusterButton();\n                    makeGroupMenu();\n                    makeStudentMenu(h);\n                    makeTimeSlider();\n                }, 500);\n            } else {\n                // Already have preset nodes to work with.\n                var h = makeClusterButton();\n                makeGroupMenu();\n                makeStudentMenu(h);\n                initGraph(0);\n                makeTimeSlider();\n            }\n\n            linkForce = null;\n        }\n\n        /**\n         * Makes the basic initial graph.\n         *\n         * @param {number} strength - The strength value for the link force.\n         */\n        function initGraph(strength) {\n\n            // The actual graph.\n            graph = ddd.select('#graph')\n                .append('svg')\n                .attr('width', width)\n                .attr('height', height);\n\n            // The link force and simulation.\n            linkForce = ddd.forceLink(graphData.links)\n                .id(function(d) {\n                    return d.id;\n                })\n                .strength(strength);\n\n            simulation = ddd.forceSimulation(graphData.nodes)\n                .force(\"link\", linkForce)\n                .force(\"charge\", ddd.forceManyBody().strength(-80))\n                .force(\"collide\", ddd.forceCollide().radius(12))\n                .force(\"center\", ddd.forceCenter(width / 2, height / 2))\n                .force('x', ddd.forceX())\n                .force('y', ddd.forceY());\n\n            // The nodes.\n            makeNodes(graphData.nodes, rightClickFunc, dragstartedFunc, draggedFunc, dragendedFunc);\n\n            // The links.\n            makeLinks(graphData.links);\n\n            // Remove text boxes if user clicks anywhere else, mostly for right click pop-ups.\n            graph.on('click', function() {\n\n                // Remove the right click menu.\n                ddd.selectAll('#rctext').remove();\n                ddd.selectAll('#rcrect').remove();\n\n                // Replace mouse listeners.\n                if (graphing || positioning) {\n                    graphNodes\n                        .on('mouseover', mouseover)\n                        .on('mouseout', mouseout);\n                }\n                if (replaying) {\n                    graphNodes\n                        .on('mouseover', null)\n                        .on('mouseout', null);\n                }\n            });\n\n            // Assign initial tick function.\n            if (gotAllNodes && positioning &&\n                       Object.keys(presetNodes).length > 0) {\n                simulation.on('tick', tick1);\n            } else {\n                simulation.on('tick', tick2);\n            }\n\n            // Advance the graph a little so it needs to move less at start.\n            for (var i = 0; i < 80; i++) {\n                simulation.tick();\n            }\n\n            // Stop simulation and switch tick functions.\n            if (positioning) {\n                setTimeout(function() {\n\n                    simulation.stop();\n                    simulation.on('tick', tick2);\n                    drawTime();\n\n                    // If we have no preset coords for this course, make some.\n                    if (Object.keys(presetNodes).length == 0 || !gotAllNodes) {\n                        sendCoordsToServer();\n                        graphData.edges = {};\n                        makeStudentLinks();\n                        gotAllNodes = true;\n                        defaultWeight = graphing ? 1 : 0;\n                    }\n                }, 500);\n            }\n\n            // Ensure any newly introduced nodes are rendered properly.\n            if (graphing && !gotAllNodes) {\n                setTimeout(function() {\n                    graphData.nodes = [];\n                    graphData.links = [];\n                    makeNodeData();\n                }, 600);\n            }\n        }\n\n        /**\n         * Function to make the nodes for the graph.\n         *\n         * @param {array} nodes - The nodes data\n         * @param {function} rclick - Right click function to assign to the nodes\n         * @param {function} dstart - Drag started function\n         * @param {function} drag - Dragging function\n         * @param {function} dend - Drag ended function\n         */\n        function makeNodes(nodes, rclick, dstart, drag, dend) {\n\n            graphNodes = graph.selectAll(\".node\")\n                .data(nodes)\n                .enter().append(\"circle\")\n                .attr('class', 'node')\n                .attr(\"r\", nodeRadius)\n                .on('mouseover', mouseover)\n                .on('mouseout', mouseout)\n                .on('contextmenu', rclick)\n                .call(ddd.drag()\n                      .on('start', dstart)\n                      .on('drag', drag)\n                      .on('end', dend));\n        }\n\n        /**\n         * Function to make the links for the graph.\n         *\n         * @param {array} links - The link data\n         */\n        function makeLinks(links) {\n\n            graphLinks = graph.selectAll(\".link\")\n                .data(links)\n                .enter().append(\"line\")\n                .attr(\"class\", \"link\")\n                .style('stroke', function(d) {\n                    return d.colour;\n                })\n                .style(\"stroke-width\", function(d) {\n                    return (d.weight * 2) + 'px';\n                });\n        }\n\n        /**\n         * Event listener for mouse hovering over nodes. Shows the text box and iframe preview.\n         *\n         * @param {object} node - Node that is dragged\n         * @param {boolean} keepText - Flag to keep text on screen or not\n         */\n        function mouseover(node, keepText) {\n\n            if (noNodeMouse) {\n                return;\n            }\n\n            graphNodes.on('mouseover', null);\n\n            if (!keepText) {\n                ddd.selectAll('.text').remove();\n                ddd.selectAll('rect').remove();\n            }\n\n            // Fixes a bug where text box shows even though it should not.\n            if (Date.now() - dragEndTime < 150) {\n                return;\n            }\n\n            var rtrn = [0],\n                up = false,\n                left = false,\n                right = false;\n            var rwidth = 150,\n                ifwidth = 304,\n                ifheight = 154;\n            var txt = node.type + ': ' + node.name;\n\n            if (iframeStaticPos) {\n                ifwidth = 0;\n                ifheight = 0;\n            }\n\n            // Make the text.\n            var t = graph.append('text')\n                .attr('class', 'text')\n                .attr('id', 't-' + node.id)\n                .attr('y', node.y + 32)\n                .attr('dy', '.40em')\n                .style('pointer-events', 'none')\n                .text(txt)\n                .call(wrap, rwidth, node.x - (rwidth + 6) / 2 + 8, rtrn);\n\n            // Get rectangle height.\n            var rh = rtrn[0] * 16 + 16;\n\n            // If node near bottom of graph area, move text above node.\n            if (rh + node.y >= height - ifheight) {\n                t.attr('y', height - rh - (height - node.y))\n                    .text(txt)\n                    .call(wrap, rwidth, node.x - (rwidth + 6) / 2 + 8, rtrn);\n                up = true;\n            }\n\n            // Move if near right or left edge.\n            if (node.x <= ifwidth / 2) {\n                t.text(txt).call(wrap, rwidth, node.x + 8, rtrn);\n                right = true;\n            } else if (node.x >= width - ifwidth / 2) {\n                t.text(txt).call(wrap, rwidth, node.x - (rwidth + 6) + 8, rtrn);\n                left = true;\n            }\n\n            // Make the rectange background.\n            var attrX;\n            if (right) {\n                attrX = node.x;\n            } else if (left) {\n                attrX = node.x - (rwidth + 6);\n            } else {\n                attrX = node.x - (rwidth + 6) / 2;\n            }\n\n            var r = graph.append('rect')\n                .attr('id', 'r-' + node.id)\n                .attr('x', attrX)\n                .attr('y', up ? height - rh - 16 - (height - node.y) : node.y + 16)\n                .attr('width', rwidth + 16)\n                .attr('height', rh)\n                .style('stroke', 'black')\n                .style('fill', 'yellow');\n\n            t.raise();\n\n            // Only for module nodes, not section nodes, show page preview.\n            if (!isNaN(node.id)) {\n\n                if (iframeStaticPos) {\n                    ifwidth = 400;\n                    ifheight = 300;\n                }\n                makeIframe(node, rh, rwidth, ifwidth, ifheight, up, right, left,\n                           parseInt(r.attr('x')), parseInt(r.attr('y')));\n            }\n        }\n\n        /**\n         * Called to wrap long text into predefined width.\n         * Adapted from https://bl.ocks.org/mbostock/7555321\n         *\n         * @param {string} text - The text to wrap\n         * @param {number} rectWidth - The predefined width\n         * @param {number} xOffset - The offset of the x value\n         * @param {array} rtrn - Stores the return value\n         */\n        function wrap(text, rectWidth, xOffset, rtrn) {\n\n            var lineNumber = 0;\n\n            text.each(function() {\n\n                // The variables needed.\n                var text = ddd.select(this),\n                    words = text.text().split(/\\s+/).reverse(),\n                    word,\n                    line = [],\n                    lineHeight = 1.1, // In ems.\n                    y = text.attr(\"y\"),\n                    dy = parseFloat(text.attr(\"dy\"));\n\n                var tspan = text.text(null)\n                    .append(\"tspan\")\n                    .attr(\"x\", xOffset)\n                    .attr(\"y\", y)\n                    .attr(\"dy\", dy + \"em\");\n\n                // While there are words to wrap.\n                word = words.pop();\n                while (word) {\n\n                    line.push(word);\n                    tspan.text(line.join(\" \"));\n\n                    // If the length of the line is too long.\n                    if (tspan.node().getComputedTextLength() > rectWidth) {\n\n                        line.pop();\n                        tspan.text(line.join(\" \"));\n\n                        line = [word];\n\n                        tspan = text.append(\"tspan\")\n                            .attr(\"x\", xOffset)\n                            .attr(\"y\", y)\n                            .attr(\"dy\", (++lineNumber * lineHeight + dy) + \"em\")\n                            .text(word);\n                    }\n                    word = words.pop();\n                }\n            });\n\n            rtrn[0] = ++lineNumber;\n        }\n\n        /**\n         * Function to make an iframe preview for a module node.\n         *\n         * @param {number} node - The module id of the associated node\n         * @param {number} rectH - The height of the node's text box\n         * @param {number} rectW - The width of the nodes text box\n         * @param {number} ifwidth - Iframe width\n         * @param {number} ifheight - Iframe height\n         * @param {boolean} up - If node near bottom, move up\n         * @param {boolean} right - If node near left side, move right\n         * @param {boolean} left - If node near right side, move left\n         * @param {number} rectX - Rectangle background x coordinate value\n         * @param {number} rectY - Rectangle background y coordinate value\n         */\n        function makeIframe(node, rectH, rectW, ifwidth, ifheight, up, right, left, rectX, rectY) {\n\n            // Create the iframe.\n            var iframe = document.createElement('iframe');\n            iframe.id = 'preview';\n\n            iframe.style.position = 'absolute';\n            iframe.style.width = ifwidth + 'px';\n            iframe.style.height = ifheight + 'px';\n\n            // Position relative to the node and text box considering the window offset of the graph.\n            var gbb = document.getElementsByTagName('svg')[0].getBoundingClientRect();\n            // ... and the body offset in the page.\n            var bbb = document.body.getBoundingClientRect();\n\n            // Fixes bug where iframe too low when page scrolled to top.\n            if (bbb.x > 0) {\n                bbb.x = 0;\n            }\n\n            // Iframe may be placed statically at right side or statically at left side\n            // or need to move right or left or remain centered.\n            if (iframeRight) {\n                iframe.style.left = (window.innerWidth - 10 - ifwidth) + 'px';\n            } else if (iframeStaticPos) {\n                iframe.style.left = '10px';\n            } else if (right) {\n                iframe.style.left = (rectX + gbb.x) + 'px';\n            } else if (left) {\n                iframe.style.left = (rectX + gbb.x + rectW - ifwidth + 18) + 'px';\n            } else {\n                iframe.style.left = (rectX + gbb.x - (ifwidth / 2) + (rectW / 2)) + 'px';\n            }\n\n            var yoffset = version36 ? 0 : 50;\n\n            // May need to be placed statically or moved up or remain under.\n            if (iframeStaticPos) {\n                iframe.style.top = (gbb.y - bbb.y + (height / 2)) + 'px';\n            } else if (up) {\n                iframe.style.top = (yoffset + rectY + gbb.y - bbb.y - ifheight) + 'px';\n            } else {\n                iframe.style.top = (yoffset + rectY + gbb.y + rectH - bbb.y) + 'px';\n            }\n\n            // Make the iframe preview, unless it is an external resource. These cause\n            // a new window to open with error, causing problems MATH215.\n            if (node.entype != 'lti' && node.type != 'unknown') {\n\n                // First a background to attach listeners to the iframe.\n                var bgrnd = document.createElement('div');\n                bgrnd.id = 'bgrnd';\n                bgrnd.style.position = 'absolute';\n\n                // Position background so there is a border around iframe, 12px.\n                bgrnd.style.width = (parseInt(iframe.style.width) + 24) + 'px';\n                bgrnd.style.height = (parseInt(iframe.style.height) + 24) + 'px';\n                bgrnd.style.left = (parseInt(iframe.style.left) - 12) + 'px';\n                bgrnd.style.top = (parseInt(iframe.style.top) - 12) + 'px';\n\n                // Mouse leaves border, could be in or out of iframe.\n                bgrnd.addEventListener('mouseout', function(m) {\n\n                    var b = this.getBoundingClientRect();\n\n                    // Check mouse position against border bounds.\n                    if (m.x > b.x && m.x < b.x + b.width && m.y > b.y && m.y < b.y + b.height) {\n                        return;\n                    }\n\n                    // Mouse is outside of border and iframe, remove them.\n                    inIframe = false;\n                    setTimeout(removeIframes, 750);\n                });\n\n                // When mouse moves over border, keep iframe visible.\n                bgrnd.addEventListener('mouseover', function() {\n                    inIframe = true;\n                });\n\n                // The iframe is on top so it can be scrolled.\n                iframe.src = iframeURL + 'mod/' + node.entype + '/view.php?id=' + node.id;\n                document.body.appendChild(bgrnd);\n                document.body.appendChild(iframe);\n            }\n        }\n\n        /**\n         * Event listener for mouse moving out of nodes. Sets a timeout to remove\n         * the text box and iframe, unless the mouse is in the iframe, then it gets\n         * left on screen until the mouse is out of the iframe.\n         *\n         * @param {object} obj - Node or link that is listening for the event\n         */\n        function mouseout(obj) {\n\n            // Ignore if asked or mouseout over section link.\n            if (noNodeMouse || obj.colour == 'lightgrey') {\n                return;\n            }\n\n            // Do not call this function again as the mouse moves.\n            graphNodes.on('mouseout', null);\n            graphLinks.on('mouseout', null);\n\n            setTimeout(removeIframes, 750);\n        }\n\n        /**\n         * Called to remove iframe previews and replace listeners.\n         */\n        function removeIframes() {\n\n            if (inIframe) {\n                return;\n            }\n            // Remove text boxes and iframes.\n            ddd.selectAll('.text').remove();\n            ddd.selectAll('rect').remove();\n            ddd.selectAll('#preview').remove();\n            ddd.selectAll('#bgrnd').remove();\n\n            // Replace node listeners.\n            graphNodes\n                .on('mouseover', mouseover)\n                .on('mouseout', mouseout);\n\n            if (iframeStaticPos) {\n                // Replace link listeners.\n                graphLinks\n                    .on('mouseover', linkMouseover)\n                    .on('mouseout', mouseout);\n\n                // Replace centroid listeners.\n                for (var i = 0; i < centroids.length; i++) {\n                    ddd.select('#cluster1-' + i)\n                        .on('mouseover', clusteroidMouseover.bind(this, i, false));\n                    ddd.select('#cluster2-' + i)\n                        .on('mouseover', clusteroidMouseover.bind(this, i, false));\n                }\n            }\n        }\n\n        /**\n         * Initial simulation tick function for when graph is rendered statically\n         * with coordinate values taken from server database. Adapted from\n         * https://stackoverflow.com/questions/28102089/simple-graph-of-nodes-\n         * and-links-without-using-force-layout\n         */\n        function tick1() {\n\n            // Distance and coordinate offsets for scaling to screen space from\n            // coordinates stored in server database.\n            var xofs = width / 2.0;\n            var yofs = height / 2.0;\n            var dist = coordsScale;\n\n            if (coordsData.originalx === undefined) {\n                coordsData.originalx = xofs;\n                coordsData.originaly = yofs;\n            } else {\n                xofs = coordsData.originalx;\n                yofs = coordsData.originaly;\n            }\n\n            // Ensure scale value is okay, reduce if not.\n            for (var i = 0, sx, sy; i < graphData.nodes.length; i++) {\n\n                sx = graphData.nodes[i].xcoord * dist + xofs;\n                sy = graphData.nodes[i].ycoord * dist + yofs;\n\n                if (sx < 0 || sx > width || sy < 0 || sy > height) {\n\n                    dist *= 0.9;\n                    --i;\n                }\n            }\n            // Store the values for later.\n            coordsScale = dist;\n            coordsData.distance = dist;\n\n            // Ensure links are positioned correctly.\n            graphLinks\n                .attr(\"x1\", function(l) {\n\n                    var sourceNode = graphData.nodes.filter(function(d) {\n                        var sid = typeof l.source == 'string' ? l.source : l.source.id;\n                        return d.id == sid;\n                    })[0];\n\n                    ddd.select(this).attr(\"y1\", (sourceNode.ycoord * dist) + yofs);\n                    return (sourceNode.xcoord * dist) + xofs;\n                })\n                .attr(\"x2\", function(l) {\n\n                    var targetNode = graphData.nodes.filter(function(d) {\n                        var tid = typeof l.target == 'string' ? l.target : l.target.id;\n                        return d.id == tid;\n                    })[0];\n\n                    ddd.select(this).attr(\"y2\", (targetNode.ycoord * dist) + yofs);\n                    return (targetNode.xcoord * dist) + xofs;\n                })\n                .style('display', function(d) {\n                    return (!d.source.visible || !d.target.visible) ? 'none' : 'block';\n                });\n\n            // Give nodes the preset coordinates, scaled to current screen.\n            graphNodes\n                .attr('cx', function(d) {\n                    d.x = (d.xcoord * dist) + xofs;\n                    return d.x;\n                })\n                .attr('cy', function(d) {\n                    d.y = (d.ycoord * dist) + yofs;\n                    return d.y;\n                })\n                .style('display', function(d) {\n                    return (!d.visible) ? 'none' : 'block';\n                })\n                .style('fill', function(d) {\n                    return d.colour;\n                })\n                .raise();\n        }\n\n        /**\n         * Secondary simulation tick function for use during the positioning of the nodes.\n         */\n        function tick2() {\n\n            var radius = nodeRadius;\n\n            // Basic link function to move links with nodes.\n            graphLinks\n                .attr(\"x1\", function(d) {\n                    return d.source.x;\n                })\n                .attr(\"y1\", function(d) {\n                    return d.source.y;\n                })\n                .attr(\"x2\", function(d) {\n                    return d.target.x;\n                })\n                .attr(\"y2\", function(d) {\n                    return d.target.y;\n                })\n                .style(\"stroke-width\", function(d) {\n                    return (d.weight * 2) + 'px';\n                })\n                .style(\"display\", function(d) {\n                    return d.source.visible && d.target.visible ? 'block' : 'none';\n                });\n\n            // Keep nodes on screen when dragging.\n            graphNodes\n                .attr(\"cx\", function(d) {\n                    d.x = Math.max(radius, Math.min(width - radius, d.x));\n                    return d.x;\n                })\n                .attr(\"cy\", function(d) {\n                    d.y = Math.max(radius, Math.min(height - radius, d.y));\n                    return d.y;\n                })\n                .style('fill', function(d) {\n                    return d.colour;\n                })\n                .style(\"display\", function(d) {\n                    return d.visible ? 'block' : 'none';\n                })\n                .raise();\n\n            // Raise for proper visual presentation.\n            ddd.selectAll('rect').raise();\n            ddd.selectAll('text').raise();\n        }\n\n        /**\n         * Function to draw the last time updated during the positioning stage.\n         */\n        function drawTime() {\n\n            if (!allNames) {\n                return;\n            }\n\n            ddd.select('#time').remove();\n\n            if (lastChange == 0) {\n                lastChange = Date.now();\n            }\n\n            // Make the date from milliseconds timestamp.\n            var t = new Date();\n            t.setTime(lastChange);\n\n            // Ensure minutes is two digits.\n            var mins = t.getMinutes();\n            if (mins < 10) {\n                mins = '0' + mins;\n            }\n\n            // Draw the time.\n            graph.append('text')\n                .attr('id', 'time')\n                .attr('y', height - 16)\n                .attr('dy', '.40em')\n                .attr('x', 6)\n                .style('pointer-events', 'none')\n                .text(allNames[allsKey] + ' ' + t.getHours() + ':' + mins + ' ' + t.toDateString());\n        }\n\n        /**\n         * Called to send the module node coordinates to the server. This will also\n         * update other arrays used in conjunction with the researcher interface.\n         */\n        function sendCoordsToServer() {\n\n            // Get normalized coordinates.\n            var normalized = normalizeNodes();\n\n            // If user is researcher, update their nodes as well.\n            if (allGraphs && allScales) {\n\n                // Remove the scale and module attributes from normalized coords.\n                var nodes = {};\n                for (var key in normalized) {\n\n                    if (key == 'scale' || key == 'module') {\n                        continue;\n                    }\n                    nodes[key] = normalized[key];\n                }\n\n                // Update the nodes.\n                allGraphs[userId] = nodes;\n                allScales[userId] = normalized.scale;\n            }\n\n            // Set the last changed time stamp.\n            normalized.time = Date.now();\n            lastChange = normalized.time;\n\n            // Update researcher's changed time.\n            if (allChanges) {\n                allChanges[userId] = normalized.time;\n            }\n            // Update the nodes at the server.\n            callServer(coordsScript, normalized);\n        }\n\n        /**\n         * Called to normalize the coordinates of the module nodes.\n         *\n         * @return {object}\n         */\n        function normalizeNodes() {\n\n            var normalized = {};\n            var dx,\n                dy,\n                d,\n                maxNode,\n                max = 0,\n                cx = width / 2,\n                cy = height / 2;\n\n            // Find node with greatest distance from centre.\n            graphData.nodes.forEach(function(dn) {\n\n                dx = dn.x - cx;\n                dy = dn.y - cy;\n                d = Math.sqrt(dx * dx + dy * dy);\n\n                if (d > max) {\n                    max = d;\n                    maxNode = dn;\n                }\n            });\n\n            // Store distance and node that was used.\n            normalized.scale = max;\n            normalized.module = maxNode.id;\n            coordsScale = max;\n\n            // Normalize all nodes based on greatest distance.\n            graphData.nodes.forEach(function(dn) {\n\n                normalized[dn.id] = {\n                    'xcoord': '' + ((dn.x - cx) / max),\n                    'ycoord': '' + ((dn.y - cy) / max),\n                    'visible': dn.visible ? 1 : 0\n                };\n\n                // If trying to view graph with no preset nodes, make them.\n                if (!dn.xcoord) {\n                    dn.xcoord = (dn.x - cx) / max;\n                    dn.ycoord = (dn.y - cy) / max;\n                }\n            });\n\n            presetNodes = normalized;\n            return normalized;\n        }\n\n        /**\n         * Function called to send data to server.\n         *\n         * @param {string} url - The name of the file receiving the data\n         * @param {object} outData - The data to send to the server\n         */\n        function callServer(url, outData) {\n\n            var req = new XMLHttpRequest();\n            req.open('POST', url);\n            req.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n\n            req.onreadystatechange = function() {\n                if (this.readyState == 4 && this.status == 200) {\n                    // Log console.log(this.responseText); to console?\n                }\n            };\n            req.send('cid=' + courseId + '&data=' + JSON.stringify(outData) +\n                   '&sesskey=' + sessionKey);\n        }\n\n        /**\n         * Called to make the teacher select menu on the positioning screen. The menu\n         * is part of the researcher interface.\n         */\n        function makeTeacherMenu() {\n\n            // Left panel menu.\n            var sm = document.getElementById('student-menu');\n\n            // Copy button.\n            var copy = document.createElement('button');\n            copy.innerHTML = langStrings.copy;\n            copy.className = \"btn btn-secondary mb-1\";\n            copy.addEventListener('click', copyGraph);\n            sm.appendChild(copy);\n\n            var bHeight = copy.getBoundingClientRect().height;\n\n            // Print button.\n            var print = document.createElement('button');\n            print.innerHTML = langStrings.print;\n            print.className = \"btn btn-secondary mb-1\";\n            print.addEventListener('click', printGraph);\n            sm.appendChild(print);\n\n            // Teacher multiple select menu.\n            teacherMenu = document.createElement('select');\n            teacherMenu.size = 3;\n            teacherMenu.id = 'teacher-select';\n            teacherMenu.style.minWidth = '40px';\n\n            var menuHeight = height - bHeight - 20;\n            teacherMenu.style.height = menuHeight + 'px';\n            teacherMenu.addEventListener('change', changeGraph);\n\n            // Add users to the teacher menu.\n            for (var key in allScales) {\n\n                var o = document.createElement('option');\n                o.value = key;\n                o.text = key;\n\n                if (userId == key) {\n                    o.selected = true;\n                }\n                teacherMenu.appendChild(o);\n            }\n\n            sm.appendChild(teacherMenu);\n        }\n\n        /**\n         * Event listener for graph copy button during node positioning. Adapted from\n         * https://stackoverflow.com/questions/11567668/svg-to-canvas-\n         * with-d3-js/23667012#23667012 and\n         * https://bl.ocks.org/dvreed77/c37759991b0723eebef3647015495253. Button is\n         * only available with the researcher interface.\n         */\n        function copyGraph() {\n\n            var img = new Image(),\n                serializer = new XMLSerializer(),\n                svgStr = serializer.serializeToString(graph.node());\n\n            img.src = 'data:image/svg+xml;base64,' + window.btoa(svgStr);\n            document.body.appendChild(img);\n\n            var r = document.createRange();\n            r.setStartBefore(img);\n            r.setEndAfter(img);\n            r.selectNode(img);\n\n            var sel = window.getSelection();\n            sel.addRange(r);\n\n            document.execCommand('Copy');\n\n            document.body.removeChild(img);\n        }\n\n        /**\n         * Event listener for print graph button during node positioning. The button\n         * is only available with the researcher interface.\n         */\n        function printGraph() {\n\n            var serializer = new XMLSerializer(),\n                svgStr = serializer.serializeToString(graph.node());\n\n            var mywindow = window.open();\n            mywindow.document.write('<img src=\"' + 'data:image/svg+xml;base64,' +\n                                    window.btoa(svgStr) + '\"/>');\n            mywindow.print();\n            mywindow.close();\n        }\n\n        /**\n         * Event listener for teacher select menu, which is part of the researcher\n         * interface. This function ensures that the researcher can manipulate their\n         * own graph, but not the graphs of others.\n         */\n        function changeGraph() {\n\n            // Figure out which menu item is selected.\n            var sel = document.getElementById('teacher-select');\n            var key;\n\n            for (var i = 0; i < sel.options.length; i++) {\n                if (sel.options[i].selected) {\n                    key = sel.options[i].value;\n                    break;\n                }\n            }\n\n            // Allow researcher to manipulate their own graph.\n            if (key == userId) {\n                dragstartedFunc = dragstarted;\n                draggedFunc = dragged;\n                dragendedFunc = dragended;\n                rightClickFunc = rightClick;\n            } else {\n                // ... but not anyone elses.\n                dragstartedFunc = null;\n                draggedFunc = null;\n                dragendedFunc = null;\n                rightClickFunc = null;\n            }\n\n            // Change the preset nodes and scales.\n            presetNodes = allGraphs[key];\n            lordLinks = allLinks[key];\n            coordsScale = allScales[key];\n            lastChange = allChanges[key];\n            modules = allMods[key];\n            courseName = allSetNames[key];\n            allsKey = key;\n\n            // Redo the graph and legend.\n            graph.remove();\n            nodeBoxes = {};\n            assignModuleColours();\n            ddd.selectAll('#legendUL').remove();\n            makeNodeLegend();\n\n            // Need default weight at 1 to render links.\n            defaultWeight = 1.0;\n            getData();\n            defaultWeight = 0;\n\n            // Get the current link weight value for the graph.\n            var currentWeight = document.getElementById('weights-output').innerHTML;\n            currentWeight = parseFloat(currentWeight.split(\" \")[1]);\n            initGraph(currentWeight);\n\n            // Check or uncheck node legend boxes as needed.\n            for (var nodeKey in nodeBoxes) {\n                if (presetNodes[nodeKey]) {\n                    nodeBoxes[nodeKey].checked = presetNodes[nodeKey].visible == 1 ? true : false;\n                }\n\n                // Allow researcher to manipulate their graph, but not anyone elses.\n                if (userId == key) {\n                    nodeBoxes[nodeKey].removeEventListener('change', keepChecked);\n                    nodeBoxes[nodeKey].addEventListener('change', legendChange);\n                } else {\n                    nodeBoxes[nodeKey].removeEventListener('change', legendChange);\n                    nodeBoxes[nodeKey].addEventListener('change', keepChecked);\n                }\n            }\n        }\n\n        /**\n         * Event listener for legend when researcher is viewing another's graph.\n         * This keeps the checkboxes from being changed.\n         */\n        function keepChecked() {\n            this.checked = !this.checked;\n        }\n\n        /**\n         * Called to make the hiearchical node legend on the main graphing screen.\n         */\n        function makeNodeLegend() {\n\n            // Hierarchical legend.\n            var maxWidth = 500,\n                mpos;\n            nodeLegend = document.getElementById('legend');\n            nodeLegend.style = 'width: ' + legendWidth + 'px; height: ' + height +\n                'px; min-width: ' + legendWidth + 'px; max-width: ' + maxWidth + 'px;';\n\n            // Allow legend to be resized.\n            // Adapted from https://stackoverflow.com/questions/26233180/resize-a-\n            // div-on-border-drag-and-drop-without-adding-extra-markup.\n\n            // Reshape mouse pointer when over left legend edge.\n            var legendMove = function(e) {\n\n                var wd = nodeLegend.offsetLeft + 28;\n\n                if (e.x >= wd && e.x <= wd + 6) {\n                    nodeLegend.style.cursor = 'col-resize';\n                } else {\n                    nodeLegend.style.cursor = 'auto';\n                }\n            };\n\n            // Resize the legend within bounds.\n            var legendResize = function(e) {\n\n                var dx = mpos - e.x;\n                mpos = e.x;\n\n                var newWidth = parseInt(nodeLegend.style.width) + dx;\n\n                if (newWidth > maxWidth) {\n                    newWidth = maxWidth;\n                } else if (newWidth < legendWidth) {\n                    newWidth = legendWidth;\n                }\n\n                nodeLegend.style.width = newWidth + \"px\";\n            };\n\n            // Add the event listeners.\n            nodeLegend.addEventListener('mousemove', legendMove);\n\n            nodeLegend.addEventListener('mousedown', function(e) {\n\n                mpos = e.x;\n\n                if (nodeLegend.style.cursor == 'col-resize') {\n                    nodeLegend.addEventListener('mousemove', legendResize);\n                }\n            });\n\n            document.addEventListener('mouseup', function() {\n                nodeLegend.removeEventListener('mousemove', legendResize);\n            });\n\n            // Make the hiearchical legend.\n            makeLegend(nodeLegend);\n        }\n\n        /**\n         * Make the hierarchical node legend during the node positioning stage.\n         * Adapted from https://www.w3schools.com/howto/howto_js_treeview.asp.\n         *\n         * @param {HTMLElement} parent - The parent to append to\n         */\n        function makeLegend(parent) {\n\n            // Root of the tree, contains the course title.\n            var root = document.createElement('ul');\n            root.id = 'legendUL';\n\n            var rootSpan = document.createElement('span');\n            rootSpan.className = 'no-select-text';\n            rootSpan.innerHTML = courseName;\n\n            var rootLI = document.createElement('li');\n            rootLI.appendChild(rootSpan);\n\n            var rootUL = document.createElement('ul');\n            rootLI.appendChild(rootUL);\n            root.appendChild(rootLI);\n\n            var li,\n                ul,\n                span,\n                section = -1;\n\n            // Sort the modules to ensure all sections are together.\n            modules.sort(function(a, b) {\n                return a.sect - b.sect;\n            });\n\n            // Need a checkbox for each module node, grouped by section.\n            modules.forEach(function(m) {\n\n                // Each section gets an expandable checkbox.\n                if (section != m.sect) {\n\n                    ul = document.createElement('ul');\n                    ul.className = 'nested';\n\n                    span = document.createElement('span');\n                    span.className = 'caret';\n                    span.addEventListener('click', expand);\n\n                    li = document.createElement('li');\n                    li.appendChild(span);\n\n                    getCheckbox('g' + m.sect, langStrings.section + ' ' + m.sect,\n                                modColours.grouping, m.sect, 'grouping', li);\n\n                    li.appendChild(ul);\n                    rootUL.appendChild(li);\n\n                    section = m.sect;\n                }\n\n                // Each module gets attached to its expandable section.\n                li = document.createElement('li');\n                li.className = 'indented';\n\n                getCheckbox(m.id, m.name, modColours[m.entype], m.sect, m.type, li);\n\n                ul.appendChild(li);\n            });\n\n            parent.appendChild(root);\n        }\n\n        /**\n         * Resize function for hierarchical node legend.\n         */\n        function expand() {\n            this.parentElement.querySelector(\".nested\").classList.toggle(\"active\");\n            this.classList.toggle(\"caret-down\");\n        }\n\n        /**\n         * Gets a checkbox with label for the hierarchical node legend.\n         *\n         * @param {number} mid - The module id\n         * @param {string} name - The label text\n         * @param {string} colour - The colour of associated node\n         * @param {string} group - The group the box belongs to\n         * @param {string} nodeType - The type of node\n         * @param {HTMLElement} parent - The parent element to append to\n         */\n        function getCheckbox(mid, name, colour, group, nodeType, parent) {\n\n            // Make the checkbox.\n            var box = document.createElement('input');\n            box.type = 'checkbox';\n\n            // Check/uncheck based on node visibility from server.\n            if (presetNodes[mid]) {\n                box.checked = presetNodes[mid].visible == 0 ? false : true;\n            } else if (presetNodes['g' + group]) {\n                // New resource in course, but no node data.\n                box.checked = presetNodes['g' + group].visible == 1 &&\n                    userId == allsKey ? true : false;\n            } else {\n                // No node coordinates from server, default graph, everything visible.\n                box.checked = true;\n            }\n            box.id = mid;\n            box.group = group;\n            box.nodeT = nodeType;\n            box.addEventListener('change', legendChange);\n\n            // Store the checkbox.\n            nodeBoxes[box.id] = box;\n\n            // Make the label.\n            var label = document.createElement('label');\n            label.style.color = colour;\n            label.className = 'no-select-text';\n            var labelText = nodeType == 'grouping' ? name : nodeType + '_' + name;\n            label.appendChild(document.createTextNode(labelText));\n\n            parent.appendChild(box);\n            parent.appendChild(label);\n        }\n\n        /**\n         * Event listener for legend when clicking checkboxes to show/hide nodes.\n         */\n        function legendChange() {\n\n            // Store the attributes for this checkbox.\n            var thisId = this.id,\n                thisChecked = this.checked,\n                thisType = this.nodeT,\n                thisGroup = this.group;\n\n            // Show/hide nodes.\n            graphData.nodes.forEach(function(dn) {\n\n                // Hide individually clicked nodes.\n                if (dn.id == thisId) {\n                    dn.visible = thisChecked;\n                    nodeBoxes[dn.id].checked = thisChecked;\n\n                } else if (thisType == 'grouping' && dn.group == thisGroup) {\n                    // Hide all nodes when group checkbox clicked.\n                    dn.visible = thisChecked;\n                    nodeBoxes[dn.id].checked = thisChecked;\n\n                } else if (thisChecked && dn.type == 'grouping' && dn.group == thisGroup) {\n                    // Recheck group checkbox if individual module checkbox checked.\n                    dn.visible = thisChecked;\n                    nodeBoxes[dn.id].checked = thisChecked;\n                }\n            });\n\n            checkWeight();\n            drawGraph();\n        }\n\n        /**\n         * Called to ensure that the weight is not negative before drawing the\n         * graph. Negative weight can cause graph to explode out of screen.\n         */\n        function checkWeight() {\n\n            var weight = parseFloat(document.getElementById('weight-slider').value);\n\n            if (weight < 0) {\n                linkForce.strength(0);\n                document.getElementById('weights-output').innerHTML = '&nbsp;= 0';\n                document.getElementById('weight-slider').value = 0;\n            }\n        }\n\n        /**\n         * Event listener for right clcking nodes. Creates a small menu that can be used\n         * to hide the associated node.\n         *\n         * @param {object} node - The node that is dragged\n         */\n        function rightClick(node) {\n\n            // Remove node information box.\n            ddd.selectAll('.text').remove();\n            ddd.selectAll('rect').remove();\n            ddd.selectAll('#preview').remove();\n            ddd.selectAll('#bgrnd').remove();\n\n            // Prevent regular right click menu.\n            ddd.event.preventDefault();\n\n            // Nothing to do if root node clicked.\n            if (node.id == 'root') {\n                return;\n            }\n            // Store the clicked node.\n            var clickedNode = node;\n\n            // Remove current node listeners.\n            graphNodes.on('mouseover', null)\n                .on('mouseout', null);\n\n            var r = graph.append('rect');\n\n            // Make the text.\n            var t = graph.append('text')\n                .attr('class', 'text')\n                .attr('id', 'rctext')\n                .attr('x', node.x + 10)\n                .attr('y', node.y + 12)\n                .attr('dy', '.40em')\n                .style('pointer-events', 'none')\n                .text(langStrings.hide);\n\n            // If node near bottom of graph area, move text above node.\n            if (node.y + 20 >= height) {\n                t.attr('y', height - (height - node.y) - 10)\n                    .text(langStrings.hide);\n            }\n\n            // Make the rectange background.\n            r.attr('id', 'rcrect')\n                .attr('x', node.x)\n                .attr('y', node.y + 20 <= height ? node.y : height - (height - node.y) - 20)\n                .attr('width', 60)\n                .attr('height', 24)\n                .style('stroke', 'black')\n                .style('fill', 'lightgrey');\n\n            // Colour the rectange.\n            r.on('mouseover', function() {\n                ddd.event.target.style = 'fill: grey;';\n            });\n\n            r.on('mouseout', function() {\n                ddd.event.target.style = 'fill: lightgrey;';\n            });\n\n            // Hide node(s).\n            r.on('click', function() {\n\n                // Remove the right click menu.\n                ddd.selectAll('#rctext').remove();\n                ddd.selectAll('#rcrect').remove();\n\n                // Replace the node listeners.\n                graphNodes.on('mouseover', mouseover)\n                    .on('mouseout', mouseout);\n\n                // Make node(s) hidden.\n                clickedNode.visible = false;\n                nodeBoxes[clickedNode.id].checked = false;\n\n                // Hide all nodes for a group/section.\n                if (clickedNode.type == 'grouping') {\n\n                    graphData.nodes.forEach(function(dn) {\n                        if (dn.group == clickedNode.group) {\n                            dn.visible = false;\n                            nodeBoxes[dn.id].checked = false;\n                        }\n                    });\n                }\n                checkWeight();\n                drawGraph();\n            });\n        }\n\n        /**\n         * Event listener for dragging nodes during the positioning stage.\n         *\n         * @param {object} node - The node that is dragged\n         */\n        function dragstarted(node) {\n\n            // Restart simulation if there is no event.\n            if (!ddd.event.active) {\n                simulation.alphaTarget(dragAlpha).restart();\n            }\n\n            node.fx = node.x;\n            node.fy = node.y;\n        }\n\n        /**\n         * Event listener for dragging nodes during positioning stage.\n         *\n         * @param {object} node - The node that is dragged\n         */\n        function dragged(node) {\n\n            // Remove text boxes/iframe previews.\n            ddd.selectAll('rect').remove();\n            ddd.selectAll('.text').remove();\n            ddd.selectAll('#preview').remove();\n            ddd.selectAll('#bgrnd').remove();\n\n            node.fx = ddd.event.x;\n            node.fy = ddd.event.y;\n        }\n\n        /**\n         * Event listener for dragging nodes.\n         *\n         * @param {object} node - The node that is dragged\n         */\n        function dragended(node) {\n\n            if (!ddd.event.active) {\n\n                // Positioning nodes?\n                if (positioning) {\n\n                    // Get normalized coordinates and send to server.\n                    simulation.stop();\n                    sendCoordsToServer();\n                    drawTime();\n\n                } else {\n                    // Not positioning nodes.\n                    simulation.alphaTarget(dragEndAlpha);\n                }\n            }\n\n            node.fx = null;\n            node.fy = null;\n\n            dragEndTime = Date.now();\n        }\n\n        /**\n         * Called to make the cluster/graph button.\n         *\n         * @return {number}\n         */\n        function makeClusterButton() {\n\n            var sm = document.getElementById('student-menu');\n\n            clusterButton = document.createElement('button');\n            clusterButton.innerHTML = langStrings.cluster;\n            clusterButton.className = \"btn btn-secondary mb-1\";\n            clusterButton.addEventListener('click', doCluster);\n            sm.appendChild(clusterButton);\n\n            return clusterButton.getBoundingClientRect().height;\n        }\n\n        /**\n         * Called to make the student select menu on the main graphing screen.\n         *\n         * @param {number} cbHeight - Height of cluster button\n         */\n        function makeStudentMenu(cbHeight) {\n\n            // Left panel menu.\n            var sm = document.getElementById('student-menu');\n\n            // Student multiple select menu.\n            studentMenu = document.createElement('select');\n            studentMenu.multiple = true;\n            studentMenu.id = 'student-select';\n            var menuHeight = groups.length > 0 ? height - cbHeight - 120 : height - cbHeight - 12;\n            studentMenu.style = 'height: ' + menuHeight + 'px;';\n\n            // Shade menu item when selected.\n            studentMenu.addEventListener('change', function() {\n\n                var sel = document.getElementById('student-select');\n                var normal = 'box-shadow: 0 0 0 0 white inset;';\n\n                for (var i = 0; i < sel.options.length; i++) {\n\n                    var shade = 'box-shadow: 0 0 10px 100px ' + sel.options[i].colour + ' inset;';\n                    sel.options[i].style = sel.options[i].selected ? shade : normal;\n                }\n                if (logs.length > 0) {\n                    drawGraphNew(true);\n                }\n            });\n\n            // Sort the users for nicer in menu display.\n            if (showStudentNames == 1) {\n                users.sort(function(a, b) {\n\n                    var aName = a.firstname + ' ' + a.lastname;\n                    var bName = b.firstname + ' ' + b.lastname;\n\n                    if (aName > bName) {\n                        return 1;\n                    }\n                    if (aName < bName) {\n                        return -1;\n                    }\n                    return 0;\n                });\n            } else {\n                users.sort(function(a, b) {\n                    return a.id - b.id;\n                });\n            }\n\n            // Add users to the list.\n            users.forEach(function(u) {\n                addListItem(u, studentMenu);\n            });\n\n            sm.appendChild(studentMenu);\n        }\n\n        /**\n         * Adds an item to the student select menu used in the graphing stage.\n         *\n         * @param {object} user - The student info\n         * @param {HTMLElement} menu - The parent to append to\n         */\n        function addListItem(user, menu) {\n\n            // Make the list item.\n            var o = document.createElement('option');\n            o.value = user.id;\n            o.text = showStudentNames == 1 ? user.firstname + ' ' + user.lastname : user.id;\n            o.colour = colours[colourIndex++];\n\n            // Make sure colourIndex stays in bounds.\n            if (colourIndex >= colours.length) {\n                colourIndex = 0;\n            }\n            // Assign the links for this student the same colour as menu.\n            graphData.edges[user.id].forEach(function(ul) {\n                ul.colour = o.colour;\n            });\n\n            menu.appendChild(o);\n        }\n\n        /**\n         * Called to make the group selection menu.\n         */\n        function makeGroupMenu() {\n\n            if (groups.length == 0) {\n                return;\n            }\n\n            var sm = document.getElementById('student-menu');\n\n            // Group multiple select menu.\n            groupMenu = document.createElement('select');\n            groupMenu.multiple = true;\n            groupMenu.id = 'group-select';\n            groupMenu.style = 'height: 120px;';\n\n            groupMenu.addEventListener('change', function() {\n\n                // Reset.\n                ddd.selectAll('.link').remove();\n                ddd.selectAll('.hull').remove();\n                makeLinks(graphData.links);\n                simulation.on('tick', tick1);\n                simulation.restart();\n                setTimeout(simulation.stop, 100);\n                studentMenu.options.length = 0;\n\n                // Add users to the list if they are in a selected group.\n                for (var i = 0; i < groupMenu.options.length; i++) {\n                    if (groupMenu.options[i].selected) {\n                        for (var j = 0; j < users.length; j++) {\n                            if (groupMembers[users[j].realId] == groupMenu.options[i].value) {\n                                addListItem(users[j], studentMenu);\n                            }\n                        }\n                    }\n                }\n            });\n\n            // Add groups to menu.\n            var o;\n            for (var gid in groups) {\n                o = document.createElement('option');\n                o.value = gid;\n                o.text = groups[gid];\n                groupMenu.appendChild(o);\n            }\n\n            sm.appendChild(groupMenu);\n        }\n\n        /**\n         * Called to make the time slider on the main graphing screen.\n         */\n        function makeTimeSlider() {\n\n            // Make the time slider.\n            timeSlider = document.getElementById('slider');\n            sliderValues = [0, graphData.maxSession];\n\n            var divider;\n            if (graphData.maxSession < 500) {\n                divider = 10;\n            } else if (graphData.maxSession < 1000) {\n                divider = 20;\n            } else if (graphData.maxSession < 5000) {\n                divider = 100;\n            } else if (graphData.maxSession < 10000) {\n                divider = 200;\n            } else {\n                divider = 500;\n            }\n\n            slider.create(timeSlider, {\n                start: [0, graphData.maxSession],\n                range: {\n                    min: [0],\n                    max: [graphData.maxSession]\n                },\n                step: 1,\n                connect: true,\n                pips: {\n                    mode: 'steps',\n                    stepped: true,\n                    density: 100,\n                    filter: function(n) {\n                        if (n == 0 || n == graphData.maxSession) {\n                            return 1;\n                        } else if (n % divider == 0) {\n                            return 2;\n                        } else {\n                            return 0;\n                        }\n                    },\n                }\n            });\n\n            setTimeout(function() {\n                // Event listener, redraws graph when changed.\n                timeSlider.noUiSlider.on('update', function(values, handle) {\n                    sliderValues[handle] = parseInt(values[handle]);\n                    studentMenu.dispatchEvent(new Event('change'));\n                });\n            }, 1000);\n        }\n\n        /**\n         * Function to draw the behaviour graph during the positioning stage.\n         */\n        function drawGraph() {\n\n            graphLinks.remove();\n            graphNodes.remove();\n            ddd.selectAll('.hull').remove();\n\n            var notNodes = doNodes(rightClick);\n            doLinks(notNodes);\n            makePolygonHulls(notNodes);\n\n            simulation.alphaTarget(linkAlpha).restart();\n\n            // If positioning, stop the simulation and update the DB coords tables.\n            if (positioning) {\n\n                setTimeout(function() {\n                    simulation.stop();\n                    sendCoordsToServer();\n                    drawTime();\n                }, 100);\n            }\n        }\n\n        /**\n         * Function to draw the behaviour graph during the graphing stage.\n         *\n         * @param {boolean} doHulls - Draw the polygon hulls or not\n         */\n        function drawGraphNew(doHulls) {\n\n            graphLinks.remove();\n            graphNodes.remove();\n            ddd.selectAll('.hull').remove();\n\n            positioning = false;\n\n            var notNodes = doNodes(null);\n            doLinks(notNodes);\n\n            if (doHulls) {\n                makePolygonHulls(notNodes);\n            }\n\n            positioning = true;\n\n            simulation.on('tick', tick1);\n            simulation.restart();\n            setTimeout(simulation.stop, 100);\n        }\n\n        /**\n         * Function to change the nodes used in the graph. Called when the graph is redrawn.\n         *\n         * @param {function} rclick - Right click function to assign to the nodes\n         * @returns {array}\n         */\n        function doNodes(rclick) {\n\n            var nodes = [],\n                notNodes = {};\n\n            graphData.nodes.forEach(function(dn) {\n\n                // After dragended, fx and fy values null, causing node to start\n                // at top left of graph on redraw, this keeps node in place.\n                if (dn.fx === null) {\n                    dn.fx = dn.x;\n                    dn.fy = dn.y;\n                }\n\n                // Only want visible nodes.\n                if (dn.visible) {\n                    nodes[nodes.length] = dn;\n                } else {\n                    notNodes[dn.id] = 1;\n                }\n            });\n\n            simulation.nodes(nodes);\n\n            makeNodes(nodes, rclick, dragstartedFunc, draggedFunc, dragendedFunc);\n\n            return notNodes;\n        }\n\n        /**\n         * Function to change the links used in the graph. Called when the graph is redrawn.\n         *\n         * @param {array} notNodes - The invisible nodes\n         */\n        function doLinks(notNodes) {\n\n            var links = [], // Background links that hold sections together.\n                sid, // Source node id.\n                tid, // Target node id.\n                dl, // Data link.\n                sl, // Student link.\n                i; // Loop variable.\n\n            for (i in graphData.links) {\n                dl = graphData.links[i];\n\n                // Get source/target id.\n                if (typeof dl.source == 'string') {\n                    sid = dl.source;\n                    tid = dl.target;\n                } else {\n                    sid = dl.source.id;\n                    tid = dl.target.id;\n                }\n\n                // Ensure link has a both source and target nodes.\n                if (notNodes[sid] || notNodes[tid]) {\n                    continue;\n                } else {\n                    links[links.length] = dl;\n                }\n            }\n\n            var options = positioning ? [] : document.getElementById('student-select').options;\n\n            // For any students who are checked.\n            for (i = 0; i < options.length; i++) {\n\n                if (options[i].selected) {\n\n                    // Node id, object.\n                    var id,\n                        ob = {},\n                        j;\n\n                    // Add student links to link set.\n                    for (j = sliderValues[0]; j <= sliderValues[1]; j++) {\n\n                        // Are we including the links for this slider value?.\n                        if (graphData.edges[options[i].value].length > j) {\n\n                            sl = graphData.edges[options[i].value][j];\n\n                            // Get source/target id.\n                            if (typeof sl.source == 'string') {\n                                id = sl.source + '_' + sl.target;\n                                sid = sl.source;\n                                tid = sl.target;\n                            } else {\n                                id = sl.source.id + '_' + sl.target.id;\n                                sid = sl.source.id;\n                                tid = sl.target.id;\n                            }\n                            if (ob[id]) {\n                                ob[id]++;\n                            } else {\n                                ob[id] = 1;\n                            }\n\n                            // Ensure link has a both source and target nodes.\n                            if (notNodes[sid] || notNodes[tid]) {\n                                continue;\n                            } else {\n                                links[links.length] = sl;\n                            }\n                        } else {\n                            // Slider value is larger than number of links, move on.\n                            break;\n                        }\n                    }\n\n                    // Weight the links.\n                    for (j = sliderValues[0]; j <= sliderValues[1]; j++) {\n\n                        // Are we including the links for this slider value?\n                        if (graphData.edges[options[i].value].length > j) {\n\n                            sl = graphData.edges[options[i].value][j];\n\n                            // Get source/target id.\n                            if (typeof sl.source == 'string') {\n                                id = sl.source + '_' + sl.target;\n                            } else {\n                                id = sl.source.id + '_' + sl.target.id;\n                            }\n                            sl.weight = ob[id];\n                        } else {\n                            break;\n                        }\n                    } // End for each slider value.\n                } // End if option selected.\n            } // End for any student who are checked.\n\n            simulation.force('link').links(links);\n            makeLinks(links);\n        }\n\n        /**\n         * Called to check equality. Could not make anonymous function within\n         * loop as this caused an error with eslint.\n         *\n         * @param {number} id - The source or target node id\n         * @return {object} node - The matching graph node\n         */\n        function getEqualToNode(id) {\n\n            var node = graphData.nodes.find(function(n) {\n                return n.id == id;\n            });\n\n            return node;\n        }\n\n        /**\n         * Called to render the hulls. Hulls get made around student links during graphing.\n         *\n         * @param {array} notNodes - The invisible nodes\n         */\n        function makePolygonHulls(notNodes) {\n\n            if (positioning) {\n                return;\n            }\n            ddd.selectAll('.hull').remove();\n\n            var options = document.getElementById('student-select').options;\n            var nodeGroups = {};\n\n            // For any students who are checked.\n            for (var i = 0; i < options.length; i++) {\n                if (options[i].selected) {\n\n                    // SourceNodeX/Y, targetNodeX/Y, linkColour, sourceId, targetId.\n                    var snx, sny, tnx, tny, lc, sid, tid;\n                    nodeGroups[options[i].value] = {};\n\n                    // Add student links to link set.\n                    for (var j = sliderValues[0]; j <= sliderValues[1]; j++) {\n\n                        // Are we including the links for this slider value?\n                        if (graphData.edges[options[i].value].length > j) {\n\n                            var sl = graphData.edges[options[i].value][j];\n\n                            // Get source/target id.\n                            if (typeof sl.source == 'string') {\n                                sid = sl.source;\n                                tid = sl.target;\n\n                                var nd = getEqualToNode(sid);\n\n                                snx = nd.x;\n                                sny = nd.y;\n\n                                nd = getEqualToNode(tid);\n\n                                tnx = nd.x;\n                                tny = nd.y;\n                            } else {\n                                sid = sl.source.id;\n                                tid = sl.target.id;\n\n                                snx = sl.source.x;\n                                sny = sl.source.y;\n\n                                tnx = sl.target.x;\n                                tny = sl.target.y;\n                            }\n\n                            // Ensure link has a both source and target nodes.\n                            if (notNodes[sid] || notNodes[tid]) {\n                                continue;\n                            } else {\n                                lc = sl.colour;\n                                nodeGroups[options[i].value][sid] = {x: snx, y: sny, colour: lc};\n                                nodeGroups[options[i].value][tid] = {x: tnx, y: tny, colour: lc};\n                            }\n                        } else {\n                            // Slider value greater than number of links, move on.\n                            break;\n                        }\n                    } // End for each slider value.\n                } // End if option selected.\n            } // End for any student who are checked.\n\n            // Make the actual hulls.\n            for (var key in nodeGroups) {\n                makePolygonHull(nodeGroups[key], key, false, false);\n            }\n            if (graphing) {\n                if (useGeometricCentroids) {\n                    getGeometricCentroids(options);\n                } else {\n                    getDecomposedCentroids(options);\n                }\n            }\n        }\n\n        /**\n         * Called to populate the hullCentroids global object. Centroid\n         * decomposition is used to determine the centroid where the student\n         * graph is considered linear, so has no loops.\n         *\n         * @param {array} options - The array of student menu items\n         */\n        function getDecomposedCentroids(options) {\n\n            hullCentroids = {}; // Clear the old values.\n\n            // Fixes a bug in empty course with no students.\n            if (Object.keys(clickData).length == 0) {\n                return;\n            }\n\n            // Only consider students who are checked.\n            for (var i = 0; i < options.length; i++) {\n\n                if (options[i].selected) {\n                    var student = options[i].value;\n\n                    // Time slider handle may be beyond student data.\n                    if (clickData[student].length <= sliderValues[0]) {\n                        continue;\n                    }\n\n                    // Consider only relevant time slider values.\n                    var start = sliderValues[0];\n                    var end = clickData[student].length > sliderValues[1] + 1 ? sliderValues[1] : clickData[student].length;\n\n                    // Centroid is halfway along linear graph.\n                    var half = parseInt((start / 2) + (end / 2));\n\n                    // Get node coordinates for centroid.\n                    var mid = clickData[student][half];\n                    var xcoord = parseFloat(presetNodes[mid].xcoord);\n                    var ycoord = parseFloat(presetNodes[mid].ycoord);\n\n                    // Scale the normalized centroid coordinates.\n                    hullCentroids[student] = {\n                        x: xcoord * coordsScale + coordsData.originalx,\n                        y: ycoord * coordsScale + coordsData.originaly,\n                        colour: options[i].colour\n                    };\n                }\n            }\n        }\n\n        /**\n         * Called to populate the hullCentroids global object. The weighted\n         * geometric centroid is calculated from the student click data where\n         * each visible, clicked node is used.\n         *\n         * @param {array} options - The array of student menu items\n         */\n        function getGeometricCentroids(options) {\n\n            hullCentroids = {}; // Clear the old values.\n\n            // Fixes a bug in empty course with no students.\n            if (Object.keys(clickData).length == 0) {\n                return;\n            }\n\n            // Only consider students who are checked.\n            for (var i = 0; i < options.length; i++) {\n                if (options[i].selected) {\n                    var student = options[i].value;\n\n                    // Time slider handle may be beyond student data.\n                    if (clickData[student].length <= sliderValues[0]) {\n                        continue;\n                    }\n\n                    // Consider only relevant time slider values.\n                    var start = sliderValues[0];\n                    var end = clickData[student].length > sliderValues[1] + 1 ? sliderValues[1] : clickData[student].length;\n                    // Total x, total y, and counter.\n                    var tx = 0,\n                        ty = 0,\n                        n = 0;\n\n                    // Sum the clicked nodes.\n                    for (var j = start, mid; j < end; j++) {\n                        mid = clickData[student][j];\n                        tx += parseFloat(presetNodes[mid].xcoord);\n                        ty += parseFloat(presetNodes[mid].ycoord);\n                        n++;\n                    }\n\n                    // Scale the normalized centroid coordinates.\n                    hullCentroids[student] = {\n                        x: (tx / n) * coordsScale + coordsData.originalx,\n                        y: (ty / n) * coordsScale + coordsData.originaly,\n                        colour: options[i].colour\n                    };\n                }\n            }\n        }\n\n        /**\n         * Called to make the actual polygon hull.\n         * Adapted from http://bl.ocks.org/hollasch/9d3c098022f5524220bd84aae7623478\n         * and https://bl.ocks.org/XavierGimenez/a8e8c5e9aed71ba96bd52332682c0399\n         * and https://bl.ocks.org/pbellon/d397cbdfc596f1724860b60a1d41be43.\n         *\n         * @param {object} group - The group of points\n         * @param {number} key - The student id\n         * @param {boolean} manualHull - Is the hull for a manual cluster?\n         * @param {boolean} useTrans - Are the hulls to be transitioned?\n         */\n        function makePolygonHull(group, key, manualHull, useTrans) {\n\n            // No points in group, nothing to hull around.\n            if (Object.keys(group).length == 0) {\n                return;\n            }\n            var coords = [],\n                colour,\n                lf, // Line function.\n                hullPadding = 20,\n                hullClass;\n\n            if (graphing) {\n                hullClass = 'hull';\n            } else if (manualHull) {\n                hullClass = 'manual-hull';\n            } else {\n                hullClass = 'cluster-hull';\n            }\n\n            // Put point into array.\n            for (var k in group) {\n                coords[coords.length] = [group[k].x, group[k].y];\n                colour = group[k].colour;\n            }\n\n            // Only 1 point?\n            if (coords.length == 1) {\n\n                lf = function(polyPoints) {\n                    // Returns the path for a circular hull around a single point.\n\n                    var p1 = [polyPoints[0][0], polyPoints[0][1] - hullPadding];\n                    var p2 = [polyPoints[0][0], polyPoints[0][1] + hullPadding];\n\n                    return 'M ' + p1 +\n                        ' A ' + [hullPadding, hullPadding, '0,0,0', p2].join(',') +\n                        ' A ' + [hullPadding, hullPadding, '0,0,0', p1].join(',');\n                };\n            } else if (coords.length == 2) {\n                // Only 2 points?\n\n                // Vector from p0 to p1.\n                var vecFrom = function(p0, p1) {\n                    return [p1[0] - p0[0], p1[1] - p0[1]];\n                };\n\n                // Vector v scaled by 'scale'.\n                var vecScale = function(v, scale) {\n                    return [scale * v[0], scale * v[1]];\n                };\n\n                // The sum of two points/vectors.\n                var vecSum = function(pv1, pv2) {\n                    return [pv1[0] + pv2[0], pv1[1] + pv2[1]];\n                };\n\n                // Vector with direction of v and length 1.\n                var vecUnit = function(v) {\n                    var norm = Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n                    return vecScale(v, 1 / norm);\n                };\n\n                // Vector with direction of v with specified length.\n                var vecScaleTo = function(v, length) {\n                    return vecScale(vecUnit(v), length);\n                };\n\n                // Unit normal to vector pv0, or line segment from p0 to p1.\n                var unitNormal = function(pv0, p1) {\n                    if (p1 !== undefined) {\n                        pv0 = vecFrom(pv0, p1);\n                    }\n                    var normalVec = [-pv0[1], pv0[0]];\n                    return vecUnit(normalVec);\n                };\n\n                lf = function(polyPoints) {\n                    // Returns the path for a rounded hull around two points.\n\n                    var v = vecFrom(polyPoints[0], polyPoints[1]);\n                    var extensionVec = vecScaleTo(v, hullPadding);\n\n                    var extension0 = vecSum(polyPoints[0], vecScale(extensionVec, -1));\n                    var extension1 = vecSum(polyPoints[1], extensionVec);\n\n                    var tangentHalfLength = 1.2 * hullPadding;\n                    var controlDelta = vecScaleTo(unitNormal(v), tangentHalfLength);\n                    var invControlDelta = vecScale(controlDelta, -1);\n\n                    var control0 = vecSum(extension0, invControlDelta);\n                    var control1 = vecSum(extension1, invControlDelta);\n                    var control3 = vecSum(extension0, controlDelta);\n\n                    return 'M ' + extension0 +\n                        ' C ' + [control0, control1, extension1].join(',') +\n                        ' S ' + [control3, extension0].join(',') +\n                        ' Z';\n                };\n            } else {\n                // Enough points to make a concave hull.\n                var hull = ddd.concaveHull().padding(15);\n\n                if (!useDefaultConcave) {\n                    hull.distance(concaveHullDistance);\n                }\n\n                var pgh = coords.length > 4 ? hull(coords) : [coords];\n                lf = ddd.line().curve(curveType);\n\n                // Draw the polygon.\n                graph.selectAll('#hull-' + key)\n                    .data(pgh)\n                    .enter()\n                    .append('path')\n                    .attr('id', 'hull-' + key)\n                    .attr('class', hullClass)\n                    .style('stroke', colour)\n                    .style('stroke-opacity', useTrans ? 0 : 1.0)\n                    .style('fill', colour)\n                    .style('fill-opacity', useTrans ? 0 : hullOpacity)\n                    .attr('d', lf);\n\n                return;\n            }\n\n            // Draw the hull.\n            graph.append('path')\n                .attr('id', 'hull-' + key)\n                .attr('class', hullClass)\n                .style('stroke', colour)\n                .style('stroke-opacity', useTrans ? 0 : 1.0)\n                .style('fill', colour)\n                .style('fill-opacity', useTrans ? 0 : hullOpacity)\n                .attr('d', lf(coords));\n        }\n\n        /**\n         * Event listener for cluster/graph button. This function reverts the program\n         * from the clustering stage to the graphing stage.\n         */\n        function doGraph() {\n\n            // Stop clustering.\n            clearInterval(clusterAnimInterval);\n            clusterAnimInterval = undefined;\n            scaledCentroids = null;\n            resetLogPanel();\n\n            // Remove clustering elements.\n            ddd.selectAll('.clustering-centroid').remove();\n            ddd.selectAll('.cluster-hull').remove();\n            ddd.selectAll('.centroid').remove();\n            ddd.selectAll('.server-centroid').remove();\n            clusterSlider.style.display = 'none';\n            document.getElementById('anim-controls').style.display = 'none';\n            document.getElementById('log-panel').style.display = 'none';\n\n            // Ensure student menu is correctly sized.\n            var sm = document.getElementById('student-menu');\n            sm.style.width = clusterButton.style.width;\n\n            // Remove clustering name text box and button.\n            document.getElementById('clustering-replay-comment').innerHTML = '&nbsp';\n\n            // Start graphing.\n            graphing = true;\n            iframeStaticPos = false;\n\n            // Replace graphing stuff.\n            timeSlider.style.display = 'block';\n            studentMenu.style.display = 'block';\n            if (groupMenu) {\n                groupMenu.style.display = 'block';\n            }\n\n            graphNodes.style('display', 'block');\n            graphNodes.style('opacity', 1.0);\n            graphLinks.style('display', 'block');\n            graphLinks.style('opacity', 1.0);\n            drawGraphNew(true);\n            graphNodes.on('mouseover', mouseover)\n                .on('mouseout', mouseout);\n\n            // Reset graph button to cluster button.\n            clusterButton.innerHTML = langStrings.cluster;\n            clusterButton.removeEventListener('click', doGraph);\n            clusterButton.addEventListener('click', doCluster);\n        }\n\n        /**\n         * Event listener for cluster button. Changes from graphing to clustering.\n         */\n        function doCluster() {\n\n            // Stop graphing.\n            graphing = false;\n\n            timeSlider.style.display = 'none';\n            studentMenu.style.display = 'none';\n            if (groupMenu) {\n                groupMenu.style.display = 'none';\n            }\n\n            ddd.selectAll(\".hull\").remove();\n            ddd.selectAll('.text').remove();\n            ddd.selectAll('rect').remove();\n\n            // Ensure student menu is sized properly.\n            var sm = document.getElementById('student-menu');\n            sm.style.width = clusterSliderPanelWidth + 'px';\n\n            // Change cluster button to graph button.\n            clusterButton.innerHTML = langStrings.graph;\n            clusterButton.removeEventListener('click', doCluster);\n            clusterButton.addEventListener('click', doGraph);\n\n            // Stop the graph and related functionality.\n            simulation.stop();\n            graphNodes.on('mouseover', null)\n                .on('mouseout', null)\n                .on('contextmenu', null)\n                .call(ddd.drag()\n                      .on('start', null)\n                      .on('drag', null)\n                      .on('end', null));\n\n            // Reset coordinate id data and comments.\n            coordsData.clusterId = Date.now();\n            comments = {};\n\n            // Set/reset some clustering parameters.\n            clusterIters = 0;\n            clustering = false;\n            clusterSliderValue = 1;\n            clusterAnimInterval = undefined;\n\n            // Remove clustering name text box and button.\n            document.getElementById('clustering-replay-comment').innerHTML = '&nbsp';\n\n            // Placeholder text for text box.\n            var ph = '<p id=\"cluster-text\">' + langStrings.numclusters + '</p>';\n\n            // Set timeout to deal with bug where clicking slider too soon after clicking\n            // cluster button resulted in 'too late: already running' error from first.js.\n            setTimeout(function() {\n\n                // Make the clustering slider, if not already made.\n                if (!clusterSlider) {\n\n                    var cd = makeAnimationControls();\n                    makeClusterSlider(ph, cd);\n                    makeLogPanel();\n\n                } else {\n                    // Cluster slider has already been made, just reset everything.\n                    document.getElementById('clustering').innerHTML = '&nbsp';\n                    document.getElementById('dragdrop').innerHTML = '&nbsp';\n                    document.getElementById('cluster-text').innerHTML = ph;\n\n                    document.getElementById('play-pause').innerHTML = '&#9654'; // 9654=play.\n                    document.getElementById('play-pause').disabled = true;\n                    document.getElementById('play-step').disabled = true;\n\n                    document.getElementById('anim-controls').style.display = 'block';\n                    document.getElementById('log-panel').style.display = 'block';\n                    clusterSlider.removeAttribute('disabled');\n                    clusterSlider.noUiSlider.set(1);\n                    clusterSlider.style.display = 'block';\n                }\n\n                drawCentroids();\n            }, animTime / 2);\n        }\n\n        /**\n         * Called to do the clustering replay stage.\n         *\n         * @param {array} manData - The manual replay data from the server.\n         */\n        function doClusterReplay(manData) {\n\n            positioning = true;\n            presetNodes = {'0': 0, '1': 1, '2': 2};\n            height = window.innerHeight - 190;\n\n            makeReplayControls();\n            makeLogPanel();\n            makeReplayMenu(manData);\n\n        }\n\n        /**\n         * Called to make the clustering run menu for the replay stage.\n         *\n         * @param {array} manData - The manual clustering data.\n         */\n        function makeReplayMenu(manData) {\n\n            var sm = document.getElementById('student-menu');\n\n            replayMenu = document.createElement('select');\n            replayMenu.size = 3;\n            replayMenu.id = 'replay-select';\n            replayMenu.style = 'height: ' + (height - 12) + 'px;';\n            replayMenu.addEventListener('change', replayGraph.bind(this, manData));\n\n            // Add clustering runs to the menu.\n            for (var datasetid in originalReplayData) {\n                var i = 0;\n                for (var coordid in originalReplayData[datasetid]) {\n                    var j = 0;\n                    i++;\n                    for (var clusterid in originalReplayData[datasetid][coordid]) {\n\n                        if (!isNaN(clusterid) &&\n                            originalReplayData[datasetid][coordid][clusterid][1]) {\n\n                            var o = document.createElement('option');\n                            o.value = datasetid + '_' + coordid + '_' + clusterid;\n                            o.text = datasetid.split('-')[0] + '_' + i + '_' + (++j);\n                            replayMenu.appendChild(o);\n                        }\n                    }\n                }\n            }\n            sm.appendChild(replayMenu);\n        }\n\n        /**\n         * Called to display the initial graph for the replay stage.\n         *\n         * @param {array} manData - The manual replay data from the server.\n         */\n        function replayGraph(manData) {\n\n            var r = changeReplayData(manData);\n            var members = r.members;\n\n            // Remove graph and user menu, if exist, reset log panel.\n            if (graph) {\n                graph.remove();\n                resetPlayButton();\n                resetLogPanel();\n                document.getElementById('replayer').innerHTML = '&nbsp;';\n                document.getElementById('replaydragdrop').innerHTML = '&nbsp;';\n            }\n            if (studentMenu) {\n                document.body.removeChild(studentMenu);\n            }\n\n            scaledCentroids = null;\n            assignModuleColours();\n            getData();\n            sliderValues = [0, graphData.maxSession];\n            document.getElementById('replay-stop').style.opacity = 1;\n            document.getElementById('replay-pause').style.opacity = 1;\n            document.getElementById('replay-back').style.opacity = 1;\n            document.getElementById('replay-forward').style.opacity = 1;\n            document.getElementById('delete-button').style.opacity = 1;\n\n            // Ensure no new nodes are shown if they have no coords.\n            for (var i = 0; i < graphData.nodes.length; i++) {\n                if (graphData.nodes[i].xcoord === undefined) {\n                    graphData.nodes[i].visible = false;\n                }\n            }\n\n            fakeStudentMenu(members);\n\n            // Draw the graph.\n            initGraph(0);\n            drawGraphNew(false);\n            graphNodes.on('mouseover', null).on('mouseout', null);\n            noCentroidMouse = true;\n\n            // Replace clustering name text box and button.\n            document.getElementById('clustering-replay-comment').innerHTML = '&nbsp';\n            addClusteringNameToNavigation();\n\n            // Draw the user centroids.\n            setTimeout(function() {\n                forwardScale(hullCentroids, false);\n                drawCentroids();\n                simulation.on('tick', tick1);\n\n                // Reassign listeners for dragging student centroids.\n                for (var key in hullCentroids) {\n                    ddd.select('#centroid-' + key)\n                        .call(ddd.drag()\n                              .on('start', replayCentroidDragStart.bind(this, key))\n                              .on('drag', replayCentroidDrag.bind(this, key))\n                              .on('end', replayCentroidDragEnd.bind(this, key, manData, r)));\n                }\n            }, 500);\n        }\n\n        /**\n         * Event listener for dragging student centroids during replay.\n         * Draws a temporary student centroid for dragging.\n         *\n         * @param {number} studentKey - The student id.\n         */\n        function replayCentroidDragStart(studentKey) {\n\n            if (!canDragReplayCentroid(studentKey)) {\n                return;\n            }\n\n            centroidDragTime = Date.now();\n\n            graph.append('polygon')\n                .attr('class', 'dragged-centroid')\n                .attr('id', 'dragged-' + studentKey)\n                .attr('points', getPolygonPoints(ddd.event.x, ddd.event.y))\n                .style('stroke', 'black')\n                .style('stroke-width', '3px')\n                .style('fill', hullCentroids[studentKey].colour)\n                .style('opacity', 0.5);\n        }\n\n        /**\n         * Event listener for dragging student centroids during replay.\n         * Moves a student centroid with the mouse.\n         *\n         * @param {number} studentKey - The student id.\n         */\n        function replayCentroidDrag(studentKey) {\n\n            ddd.select('#dragged-' + studentKey)\n                .attr('points', getPolygonPoints(ddd.event.x, ddd.event.y));\n        }\n\n        /**\n         * Event listener for dragging student centroids during replay.\n         * Reclusters students, draws hulls and clustering centroids.\n         *\n         * @param {number} studentKey - The student id.\n         * @param {array} manData - Manual clustering data from server.\n         * @param {object} ids - The dataset, graph configuration, and cluster ids.\n         */\n        function replayCentroidDragEnd(studentKey, manData, ids) {\n\n            ddd.selectAll('.dragged-centroid').remove();\n\n            if (!canDragReplayCentroid(studentKey)) {\n                return;\n            }\n\n            // User wants to click for text box, not drag for clustering?\n            if (Date.now() - centroidDragTime < 300) {\n                centroidClick(realUserIds[studentKey], studentKey, false);\n                return;\n            }\n\n            // Copy replay data, if not already done.\n            if (!haveManualClustering) {\n                copyReplayData();\n            }\n\n            var currentIter = getCurrentIteration();\n\n            // When manual clsutering done at later iteration, replay data not copied,\n            // which messes up manual clustering. In this case, copy the data for the\n            // current iteration.\n            if (Object.keys(manualClusters[currentIter]).length == 0) {\n                for (var i = 0; i < replayData[currentIter].length; i++) {\n                    for (var member in replayData[currentIter][i].members) {\n\n                        var id = anonUserIds[replayData[currentIter][i].members[member].id];\n                        manualClusters[currentIter][id] = i;\n                    }\n                }\n            }\n\n            // Reassign student to new cluster for all iterations.\n            var newK = getNewCluster(ddd.event);\n            for (var iter in manualClusters) {\n                if (iter <= currentIter) {\n                    manualClusters[iter][studentKey] = newK;\n                }\n            }\n\n            drawManualClusters(currentIter, manData, ids);\n            haveManualClustering = true;\n\n            // Show clustering results in log panel.\n            logManualClusteringResults(currentIter);\n\n            // Log clustering iteration at server.\n            sendManualClustersToServer(currentIter);\n        }\n\n        /**\n         * Function called to send the manual clustering data to the server.\n         *\n         * @param {number} currentIter - The current iteration value.\n         */\n        function sendManualClustersToServer(currentIter) {\n\n            var out = {clusterCoords: [], members: []};\n            for (var i = 0; i < manualCentroids.length; i++) {\n\n                // Get the reversed centroid coordinate.\n                var centroid = manualCentroids[i] ? manualCentroids[i] : centroids[i];\n                out.clusterCoords[i] = reverseScale(centroid);\n                out.clusterCoords[i].num = i;\n\n                // Map anonymized student id back to real id for server.\n                for (var student in manualClusters[currentIter]) {\n                    if (manualClusters[currentIter][student] == i) {\n\n                        out.members[out.members.length] = {\n                            id:  realUserIds[student],\n                            num: i\n                        };\n                    }\n                }\n            }\n\n            out.iteration = currentIter;\n            out.clusterId = coordsData.clusterId;\n            out.coordsid = lastChange;\n\n            callServer(manualScript, out);\n        }\n\n        /**\n         * Log the manual clustering results to the log panel.\n         *\n         * @param {number} iter - The clustering iteration number\n         */\n        function logManualClusteringResults(iter) {\n\n            if (iter >= 0 || !manualClusters[iter] ||\n                    Object.keys(manualClusters[iter]).length == 0) {\n                return;\n            }\n\n            var measures = getClusterMeasures(iter);\n\n            // Log panel text.\n            var lpt = langStrings.manualcluster + '<br>';\n\n            // Get centroid from coordinates, then determine distance to\n            // cluster and membership.\n            var i;\n            for (i = 0; i < manualCentroids.length; i++) {\n\n                if (!manualCentroids[i]) {\n                    continue;\n                }\n\n                var dx = manualCentroids[i].x - width / 2;\n                var dy = manualCentroids[i].y - height / 2;\n                var d = Math.sqrt(dx * dx + dy * dy);\n                var c = centroids[i].colour;\n\n                // Add distance to cluster.\n                lpt += langStrings.disttocluster + ' <span style=\"color:' + c + '\">' +\n                    c + '</span>: ' + Math.round(d) + '<br>' + langStrings.cluster +\n                    ' ' + c + ' ' + langStrings.members + ': ' + '[';\n\n                // Add members for this cluster.\n                for (var student in manualClusters[iter]) {\n                    if (manualClusters[iter][student] == i) {\n                        lpt += student + ', ';\n                    }\n                }\n                // Remove trailing comma.\n                if (lpt.indexOf(',', lpt.length - 3) != -1) {\n                    lpt = lpt.slice(0, -2);\n                }\n                lpt += ']<br>';\n\n                // Log per cluster clustering measures for researchers.\n                if (isResearcher) {\n                    lpt += langStrings.precision + ': ' + measures[i].precision.toFixed(4) + '<br>';\n                    lpt += langStrings.recall + ': ' + measures[i].recall.toFixed(4) + '<br>';\n                    lpt += langStrings.f1 + ': ' + measures[i].f1.toFixed(4) + '<br>';\n                    lpt += langStrings.fhalf + ': ' + measures[i].fhalf.toFixed(4) + '<br>';\n                    lpt += langStrings.f2 + ': ' + measures[i].f2.toFixed(4) + '<br>';\n                }\n            }\n\n            // Write iteration results to log panel.\n            var lpv = logPanel.innerHTML.split('<br><br>');\n            var lpv0 = lpv[0].split('<br>');\n            logPanel.innerHTML = '';\n\n            // Remove previous manual clustering results, but keep k-means.\n            for (i = 0; i < lpv0.length; i++) {\n                if (lpv0[i].startsWith(langStrings.manualcluster)) {\n                    break;\n                }\n                logPanel.innerHTML += lpv0[i] + '<br>';\n            }\n\n            // Add in new manual clustering results.\n\n            // Log total clustering measures for researchers.\n            if (isResearcher) {\n                i = measures.length - 1;\n                lpt += langStrings.totalmeasures + '<br>';\n                lpt += langStrings.precision + ': ' + measures[i].precision.toFixed(4) + '<br>';\n                lpt += langStrings.recall + ': ' + measures[i].recall.toFixed(4) + '<br>';\n                lpt += langStrings.f1 + ': ' + measures[i].f1.toFixed(4) + '<br>';\n                lpt += langStrings.fhalf + ': ' + measures[i].fhalf.toFixed(4) + '<br>';\n                lpt += langStrings.f2 + ': ' + measures[i].f2.toFixed(4) + '<br>';\n            }\n\n            logPanel.innerHTML += lpt + '<br>';\n\n            // Add back all previous results.\n            for (i = 1; i < lpv.length; i++) {\n                logPanel.innerHTML += lpv[i] + '<br><br>';\n            }\n        }\n\n        /**\n         * Called to get the quality measures for the clustering results.\n         * Precision, recall, and F measure formulas taken from\n         * https://nlp.stanford.edu/IR-book/html/htmledition/evaluation-of-unranked-retrieval-sets-1.html\n         *\n         * @param {number} iter - The current iteration value.\n         * @return {array} results - The results of the clustering.\n         */\n        function getClusterMeasures(iter) {\n\n            var truePositives = 0,\n                falsePositives = 0,\n                falseNegatives = 0,\n                results = [],\n                p, // Precision.\n                r, // Recall.\n                i; // Loop variable.\n\n            // Calculate the precision, recall, and F measures for each cluster.\n            for (i = 0; i < centroids.length; i++) {\n                for (var student in scaledCentroids) {\n\n                    if (scaledCentroids[student].ci == i &&\n                        manualClusters[iter][student] == scaledCentroids[student].ci) {\n                        // Kmeans clustered correctly.\n                        truePositives++;\n                    } else if (scaledCentroids[student].ci == i &&\n                               manualClusters[iter][student] != scaledCentroids[student].ci) {\n                        // Kmeans clustered, but should not have.\n                        falsePositives++;\n                    } else if (manualClusters[iter][student] == i &&\n                               manualClusters[iter][student] != scaledCentroids[student].ci) {\n                        // Not kmeans clustered, but should be.\n                        falseNegatives++;\n                    }\n                }\n\n                p = truePositives / (truePositives + falsePositives);\n                r = truePositives / (truePositives + falseNegatives);\n\n                results[i] = {\n                    tp: truePositives,\n                    fp: falsePositives,\n                    fn: falseNegatives,\n                    precision: p,\n                    recall: r,\n                    f1: p + r == 0 ? 0 : (2.0 * p * r) / (p + r),\n                    fhalf: p + r == 0 ? 0 : (1.25 * p * r) / ((0.25 * p) + r),\n                    f2: p + r == 0 ? 0 : (5.0 * p * r) / ((4.0 * p) + r),\n                };\n\n                truePositives = 0;\n                falsePositives = 0;\n                falseNegatives = 0;\n            }\n\n            // Calculate measures for all clusters combined.\n            for (i = 0; i < results.length; i++) {\n                truePositives += results[i].tp;\n                falsePositives += results[i].fp;\n                falseNegatives += results[i].fn;\n            }\n\n            p = truePositives / (truePositives + falsePositives);\n            r = truePositives / (truePositives + falseNegatives);\n\n            results[results.length] = {\n                tp: truePositives,\n                fp: falsePositives,\n                fn: falseNegatives,\n                precision: p,\n                recall: r,\n                f1: p + r == 0 ? 0 : (2.0 * p * r) / (p + r),\n                fhalf: p + r == 0 ? 0 : (1.25 * p * r) / ((0.25 * p) + r),\n                f2: p + r == 0 ? 0 : (5.0 * p * r) / ((4.0 * p) + r),\n            };\n\n            return results;\n        }\n\n        /**\n         * Called to test if it is okay to drag student centroids during replay.\n         *\n         * @param {number} studentKey - The student id value.\n         * @return {boolean}\n         */\n        function canDragReplayCentroid(studentKey) {\n\n            // Not before final results, i.e. convergence.\n            if (document.getElementById('replayer').innerHTML != langStrings.convergence) {\n                return false;\n            }\n            // ...And only allow researcher to manipulate their own graph.\n            if (replayUserId != userId) {\n                return false;\n            }\n            // ...And not if the student is the only member of the cluster.\n            // Count k-means cluster members.\n            var clusterNum = scaledCentroids[studentKey].ci;\n            var members = 0,\n                student;\n            for (student in scaledCentroids) {\n                if (scaledCentroids[student].ci == clusterNum) {\n                    members++;\n                }\n            }\n            // Count manual cluster members.\n            var iter = getCurrentIteration();\n            var manMembers = 0;\n            if (manualClusters[iter]) {\n                clusterNum = manualClusters[iter][studentKey];\n                for (student in manualClusters[iter]) {\n                    if (manualClusters[iter][student] == clusterNum) {\n                        manMembers++;\n                    }\n                }\n            }\n            if (members == 1 && manMembers <= 1) {\n                return false;\n            }\n            if (manMembers == 1) {\n                return false;\n            }\n\n            return true;\n        }\n\n        /**\n         * Called to pull the current iteration value from the log panel.\n         *\n         * @return {number}\n         */\n        function getCurrentIteration() {\n\n            var lpv = logPanel.innerHTML.split('<br>');\n\n            if (lpv[2] && lpv[2].startsWith(langStrings.iteration)) {\n                return parseInt(lpv[2].split(' ')[1]);\n            } else {\n                return null;\n            }\n        }\n\n        /**\n         * Called to copy centroid data from replayData for manual clustering.\n         */\n        function copyReplayData() {\n\n            for (var iter in replayData) {\n                if (iter >= 0) {\n                    continue;\n                }\n                manualClusters[iter] = {};\n                for (var i = 0; i < replayData[iter].length; i++) {\n                    for (var member in replayData[iter][i].members) {\n\n                        var id = anonUserIds[replayData[iter][i].members[member].id];\n                        manualClusters[iter][id] = i;\n                    }\n                }\n            }\n        }\n\n        /**\n         * Called to render the centroids and hulls for manual clustering results.\n         *\n         * @param {number} currentIter - The current iteration value.\n         * @param {array} manData - The manual clustering data from server.\n         * @param {object} ids - The dataset, graph configuration, and clustering ids.\n         */\n        function drawManualClusters(currentIter, manData, ids) {\n\n            // Get data for hulls and centroids.\n            var hulls = [],\n                points = [],\n                i,\n                student;\n\n            for (i = 0; i < replayData[currentIter].length; i++) {\n                hulls[i] = {};\n                points[i] = [];\n\n                for (student in manualClusters[currentIter]) {\n                    if (manualClusters[currentIter][student] == i) {\n\n                        var x = scaledCentroids[student].x;\n                        var y = scaledCentroids[student].y;\n\n                        hulls[i][x + '_' + y] = {x: x, y: y, colour: centroids[i].colour};\n                        points[i][points[i].length] = [x, y];\n                    }\n                }\n            }\n\n            // Determine if there are manual centroids yet or not.\n            var l = document.getElementsByClassName('manual-centroid').length;\n            var noManualCentroids = l == 0 ? true : false;\n\n            // Make the polygon hulls and get new centroids.\n            ddd.selectAll('.manual-hull').remove();\n            for (i = 0; i < hulls.length; i++) {\n                makePolygonHull(hulls[i], (i + 1) * -1, true, noManualCentroids);\n                manualCentroids[i] = getClusteringCentroid(points[i]);\n            }\n\n            // Align client side copy of manual data with server.\n            if (manData) {\n\n                // Ensure all arrays are in place.\n                if (!manData[ids.did]) {\n                    manData[ids.did] = {};\n                }\n                if (!manData[ids.did][ids.gid]) {\n                    manData[ids.did][ids.gid] = {};\n                }\n                if (!manData[ids.did][ids.gid][ids.cid]) {\n                    manData[ids.did][ids.gid][ids.cid] = {};\n                }\n                if (!manData[ids.did][ids.gid][ids.cid][currentIter]) {\n                    manData[ids.did][ids.gid][ids.cid][currentIter] = [];\n                }\n\n                // Build membership data.\n                for (i = 0; i < manualCentroids.length; i++) {\n                    if (!manualCentroids[i]) {\n                        continue;\n                    }\n                    var members = [];\n\n                    for (student in manualClusters[currentIter]) {\n                        if (manualClusters[currentIter][student] == i) {\n\n                            members[members.length] = {\n                                id:  realUserIds[student],\n                                num: i\n                            };\n                        }\n                    }\n\n                    // Add new data to what came from the server.\n                    manData[ids.did][ids.gid][ids.cid][currentIter][i] = {\n                        centroidx: manualCentroids[i].x,\n                        centroidy: manualCentroids[i].y,\n                        members:   members\n                    };\n                }\n            }\n\n            // Draw clustering centroids.\n            if (noManualCentroids) {\n                drawManualCentroids();\n            } else {\n                drawAnimatedManualCentroids();\n            }\n\n            graph.selectAll('.centroid').raise();\n            graph.selectAll('.clustering-centroid').raise();\n            graph.selectAll('.manual-centroid').raise();\n        }\n\n        /**\n         * Function to stop event propagation.\n         */\n        function stopProp() {\n\n            ddd.event.stopPropagation();\n        }\n\n        /**\n         * Draws the cluster centroid points during manual clustering during replay.\n         */\n        function drawManualCentroids() {\n\n            ddd.selectAll('.manual-centroid').remove();\n            var o = 14;\n\n            for (var i = 0, x, y; i < manualCentroids.length; i++) {\n\n                if (!manualCentroids[i]) {\n                    return;\n                }\n\n                x = manualCentroids[i].x;\n                y = manualCentroids[i].y;\n\n                graph.append('line')\n                    .attr('class', 'manual-centroid')\n                    .attr('id', 'manual1-' + i)\n                    .attr('x1', x - o)\n                    .attr('y1', y - o)\n                    .attr('x2', x + o)\n                    .attr('y2', y + o)\n                    .style('stroke', centroids[i].colour)\n                    .style('stroke-width', '5px')\n                    .style('opacity', 0)\n                    .on('click', stopProp)\n                    .on('click.centroidClick', centroidClick.bind(this, (i + 1) * -1, i, true))\n                    .on('mouseover', clusteroidMouseover.bind(this, i, true));\n\n                graph.append('line')\n                    .attr('class', 'manual-centroid')\n                    .attr('id', 'manual2-' + i)\n                    .attr('x1', x + o)\n                    .attr('y1', y - o)\n                    .attr('x2', x - o)\n                    .attr('y2', y + o)\n                    .style('stroke', centroids[i].colour)\n                    .style('stroke-width', '5px')\n                    .style('opacity', 0)\n                    .on('click', stopProp)\n                    .on('click.centroidClick', centroidClick.bind(this, (i + 1) * -1, i, true))\n                    .on('mouseover', clusteroidMouseover.bind(this, i, true));\n            }\n\n            // Transition in the manual centroids and hull.\n            ddd.selectAll('.manual-centroid').transition().duration(animTime)\n                .style('opacity', 0.5);\n            ddd.selectAll('.manual-hull').transition().duration(animTime)\n                .style('stroke-opacity', 1.0)\n                .style('fill-opacity', hullOpacity);\n        }\n\n        /**\n         * Draws the cluster centroid points.\n         */\n        function drawAnimatedManualCentroids() {\n\n            var o = 14;\n            for (var i = 0, x, y; i < manualCentroids.length; i++) {\n\n                if (!manualCentroids[i]) {\n                    ddd.selectAll('.manual-centroid').remove();\n                    return;\n                }\n\n                x = manualCentroids[i].x;\n                y = manualCentroids[i].y;\n\n                ddd.select('#manual1-' + i).transition().duration(animTime)\n                    .attr('x1', x - o)\n                    .attr('y1', y - o)\n                    .attr('x2', x + o)\n                    .attr('y2', y + o)\n                    .style('display', 'block');\n\n                ddd.select('#manual2-' + i).transition().duration(animTime)\n                    .attr('x1', x + o)\n                    .attr('y1', y - o)\n                    .attr('x2', x - o)\n                    .attr('y2', y + o)\n                    .style('display', 'block');\n            }\n        }\n\n        /**\n         * Called to change manual clustering when user changes replay iteration.\n         *\n         * @param {number} currentIter - The current iteration value\n         */\n        function updateManualClusters(currentIter) {\n\n            // Remove manual clustering results if before convergence.\n            if (!currentIter || currentIter > 0) {\n                graph.selectAll('.manual-centroid').remove();\n                graph.selectAll('.manual-hull').remove();\n                return;\n            }\n\n            // If no manual clustering has been done, nothing to update.\n            if (!haveManualClustering) {\n                return;\n            }\n\n            drawManualClusters(currentIter, null, null);\n        }\n\n        /**\n         * Called to change over/reset some global data for the next replay.\n         *\n         * @param {array} manData - The manual clustering data from the server.\n         * @return {object} - The new replay data.\n         */\n        function changeReplayData(manData) {\n\n            // Figure out which dataset is selected.\n            var sel = document.getElementById('replay-select');\n            var keys,\n                i;\n\n            for (i = 0; i < sel.options.length; i++) {\n                if (sel.options[i].selected) {\n                    keys = sel.options[i].value.split('_');\n                    break;\n                }\n            }\n            var datasetid = keys[0];\n            var coordsid = keys[1];\n            var clusterid = keys[2];\n\n            // Change the global data.\n            replayUserId = datasetid.split('-')[0];\n            coordsData.clusterId = clusterid;\n            lastChange = originalReplayData[datasetid][coordsid].last;\n            presetNodes = originalReplayData[datasetid][coordsid].nodes;\n            lordLinks = originalReplayData[datasetid][coordsid].links;\n            coordsScale = originalReplayData[datasetid][coordsid].scale;\n            modules = originalReplayData[datasetid][coordsid].mods;\n            replayData = originalReplayData[datasetid][coordsid][clusterid];\n            logs = originalReplayData[datasetid][coordsid].logs;\n            users = originalReplayData[datasetid][coordsid].users;\n            comments = originalReplayData[datasetid][coordsid][clusterid].comments;\n\n            // Create map for anonymized id to real id.\n            anonUserIds = {};\n            realUserIds = {};\n            users.forEach(function(u) {\n                realUserIds[u.id] = u.realId;\n                anonUserIds[u.realId] = u.id;\n            });\n\n            clusterIters = 0;\n            clusterSliderValue = 1;\n\n            // Get max positive and negative iteration values.\n            positiveIters = 0;\n            negativeIters = 0;\n            for (var key in replayData) {\n                if (isNaN(key)) {\n                    continue;\n                } else if (key >= 0) {\n                    positiveIters++;\n                } else {\n                    negativeIters--;\n                }\n            }\n\n            // Reset manual clustering variables.\n            manualCentroids = [];\n            manualClusters = {};\n            haveManualClustering = false;\n            var manualData = manData[datasetid][coordsid][clusterid],\n                clusternum,\n                member;\n\n            if (manualData) {\n                haveManualClustering = true;\n\n                // Ensure manual clustering data available for all iterations.\n                for (i = -1; i >= negativeIters; i--) {\n                    if (manualData[i] && !manualData[i - 1]) {\n                        manualData[i - 1] = manualData[i];\n                    }\n\n                    manualClusters[i] = {};\n\n                    for (clusternum in manualData[i]) {\n                        for (member in manualData[i][clusternum].members) {\n\n                            var id = manualData[i][clusternum].members[member].id;\n                            manualClusters[i][anonUserIds[id]] = clusternum;\n                        }\n                    }\n                }\n            }\n\n            // Make the centroids.\n            centroids = [];\n            hullCentroids = {};\n            var ob = {},\n                ci = 0;\n\n            for (clusternum in replayData[1]) {\n                // Clustering centroids.\n                i = centroids.length;\n                centroids[i] = {x: 0, y: 0};\n\n                if (ci < centroidColours.length) {\n                    centroids[i].colour = centroidColours[ci++];\n                } else {\n                    var c;\n                    while (!c) {\n                        c = colours[Math.floor(prng.random() * colours.length)];\n                        c = centroidColours.includes(c) ? undefined : c;\n                    }\n                    centroids[i].colour = c;\n                }\n\n                // User centroids.\n                for (member in replayData[1][clusternum].members) {\n\n                    var anonId = anonUserIds[replayData[1][clusternum].members[member].id];\n                    hullCentroids[anonId] = {\n                        x: replayData[1][clusternum].members[member].x,\n                        y: replayData[1][clusternum].members[member].y\n                    };\n                    ob[anonId] = true;\n                }\n            }\n\n            return {members: ob, did: datasetid, gid: coordsid, cid: clusterid};\n        }\n\n        /**\n         * Called to make a student menu for the replay stage. The menu's values\n         * are needed, but the menu is not visible.\n         *\n         * @param {object} members - A group of userids who are members of a cluster\n         */\n        function fakeStudentMenu(members) {\n\n            // Fake user multiple select menu.\n            studentMenu = document.createElement('select');\n            studentMenu.multiple = true;\n            studentMenu.id = 'student-select';\n            studentMenu.style.display = 'none';\n\n            // Add users to the list.\n            colourIndex = 0;\n            users.forEach(function(u) {\n                addListItem(u, studentMenu);\n            });\n\n            // Determine which users to show and sync colours.\n            for (var i = 0, id; i < studentMenu.options.length; i++) {\n\n                id = studentMenu.options[i].value;\n\n                if (members[id]) {\n                    studentMenu.options[i].selected = true;\n                } else {\n                    studentMenu.options[i].selected = false;\n                }\n\n                if (hullCentroids[id]) {\n                    hullCentroids[id].colour = studentMenu.options[i].colour;\n                }\n            }\n\n            document.body.appendChild(studentMenu);\n        }\n\n        /**\n         * Called to scale normalized server coordinate values back into\n         * graphing and/or clustering space.\n         *\n         * @param {(array|object)} coords - The group of coordinates to scale\n         * @param {boolean} clusterScaling - Scale to clustering space as well?\n         */\n        function forwardScale(coords, clusterScaling) {\n\n            for (var key in coords) {\n                // Scale to graphing space.\n                coords[key].x *= coordsData.distance;\n                coords[key].x += coordsData.originalx;\n\n                coords[key].y *= coordsData.distance;\n                coords[key].y += coordsData.originaly;\n\n                if (clusterScaling) {\n                    // Scale to scaled clustering area.\n                    coords[key].x -= coordsData.centre.x;\n                    coords[key].x *= coordsData.scale;\n                    coords[key].x += width / 2;\n\n                    coords[key].y -= coordsData.centre.y;\n                    coords[key].y *= coordsData.scale;\n                    coords[key].y += height / 2;\n                }\n            }\n        }\n\n        /**\n         * Called to make the clustering replay animation control buttons.\n         */\n        function makeReplayControls() {\n\n            // Make the clustering control panel.\n            var ctrlDiv = document.getElementById('slider');\n\n            // Placeholder for status text.\n            var st = document.createElement('p');\n            st.innerHTML = '&nbsp';\n            st.id = 'replayer';\n            st.style.marginTop = '-20px';\n            ctrlDiv.appendChild(st);\n\n            // Placeholder for student drag and drop text.\n            var dd = document.createElement('p');\n            dd.innerHTML = '&nbsp';\n            dd.id = 'replaydragdrop';\n            dd.style.marginTop = '-12px';\n            ctrlDiv.appendChild(dd);\n\n            // Stop clustering control button.\n            var stop = document.createElement('button');\n            stop.id = 'replay-stop';\n            stop.innerHTML = '&#9606';\n            stop.addEventListener('click', replayStop);\n            stop.style.opacity = 0;\n            ctrlDiv.appendChild(stop);\n\n            // Play/pause clustering control button.\n            var playPause = document.createElement('button');\n            playPause.id = 'replay-pause';\n            playPause.innerHTML = '&#9654';\n            playPause.value = 'play';\n            playPause.addEventListener('click', replayPause);\n            playPause.style.opacity = 0;\n            ctrlDiv.appendChild(playPause);\n\n            // Step back replay button.\n            var playStep1 = document.createElement('button');\n            playStep1.id = 'replay-back';\n            playStep1.innerHTML = '&#9614&#9664';\n            playStep1.addEventListener('click', replayBack);\n            playStep1.style.opacity = 0;\n            ctrlDiv.appendChild(playStep1);\n\n            // Step forward replay button.\n            var playStep2 = document.createElement('button');\n            playStep2.id = 'replay-forward';\n            playStep2.style.marginRight = '80px';\n            playStep2.innerHTML = '&#9654&nbsp&nbsp&#9614';\n            playStep2.addEventListener('click', replayForward.bind(this, true));\n            playStep2.style.opacity = 0;\n            ctrlDiv.appendChild(playStep2);\n\n            // Delete data button.\n            var del = document.createElement('button');\n            del.id = 'delete-button';\n            del.innerHTML = langStrings.delbutton;\n            del.addEventListener('click', deleteClusteringData);\n            del.style.opacity = 0;\n            ctrlDiv.appendChild(del);\n        }\n\n        /**\n         * Called to delete the selected clustering data set.\n         */\n        function deleteClusteringData() {\n\n            if (confirm(langStrings.delconfirm)) {\n\n                var menu = document.getElementById('replay-select');\n                if (menu.selectedIndex > -1) {\n\n                    var value = menu.options[menu.selectedIndex].value;\n                    if (value.length > 0) {\n                        callServer(deleteScript, value.replace('-', '_'));\n                        menu.options[menu.selectedIndex] = null;\n                        replayStop();\n                    }\n                }\n            }\n        }\n\n        /**\n         * Called to stop replaying.\n         */\n        function replayStop() {\n\n            // Remove graph and clear log panel.\n            if (graph) {\n                setTimeout(function() {\n                    graph.remove();\n                    resetLogPanel();\n                    document.getElementById('replayer').innerHTML = '&nbsp;';\n                    document.getElementById('replaydragdrop').innerHTML = '&nbsp;';\n                }, 500);\n            }\n\n            replayData = undefined;\n            scaledCentroids = null;\n            resetPlayButton();\n\n            // Remove some things.\n            document.getElementById('clustering-replay-comment').innerHTML = '&nbsp';\n            document.getElementById('replay-stop').style.opacity = 0;\n            document.getElementById('replay-pause').style.opacity = 0;\n            document.getElementById('replay-back').style.opacity = 0;\n            document.getElementById('replay-forward').style.opacity = 0;\n            document.getElementById('delete-button').style.opacity = 0;\n\n            // Unselect selected clustering run.\n            var sel = document.getElementById('replay-select');\n\n            if (sel.selectedIndex > -1) {\n                sel.options[sel.selectedIndex].selected = false;\n            }\n        }\n\n        /**\n         * Called to reset the log panel.\n         */\n        function resetLogPanel() {\n            logPanel.readOnly = false;\n            logPanel.innerHTML = '';\n            setTimeout(function() {\n                logPanel.readOnly = true;\n            }, 300);\n        }\n\n        /**\n         * Called to reset the replay/pause button to its original state.\n         */\n        function resetPlayButton() {\n            var button = document.getElementById('replay-pause');\n            button.innerHTML = '&#9654';\n            button.value = 'play';\n            clearInterval(clusterAnimInterval);\n            clusterAnimInterval = undefined;\n        }\n\n        /**\n         * Called to play/pause the clustering replay animation.\n         */\n        function replayPause() {\n\n            // Trying to play without selecting a clustering run.\n            if (!replayData) {\n                return;\n            }\n            var button = document.getElementById('replay-pause');\n\n            // Playing.\n            if (button.value == 'play') {\n                button.innerHTML = '&#9613&#9613';\n                button.value = 'pause';\n                replayForward(false);\n                clusterAnimInterval = setInterval(replayForward.bind(this, false), 1200);\n\n            } else {\n                // Paused.\n                resetPlayButton();\n            }\n        }\n\n        /**\n         * Called to step the clustering replay forward.\n         *\n         * @param {boolean} resetPlay - Are we resetting the play button?\n         */\n        function replayForward(resetPlay) {\n\n            // Trying to replay without selecting anything.\n            if (!replayData) {\n                return;\n            }\n            if (resetPlay) {\n                resetPlayButton();\n            }\n\n            // Get next iteration value.\n            clusterIters++;\n            var actualIter = clusterIters - 1;\n\n            // Might be negative.\n            if (clusterIters > positiveIters && replayData[-1]) {\n                actualIter = positiveIters - clusterIters + 1;\n\n                // Keep from exceeding bounds.\n                if (!replayData[actualIter - 1]) {\n                    clusterIters--;\n                    resetPlayButton();\n                    return;\n                }\n            }\n            if (actualIter > positiveIters) {\n                clusterIters--;\n                resetPlayButton();\n                return;\n            }\n\n            // At initial replay position, remove graph and scale user centroids.\n            if (clusterIters == 1) {\n                clusterSliderValue = 2;\n                clustering = true;\n                noCentroidMouse = false;\n                clusteringCase2();\n\n            } else if (clusterIters == 2) {\n                // Next position, show random clustering centroids.\n                clusteringCase3();\n                runReplayIter(actualIter - 1, false, true);\n\n            } else {\n                // Regular, positive iteration, forward replay.\n                runReplayIter(actualIter - 1, false, false);\n            }\n        }\n\n        /**\n         * Called to step the clustering replay backward.\n         */\n        function replayBack() {\n\n            // Trying to replay without selecting anything or back too far.\n            if (!replayData || !replayCentroid || clusterIters - 1 < 0) {\n                return;\n            }\n            resetPlayButton();\n\n            // Get next iteration value.\n            clusterIters--;\n            var actualIter = clusterIters - 1;\n\n            // Might be negative.\n            if (clusterIters > positiveIters) {\n                actualIter = positiveIters - clusterIters + 1;\n            }\n\n            // Initial replay position, redraw graph with unscaled user centroids.\n            if (clusterIters == 0) {\n                clusterSliderValue = 1;\n                clusteringCase1();\n                clustering = false;\n                logPanel.innerHTML = logPanel.innerHTML.slice(logPanel.innerHTML.indexOf('<br><br>') + 8);\n                document.getElementById('replayer').innerHTML = '&nbsp;';\n                document.getElementById('replaydragdrop').innerHTML = '&nbsp;';\n\n            } else if (clusterIters == 1) {\n                // From second position, remove clustering centroids.\n                scaledCentroids = null;\n                clusteringCase2();\n                logPanel.innerHTML = logPanel.innerHTML.slice(logPanel.innerHTML.indexOf('<br><br>') + 8);\n                document.getElementById('replayer').innerHTML = '&nbsp;';\n                document.getElementById('replaydragdrop').innerHTML = '&nbsp;';\n\n            } else {\n                // Regular moving back with positive iteration values.\n                scaledCentroids = null;\n                runReplayIter(actualIter - 1, true, (clusterIters == 2));\n            }\n        }\n\n        /**\n         * Called to do a clustering replay iteration.\n         *\n         * @param {number} iter - The current iteration value\n         * @param {boolean} removeLog - Should the log panel entry be removed\n         * @param {boolean} firstRound - First itertation runs a bit different\n         */\n        function runReplayIter(iter, removeLog, firstRound) {\n\n            var hulls = [],\n                members = {},\n                i,\n                ob = {};\n\n            // For this iteration.\n            for (i = 0; i < replayData[iter].length; i++, ob = {}) {\n                graph.selectAll('#hull-' + i).remove();\n\n                // Make the clustering centroids.\n                centroids[i].x = replayData[iter][i].centroidx;\n                centroids[i].y = replayData[iter][i].centroidy;\n\n                // Get members for this cluster.\n                for (var member in replayData[iter][i].members) {\n\n                    var x = replayData[iter][i].members[member].x;\n                    var y = replayData[iter][i].members[member].y;\n                    var id = anonUserIds[replayData[iter][i].members[member].id];\n\n                    hullCentroids[id].x = x;\n                    hullCentroids[id].y = y;\n\n                    ob[x + '_' + y] = {x: x, y: y, colour: centroids[i].colour};\n\n                    members[id] = i;\n                }\n                hulls[i] = ob;\n            }\n\n            // Transform centroid coordinates.\n            forwardScale(centroids, true);\n\n            if (firstRound) {\n                drawClusteringCentroids();\n            } else {\n                // Transform member coordinates, scale to original graph.\n                forwardScale(hullCentroids, false);\n\n                // Make the polygon hulls.\n                for (i = 0; i < hulls.length; i++) {\n                    forwardScale(hulls[i], true);\n                    makePolygonHull(hulls[i], i, false, false);\n                }\n                // Draw clustering centroids.\n                drawAnimatedClusteringCentroids(animTime);\n            }\n            // Draw user centroids.\n            drawAnimatedCentroids(replayCentroid[2], replayCentroid[0],\n                                  replayCentroid[1], animTime);\n            graph.selectAll('.centroid').raise();\n            graph.selectAll('.clustering-centroid').raise();\n\n            updateManualClusters(iter);\n\n            // Write/remove clustering results to/from log panel.\n            if (removeLog) {\n                logPanel.innerHTML = logPanel.innerHTML.slice(logPanel.innerHTML.indexOf('<br><br>') + 8);\n            } else {\n                for (var key in members) {\n                    scaledCentroids[key].ci = members[key];\n                }\n                logClusteringResults(iter);\n                logManualClusteringResults(iter);\n            }\n\n            // Display status messages below replay menu.\n            if (iter < 0) {\n                document.getElementById('replayer').innerHTML = langStrings.convergence;\n                document.getElementById('replayer').style.color = 'green';\n\n                // Don't show the drag on message when researcher viewing anothers data.\n                if (isResearcher) {\n                    var opts = document.getElementById('replay-select').options;\n\n                    for (i = 0; i < opts.length; i++) {\n                        if (opts[i].selected) {\n                            var uid = opts[i].value.split('-')[0];\n                            if (uid == userId) {\n                                document.getElementById('replaydragdrop').innerHTML = langStrings.dragon;\n                            }\n                            break;\n                        }\n                    }\n                } else {\n                    document.getElementById('replaydragdrop').innerHTML = langStrings.dragon;\n                }\n            } else {\n                document.getElementById('replayer').innerHTML = langStrings.iteration + ' ' + iter;\n                document.getElementById('replayer').style.color = 'black';\n                document.getElementById('replaydragdrop').innerHTML = langStrings.dragoff;\n            }\n        }\n\n        /**\n         * Called to make the clustering animation control buttons.\n         *\n         * @return {HTMLElement}\n         */\n        function makeAnimationControls() {\n\n            // Make the clustering control panel.\n            var ctrlDiv = document.getElementById('anim-controls');\n            ctrlDiv.appendChild(document.createTextNode(langStrings.runkmeans));\n\n            // Placeholder for status text.\n            var st = document.createElement('p');\n            st.innerHTML = '&nbsp';\n            st.id = 'clustering';\n            ctrlDiv.appendChild(st);\n\n            // Placeholder for student drag and drop text.\n            var dd = document.createElement('p');\n            dd.innerHTML = '&nbsp';\n            dd.id = 'dragdrop';\n            dd.style.marginTop = '-12px';\n            ctrlDiv.appendChild(dd);\n\n            // Play/pause clustering control button.\n            var playPause = document.createElement('button');\n            playPause.id = 'play-pause';\n            playPause.style.marginLeft = '5px';\n            playPause.style.marginRight = '5px';\n            playPause.innerHTML = '&#9654'; // 9654=play.\n            playPause.className = \"btn btn-secondary\";\n            playPause.addEventListener('click', doPlayPause);\n            playPause.disabled = true;\n\n            // Steppng clustering control button.\n            var playStep = document.createElement('button');\n            playStep.id = 'play-step';\n            playStep.style.marginLeft = '5px';\n            playStep.innerHTML = '&#9654&nbsp&nbsp&#9614'; // 9654=play, 9614=bar.\n            playStep.className = \"btn btn-secondary\";\n            playStep.addEventListener('click', doPlayStep.bind(this, playPause));\n            playStep.disabled = true;\n\n            ctrlDiv.appendChild(playStep);\n            ctrlDiv.appendChild(playPause);\n\n            // Stop clustering control button.\n            var stop = document.createElement('button');\n            stop.id = 'stop';\n            stop.style.marginTop = '5px';\n            stop.style.marginLeft = '5px';\n            stop.innerHTML = langStrings.reset;\n            stop.className = \"btn btn-secondary\";\n            stop.addEventListener('click', stopClustering);\n            ctrlDiv.appendChild(stop);\n\n            return ctrlDiv;\n        }\n\n        /**\n         * Event listener for stop clustering button. Will reset clustering parameters\n         * so clustering can be restarted.\n         */\n        function stopClustering() {\n\n            // Reset clustering stuff.\n            clustering = false;\n            clusterIters = 0;\n            clearInterval(clusterAnimInterval);\n            clusterAnimInterval = undefined;\n            coordsData.clusterId = Date.now();\n            clusterSlider.removeAttribute('disabled');\n\n            // Remove clustering name text box and button.\n            document.getElementById('clustering-replay-comment').innerHTML = '&nbsp';\n\n            // Reset cluster slider.\n            if (clusterSliderValue == 3) {\n                clusterSlider.noUiSlider.set(2);\n                setTimeout(function() {\n                    clusterSlider.noUiSlider.set(1);\n                    clusterSliderValue = 1;\n                }, animTime);\n            } else {\n                clusterSlider.noUiSlider.set(1);\n                clusterSliderValue = 1;\n            }\n\n            // Reset displayed text.\n            document.getElementById('clustering').innerHTML = '&nbsp';\n            document.getElementById('dragdrop').innerHTML = '&nbsp';\n            document.getElementById('play-pause').innerHTML = '&#9654'; // 9654=play.\n            document.getElementById('play-pause').disabled = true;\n            document.getElementById('play-step').disabled = true;\n\n            if (document.getElementById('num-clusters')) {\n                document.getElementById('num-clusters').readOnly = false;\n                document.getElementById('num-clusters').value = '';\n            }\n\n            // Remove clustering centroids and hulls.\n            ddd.selectAll('.clustering-centroid')\n                .transition(trans).style.display = 'none';\n            ddd.selectAll('.cluster-hull')\n                .transition(trans).style.display = 'none';\n\n            setTimeout(function() {\n                ddd.selectAll('.clustering-centroid').remove();\n                ddd.selectAll('.cluster-hull').remove();\n                resetLogPanel();\n            }, animTime);\n\n            // Reset cluster membership.\n            for (var key in scaledCentroids) {\n                scaledCentroids[key].ci = undefined;\n            }\n        }\n\n        /**\n         * Event listener for play/step button. Will pause a running clustering\n         * animation or run a single clustering iteration.\n         *\n         * @param {HTMLElement} playPause - The play/pause button\n         */\n        function doPlayStep(playPause) {\n\n            // Only allow when on clustering stage of cluster slider.\n            if (clusterSliderValue != 3) {\n                return;\n            }\n            // Already playing, then just pause.\n            if (clusterAnimInterval) {\n                clearInterval(clusterAnimInterval);\n                clusterAnimInterval = undefined;\n                playPause.innerHTML = '&#9654'; // 9654=play.\n                clusterSlider.removeAttribute('disabled');\n            } else {\n                // Run single iteration.\n                runClusteringIter();\n            }\n        }\n\n        /**\n         * Event listener for clustering play/pause button. Will start a clustering\n         * animation or pause a running animation.\n         */\n        function doPlayPause() {\n\n            // Only allow when on clustering stage of cluster slider.\n            if (clusterSliderValue != 3) {\n                return;\n            }\n            // Play.\n            if (!clusterAnimInterval) {\n                clusterAnimInterval = setInterval(runClusteringIter, 1000);\n                this.innerHTML = '&#9613&#9613'; // 9613=bar.\n                clusterSlider.setAttribute('disabled', true);\n\n            } else {\n                // Pause.\n                clearInterval(clusterAnimInterval);\n                clusterAnimInterval = undefined;\n                this.innerHTML = '&#9654'; // 9654=play.\n                clusterSlider.removeAttribute('disabled');\n            }\n        }\n\n        /**\n         * Called to add the clustering name and button to the navigation area.\n         */\n        function addClusteringNameToNavigation() {\n\n            var header = document.getElementById('clustering-replay-comment');\n\n            var textBox = document.createElement('input');\n            textBox.type = 'text';\n            textBox.id = 'clustering-replay-comment-text';\n\n            if (comments[0]) {\n                textBox.value = comments[0];\n            } else {\n                textBox.placeholder = langStrings.clusteringname;\n            }\n            header.appendChild(textBox);\n\n            var button = document.createElement('button');\n            button.innerHTML = langStrings.clusteringnamebutton;\n            header.appendChild(button);\n\n            button.addEventListener('click', function() {\n\n                // Only allow the owner of this data to change the name.\n                if (replayUserId == userId) {\n\n                    // Do not call server if the text area is empty or has not changed.\n                    if (textBox.value != '') {\n\n                        // The comment data for the server.\n                        var data = {\n                            'coordsid':  lastChange,\n                            'clusterid': coordsData.clusterId,\n                            'studentid': 0,\n                            'remark':    textBox.value\n                        };\n\n                        callServer(commentsScript, data);\n\n                        // Figure out which dataset is selected when replaying.\n                        var sel = document.getElementById('replay-select');\n                        if (sel) {\n                            var keys;\n\n                            for (var i = 0; i < sel.options.length; i++) {\n                                if (sel.options[i].selected) {\n                                    keys = sel.options[i].value.split('_');\n                                    break;\n                                }\n                            }\n                            var datasetid = keys[0];\n                            var coordsid = keys[1];\n                            var clusterid = keys[2];\n\n                            // Change the global data.\n                            originalReplayData[datasetid][coordsid][clusterid].comments[0] = textBox.value;\n                        }\n                    }\n                }\n            });\n        }\n\n        /**\n         * Function to run a clustering iteration.\n         */\n        function runClusteringIter() {\n\n            // First round?\n            if (clusterIters == 0) {\n\n                clustering = true;\n                addClusteringNameToNavigation();\n\n                // Get the number of clusters from the user.\n                var nm = document.getElementById('num-clusters');\n                var v = parseInt(nm.value);\n\n                // Ensure sane k value.\n                if (isNaN(v) || v < 2) {\n                    v = 3;\n                }\n                var ob = {};\n                for (var key in hullCentroids) {\n                    ob[hullCentroids[key].x + \"_\" + hullCentroids[key].y] = 1;\n                }\n                while (v > Object.keys(ob).length) {\n                    v--;\n                }\n                nm.value = v;\n                nm.readOnly = true;\n\n                // Get initial random cluster centroids.\n                centroids = [];\n                oldCentroids = null;\n\n                // Assign random locations and colours to centroids.\n                var i,\n                    ci;\n                for (i = 0, ci = 0; i < v; i++) {\n\n                    if (ci < centroidColours.length) {\n                        centroids[i] = getRandomCentroid(null, centroidColours[ci++]);\n                    } else {\n                        var c;\n                        while (!c) {\n                            c = colours[Math.floor(prng.random() * colours.length)];\n                            c = centroidColours.includes(c) ? undefined : c;\n                        }\n                        centroids[i] = getRandomCentroid(null, c);\n                    }\n                }\n                drawClusteringCentroids();\n\n                document.getElementById('clustering').innerHTML = langStrings.randcentroids;\n                document.getElementById('dragdrop').innerHTML = langStrings.dragoff;\n                document.getElementById('clustering').style.color = 'black';\n\n                // Show clustering results in log panel.\n                var clusterMembers = logClusteringResults(clusterIters);\n\n                // Log clustering iteration at server.\n                coordsData.iteration = clusterIters;\n                sendClustersToServer(clusterMembers);\n            } else {\n                // Not the first iteration, just run it.\n                runKMeans(clusterIters);\n                drawAnimatedClusteringCentroids(animTime);\n            }\n\n            clusterIters++;\n\n            // Check for convergence.\n            if (document.getElementById('clustering').innerHTML == langStrings.convergence) {\n\n                clearInterval(clusterAnimInterval);\n                clusterAnimInterval = undefined;\n                clusterSlider.removeAttribute('disabled');\n                document.getElementById('play-pause').innerHTML = '&#9654';\n                document.getElementById('play-pause').disabled = true;\n                document.getElementById('play-step').disabled = true;\n            }\n        }\n\n        /**\n         * Called to get a random clustering centroid.\n         *\n         * @param {object} ctd - The old centroid point\n         * @param {string} col - The colour of centroid\n         * @return {object}\n         */\n        function getRandomCentroid(ctd, col) {\n\n            // Keep away from edges of window.\n            var offset = 100;\n            var MX = width - offset,\n                mx = offset,\n                MY = height - offset,\n                my = offset,\n                rx,\n                ry,\n                dx,\n                dy,\n                d = 0;\n\n            // If this centroid has been made before.\n            if (ctd) {\n                // Ensure the new random centroid is not too close to the old one,\n                // can cause premature convergence.\n                while (d < 100) {\n                    rx = Math.floor(Math.random() * (MX - mx) + mx);\n                    ry = Math.floor(Math.random() * (MY - my) + my);\n                    dx = rx - ctd.x;\n                    dy = ry - ctd.y;\n                    d = Math.sqrt(dx * dx + dy * dy);\n                }\n            } else {\n                // First time this centroid is made.\n                rx = Math.floor(Math.random() * (MX - mx) + mx);\n                ry = Math.floor(Math.random() * (MY - my) + my);\n            }\n\n            return {x: rx, y: ry, colour: col};\n        }\n\n        /**\n         * Draws the cluster centroid points.\n         */\n        function drawClusteringCentroids() {\n\n            ddd.selectAll('.clustering-centroid').remove();\n            var o = 14,\n                i,\n                x,\n                y;\n\n            for (i = 0; i < centroids.length; i++) {\n\n                x = centroids[i].x;\n                y = centroids[i].y;\n\n                graph.append('line')\n                    .attr('class', 'clustering-centroid')\n                    .attr('id', 'cluster1-' + i)\n                    .attr('x1', x - o)\n                    .attr('y1', y - o)\n                    .attr('x2', x + o)\n                    .attr('y2', y + o)\n                    .style('stroke', centroids[i].colour)\n                    .style('stroke-width', '5px')\n                    .on('click', stopProp)\n                    .on('click.centroidClick', centroidClick.bind(this, (i + 1) * -1, i, true))\n                    .on('mouseover', clusteroidMouseover.bind(this, i, false));\n\n                graph.append('line')\n                    .attr('class', 'clustering-centroid')\n                    .attr('id', 'cluster2-' + i)\n                    .attr('x1', x + o)\n                    .attr('y1', y - o)\n                    .attr('x2', x - o)\n                    .attr('y2', y + o)\n                    .style('stroke', centroids[i].colour)\n                    .style('stroke-width', '5px')\n                    .on('click', stopProp)\n                    .on('click.centroidClick', centroidClick.bind(this, (i + 1) * -1, i, true))\n                    .on('mouseover', clusteroidMouseover.bind(this, i, false));\n            }\n        }\n\n        /**\n         * Function to build a common links set for clustered students.\n         *\n         * @param {array} studentKeys - Array of student ids.\n         * @param {object} notNodes - Non-visible graph nodes.\n         * @param {number} numStudents - The number of students.\n         * @return {array} common - The common link set.\n         */\n        function getCommonLinks(studentKeys, notNodes, numStudents) {\n\n            // Build a linkset from all the students in this cluster.\n            var links = {},\n                student,\n                link,\n                s,\n                t,\n                id,\n                i;\n\n            for (student in studentKeys) {\n                for (i = sliderValues[0]; i < graphData.edges[student].length && i <= sliderValues[1]; i++) {\n\n                    // Parse out the souce and target ids.\n                    link = graphData.edges[student][i];\n\n                    if (typeof link.source == 'string') {\n                        s = parseInt(link.source);\n                        t = parseInt(link.target);\n                    } else {\n                        s = link.source.id;\n                        t = link.target.id;\n                    }\n\n                    // Don't link to an invisible node.\n                    if (notNodes[s] || notNodes[t]) {\n                        continue;\n                    }\n                    // Order the link so links in either direction equivalent.\n                    id = s + '_' + t;\n                    if (s > t) {\n                        id = t + '_' + s;\n                    }\n\n                    // Add the link to the link set, considering weights.\n                    if (!links[id]) {\n                        links[id] = {};\n                        links[id][student] = 1;\n                    } else if (!links[id][student]) {\n                        links[id][student] = 1;\n                    } else {\n                        links[id][student]++;\n                    }\n                }\n            }\n\n            // Determine which links in the link set are common.\n            var common = [],\n                lid,\n                key;\n\n            for (lid in links) {\n                // Common links will be in all students link sets.\n                if (Object.keys(links[lid]).length == numStudents) {\n\n                    // Use the lowest weight among the students.\n                    var min = Number.MAX_SAFE_INTEGER;\n\n                    for (key in links[lid]) {\n                        if (min > links[lid][key]) {\n                            min = links[lid][key];\n                        }\n                    }\n\n                    // Make the common link.\n                    var split = lid.split('_');\n\n                    common[common.length] = {\n                        source: split[0],\n                        target: split[1],\n                        weight: min,\n                        colour: 'black'\n                    };\n                }\n            }\n            // Keep the section to module links.\n            for (i = 0; i < graphData.links.length; i++) {\n                common[common.length] = graphData.links[i];\n            }\n\n            return common;\n        }\n\n        /**\n         * Mouse listener for the cluster centroids. This function will\n         * determine the common links among the students in a cluster and\n         * display these common links. The graph and links will remain in place\n         * so the user can preview a node. Clicking anywhere in the graph area\n         * will remove the common links graph.\n         *\n         * @param {number} k - The cluster number\n         * @param {boolean} manualClustering - Is called for manual cluster?\n         */\n        function clusteroidMouseover(k, manualClustering) {\n\n            graphLinks.remove();\n\n            // Change mouse listeners, normal method no work??\n            noCentroidMouse = true;\n            noNodeMouse = false;\n\n            iframeStaticPos = true;\n\n            // Remove graph when user clicks somewhere.\n            graph.on('click', removeGraph);\n\n            // Get the students in cluster k.\n            var studentKeys = {},\n                key;\n            if (manualClustering) {\n                var currentIter = getCurrentIteration();\n\n                for (key in manualClusters[currentIter]) {\n                    if (manualClusters[currentIter][key] == k) {\n                        studentKeys[key] = key;\n                    }\n                }\n            } else {\n                for (key in scaledCentroids) {\n                    if (scaledCentroids[key].ci == k) {\n                        studentKeys[key] = key;\n                    }\n                }\n            }\n            var numStudents = Object.keys(studentKeys).length;\n\n            // Get the non-visible nodes.\n            var notNodes = {},\n                i;\n            for (i = 0; i < graphData.nodes.length; i++) {\n                if (!graphData.nodes[i].visible) {\n                    notNodes[graphData.nodes[i].id] = 1;\n                }\n            }\n\n            var common = getCommonLinks(studentKeys, notNodes, numStudents);\n\n            // Show the graph with common links.\n            graphNodes\n                .style('display', 'block')\n                .style('opacity', 1.0)\n                .on('mouseover', mouseover)\n                .on('mouseout', mouseout);\n\n            simulation.force('link').links(common);\n            makeLinks(common);\n\n            graphLinks\n                .on('mouseover', linkMouseover)\n                .on('mouseout', mouseout);\n\n            simulation.restart();\n            setTimeout(function() {\n                simulation.stop();\n                graphLinks.lower();\n                ddd.selectAll('.cluster-hull').lower();\n            }, 10);\n        }\n\n        /**\n         * Event listener for clustering stage, used when showing the common\n         * links to remove the common links graph.\n         */\n        function removeGraph() {\n\n            noCentroidMouse = false;\n            noNodeMouse = true;\n            iframeStaticPos = false;\n\n            graphLinks.remove();\n\n            graphNodes\n                .style('display', 'none')\n                .on('mouseover', null)\n                .on('mouseout', null);\n\n            graph.on('click', null);\n        }\n\n        /**\n         * Event listener for links when common links graph is showing.\n         *\n         * @param {object} link - The link that was hovered over\n         */\n        function linkMouseover(link) {\n\n            // Ignore if not a common link.\n            if (link.colour != 'black') {\n                return;\n            }\n            // Remove listeners so they are not called again as mouse moves.\n            graphLinks.on('mouseover', null);\n\n            graphNodes\n                .on('mouseover', null)\n                .on('mouseout', null);\n\n            ddd.selectAll('.clustering-centroid')\n                .on('mouseover', null);\n\n            // Call event listener manually to create text boxes and iframes.\n            mouseover(link.source);\n            iframeRight = true;\n            mouseover(link.target, true);\n            iframeRight = false;\n        }\n\n        /**\n         * Clustering function, does only 1 iteration per call.\n         *\n         * @param {number} iter - The clustering iteration value\n         */\n        function runKMeans(iter) {\n\n            // Check for convergence.\n            if (document.getElementById('clustering').innerHTML == langStrings.convergence) {\n                return;\n            } else if (Object.keys(scaledCentroids).length == 0) {\n                // ... or nothing to cluster.\n                document.getElementById('clustering').innerHTML = langStrings.convergence;\n                return;\n            }\n\n            var out = langStrings.iteration + ': ' + iter,\n                key,\n                i,\n                dx,\n                dy;\n\n            // Assign each student to a cluster.\n            for (key in scaledCentroids) {\n                scaledCentroids[key].ci = getNewCluster(scaledCentroids[key]);\n            }\n\n            // Calculate the new centroids.\n            var newCentroids = [];\n\n            for (i = 0; i < centroids.length; i++) {\n                newCentroids[i] = getNewCentroid(i);\n            }\n\n            // Swap centroid sets.\n            oldCentroids = centroids;\n            centroids = newCentroids;\n\n            // If this is not the first iteration, check for convergence.\n            var converged = false;\n            if (oldCentroids) {\n\n                // Calculate the total distance moved by all centroids.\n                var total = 0;\n\n                for (i = 0; i < centroids.length; i++) {\n\n                    dx = oldCentroids[i].x - centroids[i].x;\n                    dy = oldCentroids[i].y - centroids[i].y;\n                    total += Math.sqrt(dx * dx + dy * dy);\n                }\n\n                // If the total distance is less than threshold, then convergence.\n                if (total <= convergenceDistance) {\n                    out = langStrings.convergence;\n                    document.getElementById('clustering').style.color = 'green';\n                    converged = true;\n                }\n            }\n\n            // Update clustering status text.\n            document.getElementById('clustering').innerHTML = out;\n            document.getElementById('dragdrop').innerHTML =\n                iter > 0 && !converged ? langStrings.dragon : langStrings.dragoff;\n\n            // Show clustering results in log panel.\n            var clusterMembers = logClusteringResults(iter);\n\n            // Log clustering iteration at server.\n            coordsData.iteration = converged ? -1 : iter;\n            sendClustersToServer(clusterMembers);\n        }\n\n        /**\n         * Called to get a new centroid after reassigning students to clusters.\n         *\n         * @param {number} k - The cluster number\n         * @return {object}\n         */\n        function getNewCentroid(k) {\n\n            var arr = [],\n                ob = {},\n                key;\n\n            // For the students in cluster k.\n            for (key in scaledCentroids) {\n\n                if (scaledCentroids[key].ci == k) {\n\n                    arr[arr.length] = [scaledCentroids[key].x, scaledCentroids[key].y];\n\n                    ob[scaledCentroids[key].x + '_' + scaledCentroids[key].y] = {\n                        x: scaledCentroids[key].x,\n                        y: scaledCentroids[key].y,\n                        colour: centroids[k].colour\n                    };\n                }\n            }\n\n            // Remove old hull and make a new one.\n            graph.selectAll('#hull-' + k).remove();\n            makePolygonHull(ob, k, false, false);\n            graph.selectAll('.centroid').raise();\n            graph.selectAll('.clustering-centroid').raise();\n\n            // Using an object to ensure only unique points are considered\n            // importing logs multiple times can result in identical student records\n            // that leave student centroids overlapped, which causes problems with\n            // the centroid calculation.\n            var ok = Object.keys(ob);\n\n            // No students assigned to cluster, regenerate cluster centroid.\n            if (ok.length == 0) {\n                return getRandomCentroid(centroids[k], centroids[k].colour);\n            } else {\n                var ctd = getClusteringCentroid(arr);\n                ctd.colour = centroids[k].colour;\n                return ctd;\n            }\n        }\n\n        /**\n         * Gets the clustering centroid, accounting for all student points,\n         * even if the points overlap.\n         *\n         * @param {array} arr - The array of student centroid points\n         * @return {object}\n         */\n        function getClusteringCentroid(arr) {\n\n            if (arr.length == 0) {\n                return null;\n            }\n            var tx = 0,\n                ty = 0,\n                i;\n\n            // Sum all points.\n            for (i = 0; i < arr.length; i++) {\n                tx += arr[i][0];\n                ty += arr[i][1];\n            }\n\n            // Centroid is mean of summation.\n            return {x: tx / arr.length, y: ty / arr.length};\n        }\n\n        /**\n         * Log the clustering results to the log panel and get membership data for server.\n         *\n         * @param {number} iter - The clustering iteration number\n         * @return {array}\n         */\n        function logClusteringResults(iter) {\n\n            // Log panel text.\n            var lpt = langStrings.numstudents + ': ' + Object.keys(scaledCentroids).length + '<br>' +\n                langStrings.numofclusters + ': ' + centroids.length + '<br>' +\n                langStrings.iteration + ': ' + iter + '<br>';\n\n            if (document.getElementById('clustering') &&\n                document.getElementById('clustering').innerHTML == langStrings.convergence) {\n\n                lpt += '<span style=\"color:green\">' + langStrings.convergence + '</span><br>';\n            }\n\n            // Get membership data for log panel and server.\n            var serverData = [],\n                i,\n                dx,\n                dy,\n                d,\n                key,\n                c;\n\n            for (i = 0; i < centroids.length; i++) {\n\n                dx = centroids[i].x - width / 2;\n                dy = centroids[i].y - height / 2;\n                d = Math.sqrt(dx * dx + dy * dy);\n                c = centroids[i].colour;\n\n                // Add distance to cluster.\n                lpt += langStrings.disttocluster + ' <span style=\"color:' + c + '\">' +\n                    c + '</span>: ' + Math.round(d, 2) + '<br>' + langStrings.cluster +\n                    ' ' + c + ' ' + langStrings.members + ': ' + '[';\n\n                serverData[i] = [];\n\n                // Add members for this cluster.\n                for (key in scaledCentroids) {\n                    if (scaledCentroids[key].ci == i) {\n                        lpt += key + ', ';\n                        serverData[i][serverData[i].length] = key;\n                    }\n                }\n                // Remove trailing comma.\n                if (lpt.indexOf(',', lpt.length - 3) != -1) {\n                    lpt = lpt.slice(0, -2);\n                }\n                lpt += ']<br>';\n            }\n            lpt += '<br>';\n\n            // Write iteration results to log panel.\n            logPanel.innerHTML = lpt + logPanel.innerHTML;\n\n            return serverData;\n        }\n\n        /**\n         * Function called to send the cluster data to the server for logging.\n         *\n         * @param {array} members - An array of arrays representing the clustering membership\n         */\n        function sendClustersToServer(members) {\n\n            var out = {clusterCoords: []},\n                i,\n                j,\n                rsd;\n            for (i = 0; i < members.length; i++) {\n\n                // Get the reversed centroid coordinate.\n                out.clusterCoords[i] = reverseScale(centroids[i]);\n                out.clusterCoords[i].num = i;\n\n                // Map anonymized student id back to real id for server.\n                for (j = 0; j < members[i].length; j++) {\n                    rsd = reverseScale(scaledCentroids[members[i][j]]);\n                    members[i][j] = {\n                        id:  realUserIds[members[i][j]],\n                        num: i,\n                        x:   rsd.x,\n                        y:   rsd.y\n                    };\n                }\n            }\n\n            out.members = members;\n            out.iteration = coordsData.iteration;\n            out.clusterId = coordsData.clusterId;\n            out.coordsid = lastChange;\n            out.usegeometric = useGeometricCentroids ? 1 : 0;\n\n            // Prevent further server side clustering if partial time slice clustered.\n            if ((sliderValues[0] != 0 || sliderValues[1] != graphData.maxSession) &&\n                    out.iteration < 0) {\n                out.iteration = clusterIters;\n            }\n\n            callServer(clustersScript, out);\n        }\n\n        /**\n         * Function called to reverse the scaling and translation done to centroids.\n         * The reversed values are normalized to the same coordinate space as the\n         * module coordinates stored at the server.\n         *\n         * @param {object} centroid - The centroid point to reverse scale/translate\n         * @return {object}\n         */\n        function reverseScale(centroid) {\n\n            // Reverse the scaling and translation done to the centroids when clustering.\n            var newx = ((centroid.x - width / 2) / coordsData.scale) + coordsData.centre.x;\n            var newy = ((centroid.y - height / 2) / coordsData.scale) + coordsData.centre.y;\n\n            // Original node coords are normalized in DB, scaled and translated into\n            // position on screen, reverse screen scale and translate to return to\n            // normalized DB coordinate space.\n            newx = (newx - coordsData.originalx) / coordsData.distance;\n            newy = (newy - coordsData.originaly) / coordsData.distance;\n\n            return {x: newx, y: newy};\n        }\n\n        /**\n         * Draws the cluster centroid points.\n         *\n         * @param {number} t - The time of animation transition duration\n         */\n        function drawAnimatedClusteringCentroids(t) {\n\n            var o = 14,\n                i,\n                x,\n                y;\n            for (i = 0; i < centroids.length; i++) {\n\n                x = centroids[i].x;\n                y = centroids[i].y;\n\n                ddd.select('#cluster1-' + i).transition().duration(t)\n                    .attr('x1', x - o)\n                    .attr('y1', y - o)\n                    .attr('x2', x + o)\n                    .attr('y2', y + o);\n\n                ddd.select('#cluster2-' + i).transition().duration(t)\n                    .attr('x1', x + o)\n                    .attr('y1', y - o)\n                    .attr('x2', x - o)\n                    .attr('y2', y + o);\n            }\n        }\n\n        /**\n         * Called to make the clustering slider for the clustering screen.\n         *\n         * @param {string} ph - A placeholder text for text box\n         * @param {HTMLElement} ctrlDiv - The control panel div\n         */\n        function makeClusterSlider(ph, ctrlDiv) {\n\n            // Make the clustering slider.\n            clusterSlider = document.getElementById('cluster-slider');\n            slider.create(clusterSlider, {\n                start: [1],\n                handles: 1,\n                range: {\n                    min: 1,\n                    max: 3\n                },\n                step: 1,\n                orientation: 'vertical',\n                direction: 'rtl',\n                pips: {\n                    mode: 'steps',\n                    stepped: true,\n                    density: 100,\n                    filter: function() {\n                        return 1;\n                    },\n                    format: {\n                        to: function(value) {\n                            switch (value) {\n                                case 1: return langStrings.showcentroids;\n                                case 2: return langStrings.removegraph;\n                                case 3: return ph;\n                                default: return '';\n                            }\n                        },\n                        from: function() {\n                            return '';\n                        }\n                    }\n                }\n            });\n\n            // Add the event listener to the clustering slider.\n            clusterSlider.noUiSlider.on('update', updateClusterSlider);\n\n            // Figure out dimensions for clustering slider.\n            clusterSlider.style = 'margin-top: 20px;';\n\n            var btH = clusterButton.getBoundingClientRect().height;\n            var ctH = ctrlDiv.getBoundingClientRect().height;\n\n            clusterSlider.style.height = (height - btH - ctH - 120) + 'px';\n\n            // Add radio buttons for geometric/decomposed centroid calculation.\n            var radio = document.createElement('input');\n            radio.type = 'radio';\n            radio.name = 'centroid-type';\n            radio.value = 'geometric';\n            radio.style = 'margin-top: 40px';\n            radio.checked = true;\n            radio.addEventListener('click', radioClick);\n\n            var label = document.createElement('label');\n            label.appendChild(radio);\n            label.appendChild(document.createTextNode(langStrings.geometrics));\n            clusterSlider.appendChild(label);\n\n            // No decomposed button when using LORD.\n            if (Object.keys(lordLinks).length == 0) {\n\n                radio = document.createElement('input');\n                radio.type = 'radio';\n                radio.name = 'centroid-type';\n                radio.value = 'decomposed';\n                radio.addEventListener('click', radioClick);\n\n                label = document.createElement('label');\n                label.appendChild(radio);\n                label.appendChild(document.createTextNode(langStrings.decomposed));\n                clusterSlider.appendChild(label);\n            }\n        }\n\n        /**\n         * Event listener for radio buttons, which swaps centroid types when called.\n         */\n        function radioClick() {\n\n            useGeometricCentroids = this.value == 'geometric' ? true : false;\n            graph.selectAll('.centroid').remove();\n\n            // Fake student menu options array, not available here.\n            var options = [],\n                i = 0,\n                student;\n            for (student in hullCentroids) {\n\n                options[i++] = {\n                    value:    student,\n                    selected: true,\n                    colour:   hullCentroids[student].colour\n                };\n            }\n\n            // Calculate the centroids and restart clustering.\n            if (useGeometricCentroids) {\n                getGeometricCentroids(options);\n            } else {\n                getDecomposedCentroids(options);\n            }\n            doCluster();\n        }\n\n        /**\n         * Event listener for cluster slider, which controls certain aspects of the\n         * clustering stage.\n         *\n         * @param {array} values - The slider values\n         * @param {number} handle - The slider handle, index into values array\n         */\n        function updateClusterSlider(values, handle) {\n\n            var radios,\n                r;\n\n            switch (parseInt(values[handle])) {\n\n                // Default position, graph is shown with student centroids.\n                case 1:\n\n                    // Don't jump from 3 to 1, step to 2 instead.\n                    if (clusterSliderValue == 3) {\n                        clusterSlider.noUiSlider.set(2);\n                        break;\n                    }\n                    clusterSliderValue = 1;\n                    clusteringCase1();\n\n                    // If not clustering, then enable centroid type radio buttons.\n                    if (!clustering) {\n                        radios = document.getElementsByName('centroid-type');\n                        for (r in radios) {\n                            radios[r].disabled = false;\n                        }\n                    }\n                    break;\n\n                // Position 2 removes graph and scales student centroids.\n                case 2:\n\n                    clusterSliderValue = 2;\n                    clusteringCase2();\n\n                    // Disable centroid type radio buttons.\n                    radios = document.getElementsByName('centroid-type');\n                    for (r in radios) {\n                        radios[r].disabled = true;\n                    }\n\n                    // Disable play and step buttons.\n                    document.getElementById('play-pause').disabled = true;\n                    document.getElementById('play-step').disabled = true;\n\n                    // Student drag on, but not allowed right now, so change message.\n                    if (document.getElementById('dragdrop').innerHTML == langStrings.dragon) {\n                        document.getElementById('dragdrop').innerHTML = '--';\n                    }\n                    break;\n\n                // Position 3 allows selection of the number of clusters.\n                case 3:\n\n                    // If slider was at 1, do not go directly to 3, go to 2 instead.\n                    if (clusterSliderValue == 1) {\n                        clusterSlider.noUiSlider.set(2);\n                        break;\n                    }\n                    clusterSliderValue = 3;\n                    clusteringCase3();\n\n                    if (!clustering) {\n                        // Text box for k-value user input.\n                        var tb = '<input type=\"text\" placeholder=\"' + langStrings.numclusters +\n                            '\" id=\"num-clusters\" size=\"8\" pattern=\"[0-9]{1,2}\">';\n\n                        document.getElementById('cluster-text').innerHTML = tb;\n                    }\n\n                    // Enable play and step buttons, unless reached convergence.\n                    document.getElementById('play-pause').disabled = false;\n                    document.getElementById('play-step').disabled = false;\n\n                    if (document.getElementById('clustering').innerHTML == langStrings.convergence) {\n                        document.getElementById('play-pause').disabled = true;\n                        document.getElementById('play-step').disabled = true;\n                    }\n\n                    // Student drag message was changed, reset it.\n                    if (document.getElementById('dragdrop').innerHTML == '--') {\n                        document.getElementById('dragdrop').innerHTML = langStrings.dragon;\n                    }\n                    break;\n            }\n        }\n\n        /**\n         * Called to show the original graph and unscaled user centroids.\n         */\n        function clusteringCase1() {\n\n            drawGraphNew(false);\n            graphNodes.on('mouseover', null).on('mouseout', null);\n            drawAnimatedCentroids(1.0, 0, 0, animTime);\n            setTimeout(function() {\n                ddd.selectAll('.centroid').raise();\n            }, 100);\n        }\n\n        /**\n         * Called to remove the original graph and scale the user centroids.\n         */\n        function clusteringCase2() {\n\n            graphNodes.transition(trans).style('opacity', 0.0);\n            graphLinks.transition(trans).style('opacity', 0.0);\n            ddd.selectAll('.clustering-centroid')\n                .transition(trans).style('opacity', 0.0);\n            ddd.selectAll('.cluster-hull').transition(trans).style('opacity', 0.0);\n\n            setTimeout(function() {\n                graphNodes.style('display', 'none');\n                graphLinks.style('display', 'none');\n                ddd.selectAll('.clustering-centroid').style('display', 'none');\n                ddd.selectAll('.cluster-hull').style('display', 'none');\n            }, animTime);\n\n            if (!clustering && document.getElementById('cluster-text')) {\n                document.getElementById('cluster-text').innerHTML = langStrings.numclusters;\n            }\n\n            // Get scale value and centroid point.\n            var sctrd = getScaleAndCentroid();\n            if (sctrd === null) {\n                return;\n            }\n            coordsData.scale = sctrd[2];\n            replayCentroid = sctrd;\n\n            setTimeout(function() {\n                drawAnimatedCentroids(sctrd[2], sctrd[0], sctrd[1], animTime);\n            }, animTime / 2);\n        }\n\n        /**\n         * Called to show the clustering centroids and hulls.\n         */\n        function clusteringCase3() {\n\n            ddd.selectAll('.clustering-centroid')\n                .transition(trans)\n                .style('display', 'block')\n                .style('opacity', 1.0);\n\n            ddd.selectAll('.cluster-hull')\n                .transition(trans)\n                .style('display', 'block')\n                .style('opacity', 1.0);\n\n            ddd.selectAll('.clustering-centroid').raise();\n        }\n\n        /**\n         * Draws the student centroids.\n         *\n         * @param {number} scale - The scale at which to draw the centroids\n         * @param {number} cx - The centroid x\n         * @param {number} cy - The centroid y\n         * @param {number} t - The time of transition duration\n         */\n        function drawAnimatedCentroids(scale, cx, cy, t) {\n\n            var o = 14,\n                x,\n                y,\n                dx,\n                dy,\n                points,\n                centreX = width / 2,\n                centreY = height / 2,\n                key;\n\n            if (!scaledCentroids) {\n                scaledCentroids = {};\n                for (key in hullCentroids) {\n                    scaledCentroids[key] = {x: 0, y: 0};\n                }\n            }\n\n            coordsData.centre = {x: cx, y: cy};\n\n            // Scale and translate points.\n            for (key in hullCentroids) {\n\n                x = hullCentroids[key].x;\n                y = hullCentroids[key].y;\n\n                dx = (x - cx) * scale;\n                dy = (y - cy) * scale;\n\n                if (scale == 1.0 && cx == 0 && cy == 0) {\n                    x = cx + dx;\n                    y = cy + dy;\n                } else {\n                    x = centreX + dx;\n                    y = centreY + dy;\n                }\n\n                // Store scaled centroid.\n                scaledCentroids[key].x = x;\n                scaledCentroids[key].y = y;\n\n                points = x + ',' + (y - o) + ' ' + (x + o) + ',' + (y + o) + ' ' + (x - o) + ',' + (y + o);\n\n                ddd.select('#centroid-' + key).transition().duration(t).attr('points', points);\n            }\n\n            // Centroid debugging.\n            var forwardScaling = function(x, y) {\n                // Scale to graphing space.\n                x *= coordsData.distance;\n                x += coordsData.originalx;\n\n                y *= coordsData.distance;\n                y += coordsData.originaly;\n\n                // Scale to scaled clustering area.\n                x -= coordsData.centre.x;\n                x *= coordsData.scale;\n                x += width / 2;\n\n                y -= coordsData.centre.y;\n                y *= coordsData.scale;\n                y += height / 2;\n\n                return {x: x, y: y};\n            };\n            for (key in serverCentroids) {\n                var scaled = forwardScaling(serverCentroids[key].x, serverCentroids[key].y);\n                x = scaled.x;\n                y = scaled.y;\n\n                ddd.select('#server-centroid-' + key)\n                    .transition()\n                    .duration(t)\n                    .attr('cx', x)\n                    .attr('cy', y);\n            }\n        }\n\n        /**\n         * Called to get a scale value and new centroid for cluster slider position 2.\n         *\n         * @return {array}\n         */\n        function getScaleAndCentroid() {\n\n            var arr = [],\n                key;\n\n            // Centroids move around during replay, use other function.\n            if (replaying) {\n                return getReplayScaleAndCentroid();\n            }\n\n            // Gather the student data points into an array.\n            for (key in hullCentroids) {\n                arr[arr.length] = [hullCentroids[key].x, hullCentroids[key].y];\n            }\n\n            var ctdOb = getBoxCentroid(arr);\n            if (ctdOb === null) {\n                return null;\n            }\n            var ctd = [ctdOb.x, ctdOb.y];\n\n            // Find the farthest points from the centroid in x and y directions.\n            var dx,\n                dy,\n                fxkey,\n                fykey,\n                maxX = 0,\n                maxY = 0;\n\n            for (key in hullCentroids) {\n\n                dx = Math.abs(hullCentroids[key].x - ctd[0]);\n                dy = Math.abs(hullCentroids[key].y - ctd[1]);\n\n                if (dx > maxX) {\n                    maxX = dx;\n                    fxkey = key;\n                }\n                if (dy > maxY) {\n                    maxY = dy;\n                    fykey = key;\n                }\n            }\n\n            // Handle case where there is only one data point.\n            if (fykey === undefined && fxkey === undefined) {\n                ctd[2] = 1.0;\n                return ctd;\n            }\n\n            // Use farthest points to get scales.\n            var newx = (hullCentroids[fxkey].x - ctd[0]) + width / 2;\n            var newy = (hullCentroids[fxkey].y - ctd[1]) + height / 2;\n            var ctdX = getScale(newx, newy, width / 2, height / 2);\n\n            newx = (hullCentroids[fykey].x - ctd[0]) + width / 2;\n            newy = (hullCentroids[fykey].y - ctd[1]) + height / 2;\n            var ctdY = getScale(newx, newy, width / 2, height / 2);\n\n            // Want smallest value.\n            ctd[2] = ctdX < ctdY ? ctdX : ctdY;\n            ctd[2] *= 0.9;\n\n            return ctd;\n        }\n\n        /**\n         * Called to get the scale and centroid values during replay. Rather\n         * than current student centroid positions, all future student centroid\n         * positions are considered. This keeps everything on screen when\n         * student centroids start moving around.\n         *\n         * @return {array}\n         */\n        function getReplayScaleAndCentroid() {\n\n            var arr = [],\n                x = 0,\n                y = 0,\n                iter;\n\n            // Use the replay data to gather all future student centroid points.\n            for (iter in replayData) {\n                if (iter >= 0 && iter != 1) {\n                    continue;\n                }\n                for (var clusternum in replayData[iter]) {\n                    for (var member in replayData[iter][clusternum].members) {\n\n                        x = replayData[iter][clusternum].members[member].x;\n                        x = x * coordsScale + coordsData.originalx;\n\n                        y = replayData[iter][clusternum].members[member].y;\n                        y = y * coordsScale + coordsData.originaly;\n\n                        arr[arr.length] = [x, y];\n                    }\n                }\n            }\n\n            // Get the box centroid of the future student centroid points.\n            var ctdOb = getBoxCentroid(arr);\n            if (ctdOb === null) {\n                return null;\n            }\n            var ctd = [ctdOb.x, ctdOb.y];\n\n            // Find the farthest points from the centroid in x and y directions.\n            var dx,\n                dy,\n                fxkey,\n                fykey,\n                maxX = 0,\n                maxY = 0,\n                i;\n\n            for (i = 0; i < arr.length; i++) {\n\n                dx = Math.abs(arr[i][0] - ctd[0]);\n                dy = Math.abs(arr[i][1] - ctd[1]);\n\n                if (dx > maxX) {\n                    maxX = dx;\n                    fxkey = i;\n                }\n                if (dy > maxY) {\n                    maxY = dy;\n                    fykey = i;\n                }\n            }\n\n            // Handle case where there is only one data point.\n            if (fykey === undefined && fxkey === undefined) {\n                ctd[2] = 1.0;\n                return ctd;\n            }\n\n            // Use farthest points to get scales.\n            var newx = (arr[fxkey][0] - ctd[0]) + width / 2;\n            var newy = (arr[fxkey][1] - ctd[1]) + height / 2;\n            var ctdX = getScale(newx, newy, width / 2, height / 2);\n\n            newx = (arr[fykey][0] - ctd[0]) + width / 2;\n            newy = (arr[fykey][1] - ctd[1]) + height / 2;\n            var ctdY = getScale(newx, newy, width / 2, height / 2);\n\n            // Want smallest value.\n            ctd[2] = ctdX < ctdY ? ctdX : ctdY;\n            ctd[2] *= 0.9;\n\n            return ctd;\n        }\n\n        /**\n         * Function to get a centroid based on a bounding box around the points.\n         *\n         * @param {array} arr - An array of points\n         * @return {object}\n         */\n        function getBoxCentroid(arr) {\n\n            // Sanity check.\n            if (arr.length == 0) {\n                return null;\n            } else if (arr.length == 1) {\n                return {x: arr[0][0], y: arr[0][1]};\n            }\n\n            // Find max and min coordinate values to define box.\n            var maxX = 0,\n                maxY = 0,\n                minX = width,\n                minY = height,\n                i,\n                x,\n                y;\n\n            for (i = 0; i < arr.length; i++) {\n\n                x = arr[i][0];\n                y = arr[i][1];\n\n                if (x > maxX) {\n                    maxX = x;\n                }\n                if (x < minX) {\n                    minX = x;\n                }\n                if (y > maxY) {\n                    maxY = y;\n                }\n                if (y < minY) {\n                    minY = y;\n                }\n            }\n            // Return box centre point.\n            return {x: (maxX + minX) / 2, y: (maxY + minY) / 2};\n        }\n\n        /**\n         * Find a scale value that puts the farthest point at the window border,\n         * adapted from https://stackoverflow.com/questions/45367821/where-a-vector-\n         * would-intersect-the-screen-if-extended-towards-its-direction-sw.\n         *\n         * @param {number} p1x - Point x coord.\n         * @param {number} p1y - Point y coord.\n         * @param {number} p2x - Centre x coord.\n         * @param {number} p2y - Centre y coord.\n         * @return {number}\n         */\n        function getScale(p1x, p1y, p2x, p2y) {\n\n            // Distance.\n            var dx = p1x - p2x;\n            var dy = p1y - p2y;\n\n            // Border intersect.\n            var bx = dx > 0 ? width : 0;\n            var by = dy > 0 ? height : 0;\n\n            // Scale value.\n            var tx = (bx - width / 2) / dx;\n            var ty = (by - height / 2) / dy;\n\n            // If dx or dy is 0, tx/ty is infinite.\n            if (isFinite(tx) && isFinite(ty) && tx <= ty) {\n                return tx;\n            } else if (isFinite(tx) && !isFinite(ty)) {\n                return tx;\n            } else if (isFinite(ty)) {\n                return ty;\n            } else {\n                return 1.0;\n            }\n        }\n\n        /**\n         * Called to make the log panel in the clustering screen.\n         */\n        function makeLogPanel() {\n\n            // Get the log panel div.\n            var lp = document.getElementById('log-panel');\n            lp.style.width = legendWidth + 'px';\n\n            // Make the copy button.\n            var copy = document.createElement('button');\n            copy.innerHTML = langStrings.copy;\n            copy.className = \"btn btn-secondary mb-1\";\n\n            copy.addEventListener('click', function() {\n                window.getSelection().selectAllChildren(logPanel);\n                document.execCommand('copy');\n            });\n\n            if (version36) {\n                copy.style.marginLeft = '10px';\n            } else {\n                copy.style.position = 'absolute';\n                copy.style.right = (legendWidth - 40) + 'px';\n            }\n\n            lp.appendChild(copy);\n\n            // Make the print button.\n            var print = document.createElement('button');\n            print.innerHTML = langStrings.print;\n            print.className = \"btn btn-secondary mb-1\";\n            print.addEventListener('click', function() {\n\n                // Adapted from https://stackoverflow.com/questions/4373922/how-to-\n                // print-selected-div-instead-complete-page.\n                var mywindow = window.open();\n\n                mywindow.document.write('<html><head></head><body>');\n                mywindow.document.write(logPanel.innerHTML);\n                mywindow.document.write('</body></html>');\n\n                mywindow.print();\n                mywindow.close();\n            });\n\n            if (version36) {\n                print.style.marginLeft = '10px';\n            } else {\n                print.style.position = 'absolute';\n                print.style.right = (legendWidth - 100) + 'px';\n            }\n\n            lp.appendChild(print);\n\n            // Make the log panel.\n            logPanel = document.createElement('div');\n            logPanel.readOnly = true;\n            logPanel.style.overflow = 'scroll';\n\n            logPanel.style.width = '200px';\n            logPanel.style.height = height + 'px';\n\n            logPanel.style.resize = 'none';\n            logPanel.style.border = '2px solid black';\n\n            if (!version36) {\n                logPanel.style.position = 'absolute';\n                logPanel.style.right = '6px';\n                logPanel.style.top = '110px';\n            }\n\n            lp.appendChild(logPanel);\n        }\n\n        /**\n         * Draws the student centroids with attached event listeners. Centroids\n         * can be dragged and dropped into new cluster, or clicked on to\n         * annotate, or hovered over to view the student's graph.\n         */\n        function drawCentroids() {\n\n            var key;\n            for (key in hullCentroids) {\n\n                graph.append('polygon')\n                    .attr('class', 'centroid')\n                    .attr('id', 'centroid-' + key)\n                    .attr('points', getPolygonPoints(hullCentroids[key].x, hullCentroids[key].y))\n                    .style('stroke', 'black')\n                    .style('stroke-width', '3px')\n                    .style('fill', hullCentroids[key].colour)\n                    .call(ddd.drag()\n                          .on('start', centroidDragStart.bind(this, key))\n                          .on('drag', centroidDrag.bind(this, key))\n                          .on('end', centroidDragEnd.bind(this, key)))\n                    .on('mouseout', clusterMouseout)\n                    .on('mouseover', clusterMouseover.bind(this, key))\n                    .on('click', stopProp)\n                    .on('click.centroidClick', centroidClick.bind(this, realUserIds[key], key, false));\n            }\n\n            if (debugCentroids) {\n                for (key in serverCentroids) {\n                    var cx = (serverCentroids[key].x * coordsData.distance) + coordsData.originalx;\n                    var cy = (serverCentroids[key].y * coordsData.distance) + coordsData.originaly;\n                    graph.append('circle')\n                        .attr('class', 'server-centroid')\n                        .attr('id', 'server-centroid-' + key)\n                        .attr('r', 5)\n                        .attr('cx', cx)\n                        .attr('cy', cy)\n                        .style('fill', 'black');\n                }\n            }\n        }\n\n        /**\n         * Called to get a string representation of coordinate points to draw\n         * a polygon (triangle).\n         *\n         * @param {number} x - The x coordinate value\n         * @param {number} y - The y coordinate value\n         * @return {string}\n         */\n        function getPolygonPoints(x, y) {\n\n            var o = 14;\n            return x + ',' + (y - o) + ' ' + (x + o) + ',' + (y + o) + ' ' + (x - o) + ',' + (y + o);\n        }\n\n        /**\n         * Called to drag a student centroid to a new cluster. This function\n         * draws a semi-transparent triangle at the mouse to drag.\n         *\n         * @param {number} studentKey - The student's id number\n         */\n        function centroidDragStart(studentKey) {\n\n            if (!canDragCentroid()) {\n                return;\n            }\n\n            centroidDragTime = Date.now();\n\n            graph.append('polygon')\n                .attr('class', 'dragged-centroid')\n                .attr('id', 'dragged-' + studentKey)\n                .attr('points', getPolygonPoints(ddd.event.x, ddd.event.y))\n                .style('stroke', 'black')\n                .style('stroke-width', '3px')\n                .style('fill', hullCentroids[studentKey].colour)\n                .style('opacity', 0.5);\n        }\n\n        /**\n         * Called to drag a student centroid to a new cluster. This function\n         * moves the semi-transparent triangle with the mouse.\n         *\n         * @param {number} studentKey - The student's id number\n         */\n        function centroidDrag(studentKey) {\n\n            if (!canDragCentroid()) {\n                return;\n            }\n\n            ddd.select('#dragged-' + studentKey)\n                .attr('points', getPolygonPoints(ddd.event.x, ddd.event.y));\n        }\n\n        /**\n         * Called to drag a student centroid to a new cluster.\n         *\n         * @param {number} studentKey - The student's id number.\n         */\n        function centroidDragEnd(studentKey) {\n\n            ddd.selectAll('.dragged-centroid').remove();\n\n            if (!canDragCentroid()) {\n                return;\n            }\n\n            // User clicked for text box, does not want to drag?\n            if (Date.now() - centroidDragTime < 300) {\n                centroidClick(realUserIds[studentKey], studentKey, false);\n                return;\n            }\n\n            // Reassign student to new cluster.\n            scaledCentroids[studentKey].ci = getNewCluster(ddd.event);\n\n            // Calculate the new centroids.\n            var newCentroids = [];\n            for (var i = 0; i < centroids.length; i++) {\n                newCentroids[i] = getNewCentroid(i);\n            }\n\n            // Swap centroid sets.\n            oldCentroids = centroids;\n            centroids = newCentroids;\n\n            drawAnimatedClusteringCentroids(animTime);\n\n            // Update clustering status text.\n            var out = langStrings.iteration + ': ' + clusterIters;\n            document.getElementById('clustering').innerHTML = out;\n            document.getElementById('dragdrop').innerHTML = langStrings.dragon;\n\n            // Show clustering results in log panel.\n            var clusterMembers = logClusteringResults(clusterIters);\n\n            // Log clustering iteration at server.\n            coordsData.iteration = clusterIters++;\n            sendClustersToServer(clusterMembers);\n        }\n\n        /**\n         * Called to get the clustering centroid closest to a student centroid.\n         *\n         * @param {object} coord - Incoming coordinate.\n         * @return {number} newK - The new cluster number.\n         */\n        function getNewCluster(coord) {\n\n            // Find nearest cluster to where the student centroid was dropped.\n            var min = Number.MAX_SAFE_INTEGER,\n                newK = -1;\n\n            for (var i = 0, d, dx, dy; i < centroids.length; i++) {\n                dx = coord.x - centroids[i].x;\n                dy = coord.y - centroids[i].y;\n                d = Math.sqrt(dx * dx + dy * dy);\n\n                if (d < min) {\n                    min = d;\n                    newK = i;\n                }\n            }\n\n            return newK;\n        }\n\n        /**\n         * Called to test if it is okay to drag a student centroid.\n         *\n         * @return {boolean}\n         */\n        function canDragCentroid() {\n\n            // Not before clustering has started and not during replay.\n            if (!centroids || !document.getElementById('clustering')) {\n                return false;\n            }\n\n            // Not after convergence has been reached.\n            if (document.getElementById('clustering').innerHTML == langStrings.convergence) {\n                return false;\n            }\n\n            // Not until all students are in a cluster, messes with the replay.\n            for (var key in scaledCentroids) {\n                if (scaledCentroids[key].ci === undefined) {\n                    return false;\n                }\n            }\n\n            // Not if cluster slider is moved down.\n            if (clusterSliderValue != 3) {\n                return false;\n            }\n\n            return true;\n        }\n\n        /**\n         * Event listener for student centroids during clustering.\n         */\n        function clusterMouseout() {\n\n            if (noCentroidMouse) {\n                return;\n            }\n\n            ddd.selectAll('.text').remove();\n            ddd.selectAll('rect').remove();\n\n            if (clustering && (replaying || clusterSliderValue == 3) &&\n                getCurrentIteration() !== null) {\n                graphNodes.style('display', 'none').style('opacity', 0.0);\n                graphLinks.remove();\n            }\n        }\n\n        /**\n         * Event listener for mouseover during clustering stage.\n         *\n         * @param {number} sid - The student id\n         */\n        function clusterMouseover(sid) {\n\n            if (noCentroidMouse) {\n                return;\n            }\n\n            ddd.selectAll('.text').remove();\n            ddd.selectAll('rect').remove();\n\n            var r = graph.append('rect');\n            var rtrn = [0];\n\n            // Figure out which centroid coordinates to use.\n            var centres = clusterSliderValue == 1 ? hullCentroids : scaledCentroids;\n\n            // Make the text.\n            var studentName = sid;\n            users.forEach(function(u) {\n                if (u.id == sid) {\n                    studentName = showStudentNames == 1 ? u.firstname + ' ' + u.lastname : u.id;\n                }\n            });\n\n            var rWidth = showStudentNames == 1 ? 70 : 30;\n            var t = graph.append('text')\n                .attr('class', 'text')\n                .attr('id', 't-' + sid)\n                .attr('y', centres[sid].y + 32)\n                .attr('dy', '.40em')\n                .style('pointer-events', 'none')\n                .text(studentName)\n                .call(wrap, rWidth, centres[sid].x - (rWidth + 6) / 2 + 8, rtrn);\n\n            // Get rectangle height.\n            var rh = rtrn[0] * 18 + 16;\n\n            // If node near bottom of graph area, move text above node.\n            if (rh + centres[sid].y + 10 >= height) {\n                t.attr('y', height - rh - (height - centres[sid].y))\n                    .text(studentName)\n                    .call(wrap, rWidth, centres[sid].x - (rWidth + 6) / 2 + 8, rtrn);\n            }\n\n            // Make the rectange background.\n            r.attr('id', 'r-' + sid)\n                .attr('x', centres[sid].x - (rWidth + 6) / 2)\n                .attr('y', rh + centres[sid].y + 10 <= height ? centres[sid].y + 16 :\n                      height - rh - 16 - (height - centres[sid].y))\n                .attr('width', rWidth + 16)\n                .attr('height', rh)\n                .style('stroke', 'black')\n                .style('fill', 'yellow');\n\n            // Draw the student's behaviour graph.\n            if (clustering && (replaying || clusterSliderValue == 3) &&\n                getCurrentIteration() !== null) {\n\n                graphLinks.remove();\n\n                // Get the non-visible nodes.\n                var notNodes = {},\n                    i;\n                for (i = 0; i < graphData.nodes.length; i++) {\n                    if (!graphData.nodes[i].visible) {\n                        notNodes[graphData.nodes[i].id] = 1;\n                    }\n                }\n\n                // Build a linkset for the student.\n                var links = {},\n                    link,\n                    src,\n                    trg,\n                    id;\n                for (i = sliderValues[0]; i < graphData.edges[sid].length && i <= sliderValues[1]; i++) {\n\n                    // Parse out the souce and target ids.\n                    link = graphData.edges[sid][i];\n\n                    if (typeof link.source == 'string') {\n                        src = parseInt(link.source);\n                        trg = parseInt(link.target);\n                    } else {\n                        src = link.source.id;\n                        trg = link.target.id;\n                    }\n\n                    // Don't link to an invisible node.\n                    if (notNodes[src] || notNodes[trg]) {\n                        continue;\n                    }\n                    id = src + '_' + trg;\n\n                    // Add the link to the link set, considering weights.\n                    if (!links[id]) {\n                        links[id] = 1;\n                    } else {\n                        links[id]++;\n                    }\n                }\n\n                // Make the actual student links.\n                var linx = [],\n                    split,\n                    colour = graphData.edges[sid][0].colour;\n\n                for (link in links) {\n                    split = link.split('_');\n\n                    linx[linx.length] = {\n                        source: split[0],\n                        target: split[1],\n                        weight: links[link],\n                        colour: colour\n                    };\n                }\n\n                // Keep the section to module links.\n                for (i = 0; i < graphData.links.length; i++) {\n                    linx[linx.length] = graphData.links[i];\n                }\n\n                // Show the graph with student links.\n                simulation.force('link').links(linx);\n                makeLinks(linx);\n\n                graphNodes\n                    .style('display', 'block')\n                    .style('opacity', 1.0);\n\n                simulation.restart();\n                setTimeout(function() {\n                    simulation.stop();\n                    graphNodes.lower();\n                    graphLinks.lower();\n                }, 1);\n            }\n        }\n\n        /**\n         * Event listener for left-clicking a student centroid triangle or a clustering\n         * centroid X. Creates a text area and button for entering comments about a centroid.\n         *\n         * @param {number} user - The student/teacher id\n         * @param {number} key - The centroid array key\n         * @param {boolean} cluster - A flag to detemine which centroids to use\n         */\n        function centroidClick(user, key, cluster) {\n\n            // Only show when clustering and only one per user.\n            if (!clustering ||\n                document.getElementById('textbox-' + user) ||\n                getCurrentIteration() === null) {\n                return;\n\n            } else if (!replaying && clustering && clusterSliderValue != 3) {\n                // Fixes bug where comment box showing when should not.\n                return;\n            }\n\n            // The text box.\n            var textBox = document.createElement('textarea');\n            textBox.id = 'textbox-' + user;\n            textBox.style.resize = 'both';\n            textBox.style.position = 'absolute';\n\n            // Show previous comment if exists.\n            if (comments[user]) {\n                textBox.value = comments[user];\n            }\n            // Do not allow researcher to alter another user's comments.\n            if (replayUserId != userId) {\n                textBox.readOnly = true;\n            }\n            document.body.appendChild(textBox);\n\n            // Determine position of text area relative to the node.\n            var bnds = textBox.getBoundingClientRect();\n            var gbb = document.getElementsByTagName('svg')[0].getBoundingClientRect();\n\n            // Centre if possible, move left or right if centroid close to edge.\n            var scx = cluster ? centroids[key].x : scaledCentroids[key].x;\n            var tbx;\n            if (scx + bnds.width / 2 >= width) {\n                tbx = scx + gbb.x - bnds.width;\n            } else if (scx - bnds.width / 2 <= 0) {\n                tbx = scx + gbb.x;\n            } else {\n                tbx = scx + gbb.x - (bnds.width / 2);\n            }\n            textBox.style.left = tbx + 'px';\n\n            // Below centroid if possible, above if too close to bottom edge.\n            var scy = cluster ? centroids[key].y : scaledCentroids[key].y;\n            var tby = scy + 190 >= height ? scy + 140 : scy + 290;\n            if (cluster) {\n                tby = scy + 165 >= height ? scy + 165 : scy + 265;\n            }\n            textBox.style.top = tby + 'px';\n\n            // The save button.\n            var save = document.createElement('button');\n            save.innerHTML = replayUserId == userId ? langStrings.save : langStrings.close;\n            save.id = user;\n\n            // Position based on text area position.\n            save.style.position = 'absolute';\n            save.style.left = tbx + 'px';\n            save.style.top = (tby + bnds.height) + 'px';\n\n            document.body.appendChild(save);\n\n            textBox.focus();\n\n            // Click listener for text box.\n            textBox.addEventListener('click', function() {\n\n                // Bring to front if behind.\n                this.parentNode.appendChild(this);\n                save.parentNode.appendChild(save);\n\n                // Allow select text with mouse drag.\n                this.focus();\n            });\n\n            // Move save button when textarea is resized.\n            var dragging = false;\n\n            textBox.addEventListener('mousedown', function() {\n                dragging = true;\n            });\n\n            textBox.addEventListener('mouseup', function() {\n                dragging = false;\n            });\n\n            textBox.addEventListener('mousemove', function() {\n                if (dragging) {\n                    bnds = this.getBoundingClientRect();\n                    save.style.left = tbx + 'px';\n                    save.style.top = (tby + bnds.height) + 'px';\n                }\n            });\n\n            // Click listener for save button.\n            save.addEventListener('click', function() {\n\n                if (replayUserId == userId) {\n\n                    // The comment data for the server.\n                    var data = {\n                        'coordsid':  lastChange,\n                        'clusterid': coordsData.clusterId,\n                        'studentid': user,\n                        'remark':    textBox.value\n                    };\n\n                    // Do not call server if the text area is empty or has not changed.\n                    if (textBox.value != '' && textBox.value != comments[user]) {\n\n                        comments[user] = textBox.value;\n                        callServer(commentsScript, data);\n                    }\n                }\n\n                document.body.removeChild(textBox);\n                document.body.removeChild(save);\n            });\n        }\n        // End of modular encapsulation, start the program.\n        init(incoming);\n    };\n    return behaviourAnalytics;\n});\n"],"file":"behaviour-analytics.min.js"}